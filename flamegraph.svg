<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1600" height="934" onload="init(evt)" viewBox="0 0 1600 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1490" y="24.00">Search</text><text id="matched" x="1490" y="917.00"> </text><svg id="frames" x="10" width="1580" total_samples="2905"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="0.0000%" y="853" width="0.0344%" height="15" fill="rgb(234,134,0)" fg:x="0" fg:w="1"/><text x="0.1875%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="0.0344%" y="789" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="1" fg:w="1"/><text x="0.2219%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="0.0344%" y="773" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="1" fg:w="1"/><text x="0.2219%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="0.0344%" y="757" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="1" fg:w="1"/><text x="0.2219%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="0.0344%" y="741" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="1" fg:w="1"/><text x="0.2219%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.07%)</title><rect x="0.0344%" y="853" width="0.0688%" height="15" fill="rgb(209,109,0)" fg:x="1" fg:w="2"/><text x="0.2219%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.07%)</title><rect x="0.0344%" y="837" width="0.0688%" height="15" fill="rgb(193,93,0)" fg:x="1" fg:w="2"/><text x="0.2219%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.07%)</title><rect x="0.0344%" y="821" width="0.0688%" height="15" fill="rgb(221,121,0)" fg:x="1" fg:w="2"/><text x="0.2219%" y="831.50"></text></g><g><title>pillar::utils::format::fast_zip::{{closure}} (2 samples, 0.07%)</title><rect x="0.0344%" y="805" width="0.0688%" height="15" fill="rgb(52,167,167)" fg:x="1" fg:w="2"/><text x="0.2219%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (1 samples, 0.03%)</title><rect x="0.0688%" y="789" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="2" fg:w="1"/><text x="0.2563%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (1 samples, 0.03%)</title><rect x="0.0688%" y="773" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="2" fg:w="1"/><text x="0.2563%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.0688%" y="757" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="2" fg:w="1"/><text x="0.2563%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="0.0688%" y="741" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="2" fg:w="1"/><text x="0.2563%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="0.0688%" y="725" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="2" fg:w="1"/><text x="0.2563%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="0.1033%" y="837" width="0.0344%" height="15" fill="rgb(208,108,0)" fg:x="3" fg:w="1"/><text x="0.2908%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.07%)</title><rect x="0.1377%" y="837" width="0.0688%" height="15" fill="rgb(191,91,0)" fg:x="4" fg:w="2"/><text x="0.3252%" y="847.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.07%)</title><rect x="0.1377%" y="821" width="0.0688%" height="15" fill="rgb(245,145,0)" fg:x="4" fg:w="2"/><text x="0.3252%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="0.1377%" y="805" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="4" fg:w="2"/><text x="0.3252%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="0.1377%" y="789" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="4" fg:w="2"/><text x="0.3252%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="0.1377%" y="773" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="4" fg:w="2"/><text x="0.3252%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.07%)</title><rect x="0.1377%" y="757" width="0.0688%" height="15" fill="rgb(191,91,0)" fg:x="4" fg:w="2"/><text x="0.3252%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="0.1377%" y="741" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="4" fg:w="2"/><text x="0.3252%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.17%)</title><rect x="0.2065%" y="837" width="0.1721%" height="15" fill="rgb(239,139,0)" fg:x="6" fg:w="5"/><text x="0.3940%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.07%)</title><rect x="0.3787%" y="837" width="0.0688%" height="15" fill="rgb(234,134,0)" fg:x="11" fg:w="2"/><text x="0.5662%" y="847.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="0.4475%" y="837" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="13" fg:w="2"/><text x="0.6350%" y="847.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.03%)</title><rect x="0.4819%" y="821" width="0.0344%" height="15" fill="rgb(225,125,0)" fg:x="14" fg:w="1"/><text x="0.6694%" y="831.50"></text></g><g><title>[libc.so.6] (9 samples, 0.31%)</title><rect x="0.5164%" y="837" width="0.3098%" height="15" fill="rgb(213,213,64)" fg:x="15" fg:w="9"/><text x="0.7039%" y="847.50"></text></g><g><title>[pillar] (1 samples, 0.03%)</title><rect x="0.8262%" y="837" width="0.0344%" height="15" fill="rgb(226,226,68)" fg:x="24" fg:w="1"/><text x="1.0137%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="0.8262%" y="821" width="0.0344%" height="15" fill="rgb(208,108,0)" fg:x="24" fg:w="1"/><text x="1.0137%" y="831.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="0.8606%" y="837" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="25" fg:w="1"/><text x="1.0481%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="0.8950%" y="837" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="26" fg:w="1"/><text x="1.0825%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.07%)</title><rect x="0.9294%" y="837" width="0.0688%" height="15" fill="rgb(219,119,0)" fg:x="27" fg:w="2"/><text x="1.1169%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="0.9639%" y="821" width="0.0344%" height="15" fill="rgb(205,105,0)" fg:x="28" fg:w="1"/><text x="1.1514%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.10%)</title><rect x="0.9983%" y="837" width="0.1033%" height="15" fill="rgb(227,127,0)" fg:x="29" fg:w="3"/><text x="1.1858%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="1.0671%" y="821" width="0.0344%" height="15" fill="rgb(234,134,0)" fg:x="31" fg:w="1"/><text x="1.2546%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="1.0671%" y="805" width="0.0344%" height="15" fill="rgb(232,132,0)" fg:x="31" fg:w="1"/><text x="1.2546%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="1.0671%" y="789" width="0.0344%" height="15" fill="rgb(203,103,0)" fg:x="31" fg:w="1"/><text x="1.2546%" y="799.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.03%)</title><rect x="1.1015%" y="837" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="32" fg:w="1"/><text x="1.2890%" y="847.50"></text></g><g><title>cfree (6 samples, 0.21%)</title><rect x="1.1360%" y="837" width="0.2065%" height="15" fill="rgb(178,178,51)" fg:x="33" fg:w="6"/><text x="1.3235%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.07%)</title><rect x="1.3425%" y="837" width="0.0688%" height="15" fill="rgb(218,118,0)" fg:x="39" fg:w="2"/><text x="1.5300%" y="847.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="1.4114%" y="837" width="0.0344%" height="15" fill="rgb(216,116,0)" fg:x="41" fg:w="1"/><text x="1.5989%" y="847.50"></text></g><g><title>malloc (5 samples, 0.17%)</title><rect x="1.4458%" y="837" width="0.1721%" height="15" fill="rgb(221,221,67)" fg:x="42" fg:w="5"/><text x="1.6333%" y="847.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="1.6179%" y="837" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="47" fg:w="1"/><text x="1.8054%" y="847.50"></text></g><g><title>[[heap]] (46 samples, 1.58%)</title><rect x="0.1033%" y="853" width="1.5835%" height="15" fill="rgb(224,224,67)" fg:x="3" fg:w="46"/><text x="0.2908%" y="863.50">[..</text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="1.6523%" y="837" width="0.0344%" height="15" fill="rgb(189,189,55)" fg:x="48" fg:w="1"/><text x="1.8398%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="2.1343%" y="757" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="62" fg:w="1"/><text x="2.3218%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="2.1343%" y="741" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="62" fg:w="1"/><text x="2.3218%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.55%)</title><rect x="1.6867%" y="837" width="0.5508%" height="15" fill="rgb(239,139,0)" fg:x="49" fg:w="16"/><text x="1.8742%" y="847.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.10%)</title><rect x="2.1343%" y="821" width="0.1033%" height="15" fill="rgb(235,135,0)" fg:x="62" fg:w="3"/><text x="2.3218%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.10%)</title><rect x="2.1343%" y="805" width="0.1033%" height="15" fill="rgb(204,104,0)" fg:x="62" fg:w="3"/><text x="2.3218%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.10%)</title><rect x="2.1343%" y="789" width="0.1033%" height="15" fill="rgb(248,148,0)" fg:x="62" fg:w="3"/><text x="2.3218%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.10%)</title><rect x="2.1343%" y="773" width="0.1033%" height="15" fill="rgb(204,104,0)" fg:x="62" fg:w="3"/><text x="2.3218%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="2.1687%" y="757" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="63" fg:w="2"/><text x="2.3562%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.10%)</title><rect x="2.2375%" y="837" width="0.1033%" height="15" fill="rgb(234,134,0)" fg:x="65" fg:w="3"/><text x="2.4250%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="2.3064%" y="821" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="67" fg:w="1"/><text x="2.4939%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="2.3064%" y="805" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="67" fg:w="1"/><text x="2.4939%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="2.3064%" y="789" width="0.0344%" height="15" fill="rgb(237,137,0)" fg:x="67" fg:w="1"/><text x="2.4939%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="2.3408%" y="837" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="68" fg:w="2"/><text x="2.5283%" y="847.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2 samples, 0.07%)</title><rect x="2.3408%" y="821" width="0.0688%" height="15" fill="rgb(225,125,0)" fg:x="68" fg:w="2"/><text x="2.5283%" y="831.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (3 samples, 0.10%)</title><rect x="2.5473%" y="821" width="0.1033%" height="15" fill="rgb(100,210,210)" fg:x="74" fg:w="3"/><text x="2.7348%" y="831.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.03%)</title><rect x="2.6506%" y="821" width="0.0344%" height="15" fill="rgb(69,183,183)" fg:x="77" fg:w="1"/><text x="2.8381%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.07%)</title><rect x="2.6850%" y="821" width="0.0688%" height="15" fill="rgb(236,136,0)" fg:x="78" fg:w="2"/><text x="2.8725%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.07%)</title><rect x="2.6850%" y="805" width="0.0688%" height="15" fill="rgb(199,99,0)" fg:x="78" fg:w="2"/><text x="2.8725%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.07%)</title><rect x="2.6850%" y="789" width="0.0688%" height="15" fill="rgb(201,101,0)" fg:x="78" fg:w="2"/><text x="2.8725%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="2.6850%" y="773" width="0.0688%" height="15" fill="rgb(226,126,0)" fg:x="78" fg:w="2"/><text x="2.8725%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.07%)</title><rect x="2.6850%" y="757" width="0.0688%" height="15" fill="rgb(211,111,0)" fg:x="78" fg:w="2"/><text x="2.8725%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.07%)</title><rect x="2.6850%" y="741" width="0.0688%" height="15" fill="rgb(194,94,0)" fg:x="78" fg:w="2"/><text x="2.8725%" y="751.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (11 samples, 0.38%)</title><rect x="2.4096%" y="837" width="0.3787%" height="15" fill="rgb(50,165,165)" fg:x="70" fg:w="11"/><text x="2.5971%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1 samples, 0.03%)</title><rect x="2.7539%" y="821" width="0.0344%" height="15" fill="rgb(231,131,0)" fg:x="80" fg:w="1"/><text x="2.9414%" y="831.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.03%)</title><rect x="2.7539%" y="805" width="0.0344%" height="15" fill="rgb(108,218,218)" fg:x="80" fg:w="1"/><text x="2.9414%" y="815.50"></text></g><g><title>[libc.so.6] (7 samples, 0.24%)</title><rect x="2.7883%" y="837" width="0.2410%" height="15" fill="rgb(213,213,64)" fg:x="81" fg:w="7"/><text x="2.9758%" y="847.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="3.0293%" y="837" width="0.0688%" height="15" fill="rgb(178,178,51)" fg:x="88" fg:w="2"/><text x="3.2168%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.21%)</title><rect x="3.0981%" y="837" width="0.2065%" height="15" fill="rgb(218,118,0)" fg:x="90" fg:w="6"/><text x="3.2856%" y="847.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="3.3046%" y="837" width="0.0344%" height="15" fill="rgb(216,116,0)" fg:x="96" fg:w="1"/><text x="3.4921%" y="847.50"></text></g><g><title>core::fmt::write (9 samples, 0.31%)</title><rect x="3.3391%" y="837" width="0.3098%" height="15" fill="rgb(249,149,0)" fg:x="97" fg:w="9"/><text x="3.5266%" y="847.50"></text></g><g><title>malloc (13 samples, 0.45%)</title><rect x="3.6489%" y="837" width="0.4475%" height="15" fill="rgb(221,221,67)" fg:x="106" fg:w="13"/><text x="3.8364%" y="847.50"></text></g><g><title>[[stack]] (72 samples, 2.48%)</title><rect x="1.6867%" y="853" width="2.4785%" height="15" fill="rgb(222,222,67)" fg:x="49" fg:w="72"/><text x="1.8742%" y="863.50">[[s..</text></g><g><title>pillar::utils::format::fast_zip (2 samples, 0.07%)</title><rect x="4.0964%" y="837" width="0.0688%" height="15" fill="rgb(73,186,186)" fg:x="119" fg:w="2"/><text x="4.2839%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (1 samples, 0.03%)</title><rect x="4.1308%" y="821" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="120" fg:w="1"/><text x="4.3183%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (1 samples, 0.03%)</title><rect x="4.1308%" y="805" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="120" fg:w="1"/><text x="4.3183%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="4.1308%" y="789" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="120" fg:w="1"/><text x="4.3183%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="4.1308%" y="773" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="120" fg:w="1"/><text x="4.3183%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="4.1308%" y="757" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="120" fg:w="1"/><text x="4.3183%" y="767.50"></text></g><g><title>[anon] (3 samples, 0.10%)</title><rect x="4.1652%" y="853" width="0.1033%" height="15" fill="rgb(227,227,69)" fg:x="121" fg:w="3"/><text x="4.3527%" y="863.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="4.1652%" y="837" width="0.1033%" height="15" fill="rgb(242,142,0)" fg:x="121" fg:w="3"/><text x="4.3527%" y="847.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2 samples, 0.07%)</title><rect x="4.1997%" y="821" width="0.0688%" height="15" fill="rgb(225,125,0)" fg:x="122" fg:w="2"/><text x="4.3872%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.28%)</title><rect x="4.2685%" y="853" width="0.2754%" height="15" fill="rgb(179,179,51)" fg:x="124" fg:w="8"/><text x="4.4560%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="4.4750%" y="837" width="0.0688%" height="15" fill="rgb(179,179,51)" fg:x="130" fg:w="2"/><text x="4.6625%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="821" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="805" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="789" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="799.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.03%)</title><rect x="4.5095%" y="773" width="0.0344%" height="15" fill="rgb(192,192,56)" fg:x="131" fg:w="1"/><text x="4.6970%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="757" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="741" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="725" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="4.5095%" y="709" width="0.0344%" height="15" fill="rgb(179,179,51)" fg:x="131" fg:w="1"/><text x="4.6970%" y="719.50"></text></g><g><title>[libc.so.6] (12 samples, 0.41%)</title><rect x="4.6816%" y="837" width="0.4131%" height="15" fill="rgb(213,213,64)" fg:x="136" fg:w="12"/><text x="4.8691%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.14%)</title><rect x="5.0947%" y="837" width="0.1377%" height="15" fill="rgb(219,119,0)" fg:x="148" fg:w="4"/><text x="5.2822%" y="847.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="5.2324%" y="837" width="0.0344%" height="15" fill="rgb(221,221,67)" fg:x="152" fg:w="1"/><text x="5.4199%" y="847.50"></text></g><g><title>[libc.so.6] (22 samples, 0.76%)</title><rect x="4.5439%" y="853" width="0.7573%" height="15" fill="rgb(213,213,64)" fg:x="132" fg:w="22"/><text x="4.7314%" y="863.50"></text></g><g><title>pillar::parser::Token::parse (1 samples, 0.03%)</title><rect x="5.2668%" y="837" width="0.0344%" height="15" fill="rgb(66,180,180)" fg:x="153" fg:w="1"/><text x="5.4543%" y="847.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="5.3012%" y="837" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="154" fg:w="3"/><text x="5.4887%" y="847.50"></text></g><g><title>[pillar] (4 samples, 0.14%)</title><rect x="5.3012%" y="853" width="0.1377%" height="15" fill="rgb(226,226,68)" fg:x="154" fg:w="4"/><text x="5.4887%" y="863.50"></text></g><g><title>[pillar] (1 samples, 0.03%)</title><rect x="5.4045%" y="837" width="0.0344%" height="15" fill="rgb(226,226,68)" fg:x="157" fg:w="1"/><text x="5.5920%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="5.4045%" y="821" width="0.0344%" height="15" fill="rgb(208,108,0)" fg:x="157" fg:w="1"/><text x="5.5920%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="5.4045%" y="805" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="157" fg:w="1"/><text x="5.5920%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="5.4045%" y="789" width="0.0344%" height="15" fill="rgb(224,124,0)" fg:x="157" fg:w="1"/><text x="5.5920%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="5.4045%" y="773" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="157" fg:w="1"/><text x="5.5920%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="5.4045%" y="757" width="0.0344%" height="15" fill="rgb(61,175,175)" fg:x="157" fg:w="1"/><text x="5.5920%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="5.4045%" y="741" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="157" fg:w="1"/><text x="5.5920%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="5.4045%" y="725" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="157" fg:w="1"/><text x="5.5920%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="5.4389%" y="837" width="0.0344%" height="15" fill="rgb(208,108,0)" fg:x="158" fg:w="1"/><text x="5.6264%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.03%)</title><rect x="5.4733%" y="837" width="0.0344%" height="15" fill="rgb(191,91,0)" fg:x="159" fg:w="1"/><text x="5.6608%" y="847.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.03%)</title><rect x="5.4733%" y="821" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="159" fg:w="1"/><text x="5.6608%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="5.4733%" y="805" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="159" fg:w="1"/><text x="5.6608%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="5.4733%" y="789" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="159" fg:w="1"/><text x="5.6608%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="5.4733%" y="773" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="159" fg:w="1"/><text x="5.6608%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.03%)</title><rect x="5.4733%" y="757" width="0.0344%" height="15" fill="rgb(191,91,0)" fg:x="159" fg:w="1"/><text x="5.6608%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="5.4733%" y="741" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="159" fg:w="1"/><text x="5.6608%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.21%)</title><rect x="5.5077%" y="837" width="0.2065%" height="15" fill="rgb(239,139,0)" fg:x="160" fg:w="6"/><text x="5.6952%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="5.7143%" y="837" width="0.0344%" height="15" fill="rgb(234,134,0)" fg:x="166" fg:w="1"/><text x="5.9018%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.07%)</title><rect x="5.7487%" y="837" width="0.0688%" height="15" fill="rgb(209,109,0)" fg:x="167" fg:w="2"/><text x="5.9362%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="5.7831%" y="821" width="0.0344%" height="15" fill="rgb(193,93,0)" fg:x="168" fg:w="1"/><text x="5.9706%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="5.7831%" y="805" width="0.0344%" height="15" fill="rgb(221,121,0)" fg:x="168" fg:w="1"/><text x="5.9706%" y="815.50"></text></g><g><title>pillar::utils::format::fast_zip::{{closure}} (1 samples, 0.03%)</title><rect x="5.7831%" y="789" width="0.0344%" height="15" fill="rgb(52,167,167)" fg:x="168" fg:w="1"/><text x="5.9706%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (1 samples, 0.03%)</title><rect x="5.7831%" y="773" width="0.0344%" height="15" fill="rgb(252,152,0)" fg:x="168" fg:w="1"/><text x="5.9706%" y="783.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="5.8176%" y="837" width="0.0344%" height="15" fill="rgb(50,165,165)" fg:x="169" fg:w="1"/><text x="6.0051%" y="847.50"></text></g><g><title>[libc.so.6] (52 samples, 1.79%)</title><rect x="5.8520%" y="837" width="1.7900%" height="15" fill="rgb(213,213,64)" fg:x="170" fg:w="52"/><text x="6.0395%" y="847.50">[l..</text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="7.5387%" y="821" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="219" fg:w="3"/><text x="7.7262%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.14%)</title><rect x="7.6420%" y="821" width="0.1377%" height="15" fill="rgb(208,108,0)" fg:x="222" fg:w="4"/><text x="7.8295%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="7.7108%" y="805" width="0.0688%" height="15" fill="rgb(219,119,0)" fg:x="224" fg:w="2"/><text x="7.8983%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.07%)</title><rect x="7.7108%" y="789" width="0.0688%" height="15" fill="rgb(224,124,0)" fg:x="224" fg:w="2"/><text x="7.8983%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="7.7108%" y="773" width="0.0688%" height="15" fill="rgb(238,138,0)" fg:x="224" fg:w="2"/><text x="7.8983%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.07%)</title><rect x="7.7108%" y="757" width="0.0688%" height="15" fill="rgb(61,175,175)" fg:x="224" fg:w="2"/><text x="7.8983%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.07%)</title><rect x="7.7108%" y="741" width="0.0688%" height="15" fill="rgb(220,120,0)" fg:x="224" fg:w="2"/><text x="7.8983%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="7.7108%" y="725" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="224" fg:w="2"/><text x="7.8983%" y="735.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="7.7797%" y="805" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="226" fg:w="5"/><text x="7.9672%" y="815.50"></text></g><g><title>[pillar] (6 samples, 0.21%)</title><rect x="7.7797%" y="821" width="0.2065%" height="15" fill="rgb(226,226,68)" fg:x="226" fg:w="6"/><text x="7.9672%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="7.9518%" y="805" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="231" fg:w="1"/><text x="8.1393%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="7.9862%" y="821" width="0.0344%" height="15" fill="rgb(227,127,0)" fg:x="232" fg:w="1"/><text x="8.1737%" y="831.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="8.0207%" y="821" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="233" fg:w="1"/><text x="8.2082%" y="831.50"></text></g><g><title>[pillar] (13 samples, 0.45%)</title><rect x="7.6420%" y="837" width="0.4475%" height="15" fill="rgb(226,226,68)" fg:x="222" fg:w="13"/><text x="7.8295%" y="847.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="8.0551%" y="821" width="0.0344%" height="15" fill="rgb(216,116,0)" fg:x="234" fg:w="1"/><text x="8.2426%" y="831.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="8.0895%" y="837" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="235" fg:w="1"/><text x="8.2770%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="8.0895%" y="821" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="235" fg:w="1"/><text x="8.2770%" y="831.50"></text></g><g><title>__rdl_realloc (9 samples, 0.31%)</title><rect x="8.1239%" y="837" width="0.3098%" height="15" fill="rgb(193,193,56)" fg:x="236" fg:w="9"/><text x="8.3114%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.17%)</title><rect x="8.2616%" y="821" width="0.1721%" height="15" fill="rgb(199,99,0)" fg:x="240" fg:w="5"/><text x="8.4491%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="8.4337%" y="837" width="0.0688%" height="15" fill="rgb(190,90,0)" fg:x="245" fg:w="2"/><text x="8.6212%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="8.4337%" y="821" width="0.0688%" height="15" fill="rgb(205,105,0)" fg:x="245" fg:w="2"/><text x="8.6212%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.07%)</title><rect x="8.4337%" y="805" width="0.0688%" height="15" fill="rgb(240,140,0)" fg:x="245" fg:w="2"/><text x="8.6212%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.07%)</title><rect x="8.4337%" y="789" width="0.0688%" height="15" fill="rgb(201,101,0)" fg:x="245" fg:w="2"/><text x="8.6212%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.41%)</title><rect x="8.5026%" y="837" width="0.4131%" height="15" fill="rgb(219,119,0)" fg:x="247" fg:w="12"/><text x="8.6901%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.41%)</title><rect x="8.5026%" y="821" width="0.4131%" height="15" fill="rgb(205,105,0)" fg:x="247" fg:w="12"/><text x="8.6901%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.38%)</title><rect x="8.5370%" y="805" width="0.3787%" height="15" fill="rgb(240,140,0)" fg:x="248" fg:w="11"/><text x="8.7245%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.38%)</title><rect x="8.5370%" y="789" width="0.3787%" height="15" fill="rgb(201,101,0)" fg:x="248" fg:w="11"/><text x="8.7245%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.21%)</title><rect x="8.9157%" y="837" width="0.2065%" height="15" fill="rgb(227,127,0)" fg:x="259" fg:w="6"/><text x="9.1032%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="9.1222%" y="789" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="265" fg:w="2"/><text x="9.3097%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="9.1222%" y="773" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="265" fg:w="2"/><text x="9.3097%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="9.1222%" y="757" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="265" fg:w="2"/><text x="9.3097%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="9.1222%" y="741" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="265" fg:w="2"/><text x="9.3097%" y="751.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (3 samples, 0.10%)</title><rect x="9.1222%" y="837" width="0.1033%" height="15" fill="rgb(197,97,0)" fg:x="265" fg:w="3"/><text x="9.3097%" y="847.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3 samples, 0.10%)</title><rect x="9.1222%" y="821" width="0.1033%" height="15" fill="rgb(226,126,0)" fg:x="265" fg:w="3"/><text x="9.3097%" y="831.50"></text></g><g><title>alloc::str::join_generic_copy (3 samples, 0.10%)</title><rect x="9.1222%" y="805" width="0.1033%" height="15" fill="rgb(220,120,0)" fg:x="265" fg:w="3"/><text x="9.3097%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="9.1910%" y="789" width="0.0344%" height="15" fill="rgb(233,133,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="9.1910%" y="773" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="9.1910%" y="757" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="9.1910%" y="741" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="9.1910%" y="725" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="9.1910%" y="709" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="9.1910%" y="693" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="267" fg:w="1"/><text x="9.3785%" y="703.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.03%)</title><rect x="9.2255%" y="837" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="268" fg:w="1"/><text x="9.4130%" y="847.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (8 samples, 0.28%)</title><rect x="9.2599%" y="837" width="0.2754%" height="15" fill="rgb(242,142,0)" fg:x="269" fg:w="8"/><text x="9.4474%" y="847.50"></text></g><g><title>cfree (15 samples, 0.52%)</title><rect x="9.5353%" y="837" width="0.5164%" height="15" fill="rgb(178,178,51)" fg:x="277" fg:w="15"/><text x="9.7228%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (8 samples, 0.28%)</title><rect x="10.0516%" y="837" width="0.2754%" height="15" fill="rgb(218,118,0)" fg:x="292" fg:w="8"/><text x="10.2391%" y="847.50"></text></g><g><title>core::str::lossy::Utf8Chunk::invalid (1 samples, 0.03%)</title><rect x="10.3270%" y="837" width="0.0344%" height="15" fill="rgb(196,96,0)" fg:x="300" fg:w="1"/><text x="10.5145%" y="847.50"></text></g><g><title>core::str::lossy::Utf8Chunks::new (1 samples, 0.03%)</title><rect x="10.3614%" y="837" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="301" fg:w="1"/><text x="10.5489%" y="847.50"></text></g><g><title>malloc (12 samples, 0.41%)</title><rect x="10.3959%" y="837" width="0.4131%" height="15" fill="rgb(221,221,67)" fg:x="302" fg:w="12"/><text x="10.5834%" y="847.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as alloc::string::ToString&gt;::to_string (1 samples, 0.03%)</title><rect x="10.9466%" y="821" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.03%)</title><rect x="10.9466%" y="805" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.03%)</title><rect x="10.9466%" y="789" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="10.9466%" y="773" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="10.9466%" y="757" width="0.0344%" height="15" fill="rgb(224,124,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="10.9466%" y="741" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="10.9466%" y="725" width="0.0344%" height="15" fill="rgb(61,175,175)" fg:x="318" fg:w="1"/><text x="11.1341%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="10.9466%" y="709" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="10.9466%" y="693" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="10.9466%" y="677" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="10.9466%" y="661" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="10.9466%" y="645" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="10.9466%" y="629" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="318" fg:w="1"/><text x="11.1341%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="10.9811%" y="821" width="0.0344%" height="15" fill="rgb(254,154,0)" fg:x="319" fg:w="1"/><text x="11.1686%" y="831.50"></text></g><g><title>pillar::parser::Token::parse (7 samples, 0.24%)</title><rect x="10.8090%" y="837" width="0.2410%" height="15" fill="rgb(66,180,180)" fg:x="314" fg:w="7"/><text x="10.9965%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="11.0155%" y="821" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="320" fg:w="1"/><text x="11.2030%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="11.0155%" y="805" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="320" fg:w="1"/><text x="11.2030%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="11.0155%" y="789" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="320" fg:w="1"/><text x="11.2030%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="11.0155%" y="773" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="320" fg:w="1"/><text x="11.2030%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="11.0155%" y="757" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="320" fg:w="1"/><text x="11.2030%" y="767.50"></text></g><g><title>[unknown] (178 samples, 6.13%)</title><rect x="5.4389%" y="853" width="6.1274%" height="15" fill="rgb(181,181,52)" fg:x="158" fg:w="178"/><text x="5.6264%" y="863.50">[unknown]</text></g><g><title>realloc (15 samples, 0.52%)</title><rect x="11.0499%" y="837" width="0.5164%" height="15" fill="rgb(189,189,55)" fg:x="321" fg:w="15"/><text x="11.2374%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.34%)</title><rect x="11.6007%" y="373" width="0.3442%" height="15" fill="rgb(248,148,0)" fg:x="337" fg:w="10"/><text x="11.7882%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.34%)</title><rect x="11.6007%" y="357" width="0.3442%" height="15" fill="rgb(245,145,0)" fg:x="337" fg:w="10"/><text x="11.7882%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.34%)</title><rect x="11.6007%" y="341" width="0.3442%" height="15" fill="rgb(247,147,0)" fg:x="337" fg:w="10"/><text x="11.7882%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.34%)</title><rect x="11.6007%" y="325" width="0.3442%" height="15" fill="rgb(222,122,0)" fg:x="337" fg:w="10"/><text x="11.7882%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.34%)</title><rect x="11.6007%" y="309" width="0.3442%" height="15" fill="rgb(249,149,0)" fg:x="337" fg:w="10"/><text x="11.7882%" y="319.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.34%)</title><rect x="11.6007%" y="293" width="0.3442%" height="15" fill="rgb(228,128,0)" fg:x="337" fg:w="10"/><text x="11.7882%" y="303.50"></text></g><g><title>malloc (10 samples, 0.34%)</title><rect x="11.6007%" y="277" width="0.3442%" height="15" fill="rgb(221,221,67)" fg:x="337" fg:w="10"/><text x="11.7882%" y="287.50"></text></g><g><title>[libc.so.6] (7 samples, 0.24%)</title><rect x="11.7040%" y="261" width="0.2410%" height="15" fill="rgb(213,213,64)" fg:x="340" fg:w="7"/><text x="11.8915%" y="271.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (14 samples, 0.48%)</title><rect x="11.5663%" y="469" width="0.4819%" height="15" fill="rgb(100,210,210)" fg:x="336" fg:w="14"/><text x="11.7538%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.48%)</title><rect x="11.5663%" y="453" width="0.4819%" height="15" fill="rgb(208,108,0)" fg:x="336" fg:w="14"/><text x="11.7538%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.45%)</title><rect x="11.6007%" y="437" width="0.4475%" height="15" fill="rgb(219,119,0)" fg:x="337" fg:w="13"/><text x="11.7882%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.45%)</title><rect x="11.6007%" y="421" width="0.4475%" height="15" fill="rgb(224,124,0)" fg:x="337" fg:w="13"/><text x="11.7882%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.45%)</title><rect x="11.6007%" y="405" width="0.4475%" height="15" fill="rgb(238,138,0)" fg:x="337" fg:w="13"/><text x="11.7882%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.45%)</title><rect x="11.6007%" y="389" width="0.4475%" height="15" fill="rgb(61,175,175)" fg:x="337" fg:w="13"/><text x="11.7882%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.10%)</title><rect x="11.9449%" y="373" width="0.1033%" height="15" fill="rgb(220,120,0)" fg:x="347" fg:w="3"/><text x="12.1324%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.10%)</title><rect x="11.9449%" y="357" width="0.1033%" height="15" fill="rgb(195,95,0)" fg:x="347" fg:w="3"/><text x="12.1324%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="11.9449%" y="341" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="347" fg:w="3"/><text x="12.1324%" y="351.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="12.8399%" y="437" width="0.0344%" height="15" fill="rgb(95,206,206)" fg:x="373" fg:w="1"/><text x="13.0274%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="12.9088%" y="245" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="375" fg:w="1"/><text x="13.0963%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="12.9088%" y="229" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="375" fg:w="1"/><text x="13.0963%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="12.9432%" y="245" width="0.0344%" height="15" fill="rgb(220,220,66)" fg:x="376" fg:w="1"/><text x="13.1307%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.28%)</title><rect x="12.8744%" y="341" width="0.2754%" height="15" fill="rgb(248,148,0)" fg:x="374" fg:w="8"/><text x="13.0619%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.28%)</title><rect x="12.8744%" y="325" width="0.2754%" height="15" fill="rgb(245,145,0)" fg:x="374" fg:w="8"/><text x="13.0619%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.28%)</title><rect x="12.8744%" y="309" width="0.2754%" height="15" fill="rgb(247,147,0)" fg:x="374" fg:w="8"/><text x="13.0619%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.28%)</title><rect x="12.8744%" y="293" width="0.2754%" height="15" fill="rgb(222,122,0)" fg:x="374" fg:w="8"/><text x="13.0619%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.28%)</title><rect x="12.8744%" y="277" width="0.2754%" height="15" fill="rgb(249,149,0)" fg:x="374" fg:w="8"/><text x="13.0619%" y="287.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.28%)</title><rect x="12.8744%" y="261" width="0.2754%" height="15" fill="rgb(228,128,0)" fg:x="374" fg:w="8"/><text x="13.0619%" y="271.50"></text></g><g><title>malloc (5 samples, 0.17%)</title><rect x="12.9776%" y="245" width="0.1721%" height="15" fill="rgb(221,221,67)" fg:x="377" fg:w="5"/><text x="13.1651%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="13.1497%" y="309" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="382" fg:w="2"/><text x="13.3372%" y="319.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (12 samples, 0.41%)</title><rect x="12.8744%" y="437" width="0.4131%" height="15" fill="rgb(100,210,210)" fg:x="374" fg:w="12"/><text x="13.0619%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.41%)</title><rect x="12.8744%" y="421" width="0.4131%" height="15" fill="rgb(208,108,0)" fg:x="374" fg:w="12"/><text x="13.0619%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.41%)</title><rect x="12.8744%" y="405" width="0.4131%" height="15" fill="rgb(219,119,0)" fg:x="374" fg:w="12"/><text x="13.0619%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.41%)</title><rect x="12.8744%" y="389" width="0.4131%" height="15" fill="rgb(224,124,0)" fg:x="374" fg:w="12"/><text x="13.0619%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.41%)</title><rect x="12.8744%" y="373" width="0.4131%" height="15" fill="rgb(238,138,0)" fg:x="374" fg:w="12"/><text x="13.0619%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.41%)</title><rect x="12.8744%" y="357" width="0.4131%" height="15" fill="rgb(61,175,175)" fg:x="374" fg:w="12"/><text x="13.0619%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.14%)</title><rect x="13.1497%" y="341" width="0.1377%" height="15" fill="rgb(220,120,0)" fg:x="382" fg:w="4"/><text x="13.3372%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.14%)</title><rect x="13.1497%" y="325" width="0.1377%" height="15" fill="rgb(195,95,0)" fg:x="382" fg:w="4"/><text x="13.3372%" y="335.50"></text></g><g><title>memcpy (2 samples, 0.07%)</title><rect x="13.2186%" y="309" width="0.0688%" height="15" fill="rgb(207,207,61)" fg:x="384" fg:w="2"/><text x="13.4061%" y="319.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.03%)</title><rect x="14.1824%" y="405" width="0.0344%" height="15" fill="rgb(100,210,210)" fg:x="412" fg:w="1"/><text x="14.3699%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="14.1824%" y="389" width="0.0344%" height="15" fill="rgb(208,108,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="14.1824%" y="373" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="14.1824%" y="357" width="0.0344%" height="15" fill="rgb(224,124,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="14.1824%" y="341" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="14.1824%" y="325" width="0.0344%" height="15" fill="rgb(61,175,175)" fg:x="412" fg:w="1"/><text x="14.3699%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="14.1824%" y="309" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="14.1824%" y="293" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="14.1824%" y="277" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="14.1824%" y="261" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="14.1824%" y="245" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="14.1824%" y="229" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="412" fg:w="1"/><text x="14.3699%" y="239.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="14.1824%" y="213" width="0.0344%" height="15" fill="rgb(221,221,67)" fg:x="412" fg:w="1"/><text x="14.3699%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="14.4923%" y="293" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="421" fg:w="1"/><text x="14.6798%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="14.4923%" y="277" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="421" fg:w="1"/><text x="14.6798%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="14.4923%" y="261" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="421" fg:w="1"/><text x="14.6798%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="14.4923%" y="245" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="421" fg:w="1"/><text x="14.6798%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="14.4923%" y="229" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="421" fg:w="1"/><text x="14.6798%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="14.4923%" y="213" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="421" fg:w="1"/><text x="14.6798%" y="223.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="14.4923%" y="197" width="0.0344%" height="15" fill="rgb(221,221,67)" fg:x="421" fg:w="1"/><text x="14.6798%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="14.5267%" y="261" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="422" fg:w="2"/><text x="14.7142%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.14%)</title><rect x="14.4923%" y="373" width="0.1377%" height="15" fill="rgb(208,108,0)" fg:x="421" fg:w="4"/><text x="14.6798%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.14%)</title><rect x="14.4923%" y="357" width="0.1377%" height="15" fill="rgb(219,119,0)" fg:x="421" fg:w="4"/><text x="14.6798%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.14%)</title><rect x="14.4923%" y="341" width="0.1377%" height="15" fill="rgb(224,124,0)" fg:x="421" fg:w="4"/><text x="14.6798%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.14%)</title><rect x="14.4923%" y="325" width="0.1377%" height="15" fill="rgb(238,138,0)" fg:x="421" fg:w="4"/><text x="14.6798%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.14%)</title><rect x="14.4923%" y="309" width="0.1377%" height="15" fill="rgb(61,175,175)" fg:x="421" fg:w="4"/><text x="14.6798%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.10%)</title><rect x="14.5267%" y="293" width="0.1033%" height="15" fill="rgb(220,120,0)" fg:x="422" fg:w="3"/><text x="14.7142%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.10%)</title><rect x="14.5267%" y="277" width="0.1033%" height="15" fill="rgb(195,95,0)" fg:x="422" fg:w="3"/><text x="14.7142%" y="287.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="14.5955%" y="261" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="424" fg:w="1"/><text x="14.7830%" y="271.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="14.6299%" y="373" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="425" fg:w="1"/><text x="14.8174%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="14.6299%" y="357" width="0.0344%" height="15" fill="rgb(213,113,0)" fg:x="425" fg:w="1"/><text x="14.8174%" y="367.50"></text></g><g><title>cfree (5 samples, 0.17%)</title><rect x="14.6644%" y="373" width="0.1721%" height="15" fill="rgb(178,178,51)" fg:x="426" fg:w="5"/><text x="14.8519%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="14.7676%" y="357" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="429" fg:w="2"/><text x="14.9551%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="14.9398%" y="341" width="0.0344%" height="15" fill="rgb(61,175,175)" fg:x="434" fg:w="1"/><text x="15.1273%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="14.9742%" y="277" width="0.0344%" height="15" fill="rgb(239,139,0)" fg:x="435" fg:w="1"/><text x="15.1617%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="15.0775%" y="229" width="0.0344%" height="15" fill="rgb(216,116,0)" fg:x="438" fg:w="1"/><text x="15.2650%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="15.0775%" y="213" width="0.0344%" height="15" fill="rgb(244,144,0)" fg:x="438" fg:w="1"/><text x="15.2650%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="15.1119%" y="197" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="439" fg:w="1"/><text x="15.2994%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.07%)</title><rect x="15.1463%" y="197" width="0.0688%" height="15" fill="rgb(190,90,0)" fg:x="440" fg:w="2"/><text x="15.3338%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.24%)</title><rect x="15.2496%" y="181" width="0.2410%" height="15" fill="rgb(234,134,0)" fg:x="443" fg:w="7"/><text x="15.4371%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.24%)</title><rect x="15.2496%" y="165" width="0.2410%" height="15" fill="rgb(232,132,0)" fg:x="443" fg:w="7"/><text x="15.4371%" y="175.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.24%)</title><rect x="15.2496%" y="149" width="0.2410%" height="15" fill="rgb(203,103,0)" fg:x="443" fg:w="7"/><text x="15.4371%" y="159.50"></text></g><g><title>realloc (7 samples, 0.24%)</title><rect x="15.2496%" y="133" width="0.2410%" height="15" fill="rgb(189,189,55)" fg:x="443" fg:w="7"/><text x="15.4371%" y="143.50"></text></g><g><title>[libc.so.6] (6 samples, 0.21%)</title><rect x="15.2840%" y="117" width="0.2065%" height="15" fill="rgb(213,213,64)" fg:x="444" fg:w="6"/><text x="15.4715%" y="127.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="15.3184%" y="101" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="445" fg:w="5"/><text x="15.5059%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.34%)</title><rect x="15.2151%" y="197" width="0.3442%" height="15" fill="rgb(227,127,0)" fg:x="442" fg:w="10"/><text x="15.4026%" y="207.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="15.4905%" y="181" width="0.0688%" height="15" fill="rgb(221,221,67)" fg:x="450" fg:w="2"/><text x="15.6780%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.07%)</title><rect x="15.5594%" y="197" width="0.0688%" height="15" fill="rgb(235,135,0)" fg:x="452" fg:w="2"/><text x="15.7469%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.07%)</title><rect x="15.5594%" y="181" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="452" fg:w="2"/><text x="15.7469%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.65%)</title><rect x="15.0086%" y="261" width="0.6540%" height="15" fill="rgb(235,135,0)" fg:x="436" fg:w="19"/><text x="15.1961%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.65%)</title><rect x="15.0086%" y="245" width="0.6540%" height="15" fill="rgb(230,130,0)" fg:x="436" fg:w="19"/><text x="15.1961%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.55%)</title><rect x="15.1119%" y="229" width="0.5508%" height="15" fill="rgb(190,90,0)" fg:x="439" fg:w="16"/><text x="15.2994%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.55%)</title><rect x="15.1119%" y="213" width="0.5508%" height="15" fill="rgb(205,105,0)" fg:x="439" fg:w="16"/><text x="15.2994%" y="223.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="15.6282%" y="197" width="0.0344%" height="15" fill="rgb(202,102,0)" fg:x="454" fg:w="1"/><text x="15.8157%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="15.6282%" y="181" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="454" fg:w="1"/><text x="15.8157%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="15.6627%" y="245" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="455" fg:w="1"/><text x="15.8502%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.83%)</title><rect x="14.9742%" y="341" width="0.8262%" height="15" fill="rgb(239,139,0)" fg:x="435" fg:w="24"/><text x="15.1617%" y="351.50"></text></g><g><title>alloc::string::String::push_str (24 samples, 0.83%)</title><rect x="14.9742%" y="325" width="0.8262%" height="15" fill="rgb(235,135,0)" fg:x="435" fg:w="24"/><text x="15.1617%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.83%)</title><rect x="14.9742%" y="309" width="0.8262%" height="15" fill="rgb(204,104,0)" fg:x="435" fg:w="24"/><text x="15.1617%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.83%)</title><rect x="14.9742%" y="293" width="0.8262%" height="15" fill="rgb(248,148,0)" fg:x="435" fg:w="24"/><text x="15.1617%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.79%)</title><rect x="15.0086%" y="277" width="0.7917%" height="15" fill="rgb(204,104,0)" fg:x="436" fg:w="23"/><text x="15.1961%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.14%)</title><rect x="15.6627%" y="261" width="0.1377%" height="15" fill="rgb(195,95,0)" fg:x="455" fg:w="4"/><text x="15.8502%" y="271.50"></text></g><g><title>memcpy (3 samples, 0.10%)</title><rect x="15.6971%" y="245" width="0.1033%" height="15" fill="rgb(207,207,61)" fg:x="456" fg:w="3"/><text x="15.8846%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="15.8003%" y="341" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="459" fg:w="1"/><text x="15.9878%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="15.8003%" y="325" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="459" fg:w="1"/><text x="15.9878%" y="335.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="15.8348%" y="341" width="0.0344%" height="15" fill="rgb(69,183,183)" fg:x="460" fg:w="1"/><text x="16.0223%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="15.8692%" y="341" width="0.0344%" height="15" fill="rgb(218,118,0)" fg:x="461" fg:w="1"/><text x="16.0567%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.03%)</title><rect x="15.8692%" y="325" width="0.0344%" height="15" fill="rgb(227,127,0)" fg:x="461" fg:w="1"/><text x="16.0567%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="15.8692%" y="309" width="0.0344%" height="15" fill="rgb(215,115,0)" fg:x="461" fg:w="1"/><text x="16.0567%" y="319.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (49 samples, 1.69%)</title><rect x="14.2513%" y="389" width="1.6867%" height="15" fill="rgb(50,165,165)" fg:x="414" fg:w="49"/><text x="14.4388%" y="399.50">&lt;..</text></g><g><title>core::fmt::Formatter::write_fmt (32 samples, 1.10%)</title><rect x="14.8365%" y="373" width="1.1015%" height="15" fill="rgb(216,116,0)" fg:x="431" fg:w="32"/><text x="15.0240%" y="383.50"></text></g><g><title>core::fmt::write (30 samples, 1.03%)</title><rect x="14.9053%" y="357" width="1.0327%" height="15" fill="rgb(249,149,0)" fg:x="433" fg:w="30"/><text x="15.0928%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.03%)</title><rect x="15.9036%" y="341" width="0.0344%" height="15" fill="rgb(207,107,0)" fg:x="462" fg:w="1"/><text x="16.0911%" y="351.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.03%)</title><rect x="15.9380%" y="389" width="0.0344%" height="15" fill="rgb(218,118,0)" fg:x="463" fg:w="1"/><text x="16.1255%" y="399.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (52 samples, 1.79%)</title><rect x="14.2169%" y="405" width="1.7900%" height="15" fill="rgb(69,183,183)" fg:x="413" fg:w="52"/><text x="14.4044%" y="415.50">&lt;T..</text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="15.9725%" y="389" width="0.0344%" height="15" fill="rgb(196,96,0)" fg:x="464" fg:w="1"/><text x="16.1600%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.21%)</title><rect x="16.0413%" y="325" width="0.2065%" height="15" fill="rgb(248,148,0)" fg:x="466" fg:w="6"/><text x="16.2288%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.21%)</title><rect x="16.0413%" y="309" width="0.2065%" height="15" fill="rgb(245,145,0)" fg:x="466" fg:w="6"/><text x="16.2288%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.21%)</title><rect x="16.0413%" y="293" width="0.2065%" height="15" fill="rgb(247,147,0)" fg:x="466" fg:w="6"/><text x="16.2288%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.21%)</title><rect x="16.0413%" y="277" width="0.2065%" height="15" fill="rgb(222,122,0)" fg:x="466" fg:w="6"/><text x="16.2288%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.21%)</title><rect x="16.0413%" y="261" width="0.2065%" height="15" fill="rgb(249,149,0)" fg:x="466" fg:w="6"/><text x="16.2288%" y="271.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.21%)</title><rect x="16.0413%" y="245" width="0.2065%" height="15" fill="rgb(228,128,0)" fg:x="466" fg:w="6"/><text x="16.2288%" y="255.50"></text></g><g><title>malloc (6 samples, 0.21%)</title><rect x="16.0413%" y="229" width="0.2065%" height="15" fill="rgb(221,221,67)" fg:x="466" fg:w="6"/><text x="16.2288%" y="239.50"></text></g><g><title>[libc.so.6] (11 samples, 0.38%)</title><rect x="16.2478%" y="293" width="0.3787%" height="15" fill="rgb(213,213,64)" fg:x="472" fg:w="11"/><text x="16.4353%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 0.65%)</title><rect x="16.0069%" y="405" width="0.6540%" height="15" fill="rgb(208,108,0)" fg:x="465" fg:w="19"/><text x="16.1944%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.62%)</title><rect x="16.0413%" y="389" width="0.6196%" height="15" fill="rgb(219,119,0)" fg:x="466" fg:w="18"/><text x="16.2288%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.62%)</title><rect x="16.0413%" y="373" width="0.6196%" height="15" fill="rgb(224,124,0)" fg:x="466" fg:w="18"/><text x="16.2288%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.62%)</title><rect x="16.0413%" y="357" width="0.6196%" height="15" fill="rgb(238,138,0)" fg:x="466" fg:w="18"/><text x="16.2288%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.62%)</title><rect x="16.0413%" y="341" width="0.6196%" height="15" fill="rgb(61,175,175)" fg:x="466" fg:w="18"/><text x="16.2288%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.41%)</title><rect x="16.2478%" y="325" width="0.4131%" height="15" fill="rgb(220,120,0)" fg:x="472" fg:w="12"/><text x="16.4353%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.41%)</title><rect x="16.2478%" y="309" width="0.4131%" height="15" fill="rgb(195,95,0)" fg:x="472" fg:w="12"/><text x="16.4353%" y="319.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="16.6265%" y="293" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="483" fg:w="1"/><text x="16.8140%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="16.6609%" y="405" width="0.0344%" height="15" fill="rgb(217,117,0)" fg:x="484" fg:w="1"/><text x="16.8484%" y="415.50"></text></g><g><title>[pillar] (2 samples, 0.07%)</title><rect x="16.6954%" y="405" width="0.0688%" height="15" fill="rgb(226,226,68)" fg:x="485" fg:w="2"/><text x="16.8829%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="16.6954%" y="389" width="0.0688%" height="15" fill="rgb(208,108,0)" fg:x="485" fg:w="2"/><text x="16.8829%" y="399.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.10%)</title><rect x="16.7642%" y="405" width="0.1033%" height="15" fill="rgb(223,223,67)" fg:x="487" fg:w="3"/><text x="16.9517%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.10%)</title><rect x="16.7642%" y="389" width="0.1033%" height="15" fill="rgb(213,113,0)" fg:x="487" fg:w="3"/><text x="16.9517%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.03%)</title><rect x="16.8675%" y="357" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="490" fg:w="1"/><text x="17.0550%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.14%)</title><rect x="16.9019%" y="357" width="0.1377%" height="15" fill="rgb(227,127,0)" fg:x="491" fg:w="4"/><text x="17.0894%" y="367.50"></text></g><g><title>malloc (3 samples, 0.10%)</title><rect x="16.9363%" y="341" width="0.1033%" height="15" fill="rgb(221,221,67)" fg:x="492" fg:w="3"/><text x="17.1238%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.21%)</title><rect x="16.8675%" y="405" width="0.2065%" height="15" fill="rgb(254,154,0)" fg:x="490" fg:w="6"/><text x="17.0550%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.21%)</title><rect x="16.8675%" y="389" width="0.2065%" height="15" fill="rgb(219,119,0)" fg:x="490" fg:w="6"/><text x="17.0550%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.21%)</title><rect x="16.8675%" y="373" width="0.2065%" height="15" fill="rgb(205,105,0)" fg:x="490" fg:w="6"/><text x="17.0550%" y="383.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="17.0396%" y="357" width="0.0344%" height="15" fill="rgb(202,102,0)" fg:x="495" fg:w="1"/><text x="17.2271%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="17.0396%" y="341" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="495" fg:w="1"/><text x="17.2271%" y="351.50"></text></g><g><title>cfree (24 samples, 0.83%)</title><rect x="17.0740%" y="405" width="0.8262%" height="15" fill="rgb(178,178,51)" fg:x="496" fg:w="24"/><text x="17.2615%" y="415.50"></text></g><g><title>[libc.so.6] (13 samples, 0.45%)</title><rect x="17.4527%" y="389" width="0.4475%" height="15" fill="rgb(213,213,64)" fg:x="507" fg:w="13"/><text x="17.6402%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="18.4165%" y="373" width="0.0344%" height="15" fill="rgb(61,175,175)" fg:x="535" fg:w="1"/><text x="18.6040%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="18.5886%" y="309" width="0.0344%" height="15" fill="rgb(239,139,0)" fg:x="540" fg:w="1"/><text x="18.7761%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="18.6231%" y="293" width="0.0344%" height="15" fill="rgb(251,151,0)" fg:x="541" fg:w="1"/><text x="18.8106%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.10%)</title><rect x="18.7952%" y="261" width="0.1033%" height="15" fill="rgb(216,116,0)" fg:x="546" fg:w="3"/><text x="18.9827%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="18.8640%" y="245" width="0.0344%" height="15" fill="rgb(250,150,0)" fg:x="548" fg:w="1"/><text x="19.0515%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="18.9329%" y="229" width="0.0344%" height="15" fill="rgb(227,127,0)" fg:x="550" fg:w="1"/><text x="19.1204%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.07%)</title><rect x="18.9673%" y="229" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="551" fg:w="2"/><text x="19.1548%" y="239.50"></text></g><g><title>__rdl_realloc (2 samples, 0.07%)</title><rect x="19.1050%" y="165" width="0.0688%" height="15" fill="rgb(193,193,56)" fg:x="555" fg:w="2"/><text x="19.2925%" y="175.50"></text></g><g><title>alloc::alloc::realloc (54 samples, 1.86%)</title><rect x="19.1050%" y="181" width="1.8589%" height="15" fill="rgb(203,103,0)" fg:x="555" fg:w="54"/><text x="19.2925%" y="191.50">al..</text></g><g><title>realloc (52 samples, 1.79%)</title><rect x="19.1738%" y="165" width="1.7900%" height="15" fill="rgb(189,189,55)" fg:x="557" fg:w="52"/><text x="19.3613%" y="175.50">re..</text></g><g><title>[libc.so.6] (39 samples, 1.34%)</title><rect x="19.6213%" y="149" width="1.3425%" height="15" fill="rgb(213,213,64)" fg:x="570" fg:w="39"/><text x="19.8088%" y="159.50">[..</text></g><g><title>[libc.so.6] (25 samples, 0.86%)</title><rect x="20.1033%" y="133" width="0.8606%" height="15" fill="rgb(213,213,64)" fg:x="584" fg:w="25"/><text x="20.2908%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (55 samples, 1.89%)</title><rect x="19.1050%" y="213" width="1.8933%" height="15" fill="rgb(234,134,0)" fg:x="555" fg:w="55"/><text x="19.2925%" y="223.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (55 samples, 1.89%)</title><rect x="19.1050%" y="197" width="1.8933%" height="15" fill="rgb(232,132,0)" fg:x="555" fg:w="55"/><text x="19.2925%" y="207.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="20.9639%" y="181" width="0.0344%" height="15" fill="rgb(227,127,0)" fg:x="609" fg:w="1"/><text x="21.1514%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.10%)</title><rect x="20.9983%" y="213" width="0.1033%" height="15" fill="rgb(227,127,0)" fg:x="610" fg:w="3"/><text x="21.1858%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.07%)</title><rect x="21.1015%" y="213" width="0.0688%" height="15" fill="rgb(232,132,0)" fg:x="613" fg:w="2"/><text x="21.2890%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 samples, 2.82%)</title><rect x="19.0361%" y="229" width="2.8227%" height="15" fill="rgb(227,127,0)" fg:x="553" fg:w="82"/><text x="19.2236%" y="239.50">allo..</text></g><g><title>malloc (20 samples, 0.69%)</title><rect x="21.1704%" y="213" width="0.6885%" height="15" fill="rgb(221,221,67)" fg:x="615" fg:w="20"/><text x="21.3579%" y="223.50"></text></g><g><title>[libc.so.6] (15 samples, 0.52%)</title><rect x="21.3425%" y="197" width="0.5164%" height="15" fill="rgb(213,213,64)" fg:x="620" fg:w="15"/><text x="21.5300%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="21.8589%" y="229" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="635" fg:w="1"/><text x="22.0464%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="21.8589%" y="213" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="635" fg:w="1"/><text x="22.0464%" y="223.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="21.8933%" y="229" width="0.0344%" height="15" fill="rgb(202,102,0)" fg:x="636" fg:w="1"/><text x="22.0808%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="21.8933%" y="213" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="636" fg:w="1"/><text x="22.0808%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (90 samples, 3.10%)</title><rect x="18.8985%" y="245" width="3.0981%" height="15" fill="rgb(205,105,0)" fg:x="549" fg:w="90"/><text x="19.0860%" y="255.50">alloc..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.07%)</title><rect x="21.9277%" y="229" width="0.0688%" height="15" fill="rgb(240,140,0)" fg:x="637" fg:w="2"/><text x="22.1152%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.07%)</title><rect x="21.9277%" y="213" width="0.0688%" height="15" fill="rgb(201,101,0)" fg:x="637" fg:w="2"/><text x="22.1152%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (99 samples, 3.41%)</title><rect x="18.6575%" y="293" width="3.4079%" height="15" fill="rgb(235,135,0)" fg:x="542" fg:w="99"/><text x="18.8450%" y="303.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (99 samples, 3.41%)</title><rect x="18.6575%" y="277" width="3.4079%" height="15" fill="rgb(230,130,0)" fg:x="542" fg:w="99"/><text x="18.8450%" y="287.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (92 samples, 3.17%)</title><rect x="18.8985%" y="261" width="3.1670%" height="15" fill="rgb(190,90,0)" fg:x="549" fg:w="92"/><text x="19.0860%" y="271.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="21.9966%" y="245" width="0.0688%" height="15" fill="rgb(190,90,0)" fg:x="639" fg:w="2"/><text x="22.1841%" y="255.50"></text></g><g><title>[libc.so.6] (19 samples, 0.65%)</title><rect x="22.0998%" y="277" width="0.6540%" height="15" fill="rgb(213,213,64)" fg:x="642" fg:w="19"/><text x="22.2873%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.76%)</title><rect x="22.0654%" y="293" width="0.7573%" height="15" fill="rgb(195,95,0)" fg:x="641" fg:w="22"/><text x="22.2529%" y="303.50"></text></g><g><title>memcpy (2 samples, 0.07%)</title><rect x="22.7539%" y="277" width="0.0688%" height="15" fill="rgb(207,207,61)" fg:x="661" fg:w="2"/><text x="22.9414%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (129 samples, 4.44%)</title><rect x="18.4509%" y="373" width="4.4406%" height="15" fill="rgb(239,139,0)" fg:x="536" fg:w="129"/><text x="18.6384%" y="383.50">&lt;alloc::..</text></g><g><title>alloc::string::String::push_str (125 samples, 4.30%)</title><rect x="18.5886%" y="357" width="4.3029%" height="15" fill="rgb(235,135,0)" fg:x="540" fg:w="125"/><text x="18.7761%" y="367.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (125 samples, 4.30%)</title><rect x="18.5886%" y="341" width="4.3029%" height="15" fill="rgb(204,104,0)" fg:x="540" fg:w="125"/><text x="18.7761%" y="351.50">alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (125 samples, 4.30%)</title><rect x="18.5886%" y="325" width="4.3029%" height="15" fill="rgb(248,148,0)" fg:x="540" fg:w="125"/><text x="18.7761%" y="335.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (124 samples, 4.27%)</title><rect x="18.6231%" y="309" width="4.2685%" height="15" fill="rgb(204,104,0)" fg:x="541" fg:w="124"/><text x="18.8106%" y="319.50">alloc::..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.07%)</title><rect x="22.8227%" y="293" width="0.0688%" height="15" fill="rgb(211,111,0)" fg:x="663" fg:w="2"/><text x="23.0102%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.07%)</title><rect x="22.8227%" y="277" width="0.0688%" height="15" fill="rgb(245,145,0)" fg:x="663" fg:w="2"/><text x="23.0102%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="22.8916%" y="373" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="665" fg:w="1"/><text x="23.0791%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="22.8916%" y="357" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="665" fg:w="1"/><text x="23.0791%" y="367.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.07%)</title><rect x="22.9260%" y="373" width="0.0688%" height="15" fill="rgb(69,183,183)" fg:x="666" fg:w="2"/><text x="23.1135%" y="383.50"></text></g><g><title>core::fmt::Formatter::new (3 samples, 0.10%)</title><rect x="22.9948%" y="373" width="0.1033%" height="15" fill="rgb(196,96,0)" fg:x="668" fg:w="3"/><text x="23.1823%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (153 samples, 5.27%)</title><rect x="17.9002%" y="405" width="5.2668%" height="15" fill="rgb(216,116,0)" fg:x="520" fg:w="153"/><text x="18.0877%" y="415.50">core::fmt..</text></g><g><title>core::fmt::write (146 samples, 5.03%)</title><rect x="18.1411%" y="389" width="5.0258%" height="15" fill="rgb(249,149,0)" fg:x="527" fg:w="146"/><text x="18.3286%" y="399.50">core::fmt..</text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.07%)</title><rect x="23.0981%" y="373" width="0.0688%" height="15" fill="rgb(218,118,0)" fg:x="671" fg:w="2"/><text x="23.2856%" y="383.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="23.3391%" y="309" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="678" fg:w="1"/><text x="23.5266%" y="319.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.03%)</title><rect x="23.3391%" y="293" width="0.0344%" height="15" fill="rgb(225,125,0)" fg:x="678" fg:w="1"/><text x="23.5266%" y="303.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.03%)</title><rect x="23.3391%" y="277" width="0.0344%" height="15" fill="rgb(251,151,0)" fg:x="678" fg:w="1"/><text x="23.5266%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.14%)</title><rect x="23.2702%" y="341" width="0.1377%" height="15" fill="rgb(249,149,0)" fg:x="676" fg:w="4"/><text x="23.4577%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.07%)</title><rect x="23.3391%" y="325" width="0.0688%" height="15" fill="rgb(237,137,0)" fg:x="678" fg:w="2"/><text x="23.5266%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="23.3735%" y="309" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="679" fg:w="1"/><text x="23.5610%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="23.4423%" y="277" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="681" fg:w="1"/><text x="23.6298%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.03%)</title><rect x="23.4423%" y="261" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="681" fg:w="1"/><text x="23.6298%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.03%)</title><rect x="23.4423%" y="245" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="681" fg:w="1"/><text x="23.6298%" y="255.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.17%)</title><rect x="23.4079%" y="341" width="0.1721%" height="15" fill="rgb(242,142,0)" fg:x="680" fg:w="5"/><text x="23.5954%" y="351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (5 samples, 0.17%)</title><rect x="23.4079%" y="325" width="0.1721%" height="15" fill="rgb(225,125,0)" fg:x="680" fg:w="5"/><text x="23.5954%" y="335.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.17%)</title><rect x="23.4079%" y="309" width="0.1721%" height="15" fill="rgb(248,148,0)" fg:x="680" fg:w="5"/><text x="23.5954%" y="319.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 0.17%)</title><rect x="23.4079%" y="293" width="0.1721%" height="15" fill="rgb(206,106,0)" fg:x="680" fg:w="5"/><text x="23.5954%" y="303.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.10%)</title><rect x="23.4768%" y="277" width="0.1033%" height="15" fill="rgb(203,103,0)" fg:x="682" fg:w="3"/><text x="23.6643%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.52%)</title><rect x="23.1670%" y="405" width="0.5164%" height="15" fill="rgb(250,150,0)" fg:x="673" fg:w="15"/><text x="23.3545%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.52%)</title><rect x="23.1670%" y="389" width="0.5164%" height="15" fill="rgb(228,128,0)" fg:x="673" fg:w="15"/><text x="23.3545%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.52%)</title><rect x="23.1670%" y="373" width="0.5164%" height="15" fill="rgb(234,134,0)" fg:x="673" fg:w="15"/><text x="23.3545%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.45%)</title><rect x="23.2358%" y="357" width="0.4475%" height="15" fill="rgb(194,94,0)" fg:x="675" fg:w="13"/><text x="23.4233%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.10%)</title><rect x="23.5800%" y="341" width="0.1033%" height="15" fill="rgb(233,133,0)" fg:x="685" fg:w="3"/><text x="23.7675%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="23.5800%" y="325" width="0.1033%" height="15" fill="rgb(248,148,0)" fg:x="685" fg:w="3"/><text x="23.7675%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="23.5800%" y="309" width="0.1033%" height="15" fill="rgb(245,145,0)" fg:x="685" fg:w="3"/><text x="23.7675%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.10%)</title><rect x="23.5800%" y="293" width="0.1033%" height="15" fill="rgb(247,147,0)" fg:x="685" fg:w="3"/><text x="23.7675%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="23.6145%" y="277" width="0.0688%" height="15" fill="rgb(222,122,0)" fg:x="686" fg:w="2"/><text x="23.8020%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="23.6145%" y="261" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="686" fg:w="2"/><text x="23.8020%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="23.6145%" y="245" width="0.0688%" height="15" fill="rgb(228,128,0)" fg:x="686" fg:w="2"/><text x="23.8020%" y="255.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="23.6145%" y="229" width="0.0688%" height="15" fill="rgb(221,221,67)" fg:x="686" fg:w="2"/><text x="23.8020%" y="239.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="23.7866%" y="309" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="691" fg:w="1"/><text x="23.9741%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="23.7866%" y="293" width="0.0344%" height="15" fill="rgb(213,113,0)" fg:x="691" fg:w="1"/><text x="23.9741%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.31%)</title><rect x="23.6833%" y="405" width="0.3098%" height="15" fill="rgb(236,136,0)" fg:x="688" fg:w="9"/><text x="23.8708%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.31%)</title><rect x="23.6833%" y="389" width="0.3098%" height="15" fill="rgb(199,99,0)" fg:x="688" fg:w="9"/><text x="23.8708%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.31%)</title><rect x="23.6833%" y="373" width="0.3098%" height="15" fill="rgb(201,101,0)" fg:x="688" fg:w="9"/><text x="23.8708%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.31%)</title><rect x="23.6833%" y="357" width="0.3098%" height="15" fill="rgb(226,126,0)" fg:x="688" fg:w="9"/><text x="23.8708%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.21%)</title><rect x="23.7866%" y="341" width="0.2065%" height="15" fill="rgb(211,111,0)" fg:x="691" fg:w="6"/><text x="23.9741%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.21%)</title><rect x="23.7866%" y="325" width="0.2065%" height="15" fill="rgb(194,94,0)" fg:x="691" fg:w="6"/><text x="23.9741%" y="335.50"></text></g><g><title>cfree (5 samples, 0.17%)</title><rect x="23.8210%" y="309" width="0.1721%" height="15" fill="rgb(178,178,51)" fg:x="692" fg:w="5"/><text x="24.0085%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="23.9243%" y="293" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="695" fg:w="2"/><text x="24.1118%" y="303.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="24.0275%" y="277" width="0.0344%" height="15" fill="rgb(50,165,165)" fg:x="698" fg:w="1"/><text x="24.2150%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.14%)</title><rect x="24.0275%" y="293" width="0.1377%" height="15" fill="rgb(211,111,0)" fg:x="698" fg:w="4"/><text x="24.2150%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.10%)</title><rect x="24.0620%" y="277" width="0.1033%" height="15" fill="rgb(194,94,0)" fg:x="699" fg:w="3"/><text x="24.2495%" y="287.50"></text></g><g><title>cfree (3 samples, 0.10%)</title><rect x="24.0620%" y="261" width="0.1033%" height="15" fill="rgb(178,178,51)" fg:x="699" fg:w="3"/><text x="24.2495%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="24.0964%" y="245" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="700" fg:w="2"/><text x="24.2839%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (6 samples, 0.21%)</title><rect x="23.9931%" y="405" width="0.2065%" height="15" fill="rgb(231,131,0)" fg:x="697" fg:w="6"/><text x="24.1806%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.21%)</title><rect x="23.9931%" y="389" width="0.2065%" height="15" fill="rgb(194,94,0)" fg:x="697" fg:w="6"/><text x="24.1806%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (5 samples, 0.17%)</title><rect x="24.0275%" y="373" width="0.1721%" height="15" fill="rgb(207,107,0)" fg:x="698" fg:w="5"/><text x="24.2150%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.17%)</title><rect x="24.0275%" y="357" width="0.1721%" height="15" fill="rgb(236,136,0)" fg:x="698" fg:w="5"/><text x="24.2150%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.17%)</title><rect x="24.0275%" y="341" width="0.1721%" height="15" fill="rgb(199,99,0)" fg:x="698" fg:w="5"/><text x="24.2150%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.17%)</title><rect x="24.0275%" y="325" width="0.1721%" height="15" fill="rgb(201,101,0)" fg:x="698" fg:w="5"/><text x="24.2150%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="24.0275%" y="309" width="0.1721%" height="15" fill="rgb(226,126,0)" fg:x="698" fg:w="5"/><text x="24.2150%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="24.1652%" y="293" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="702" fg:w="1"/><text x="24.3527%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (4 samples, 0.14%)</title><rect x="24.1997%" y="405" width="0.1377%" height="15" fill="rgb(231,131,0)" fg:x="703" fg:w="4"/><text x="24.3872%" y="415.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.07%)</title><rect x="24.2685%" y="389" width="0.0688%" height="15" fill="rgb(108,218,218)" fg:x="705" fg:w="2"/><text x="24.4560%" y="399.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.07%)</title><rect x="24.2685%" y="373" width="0.0688%" height="15" fill="rgb(237,137,0)" fg:x="705" fg:w="2"/><text x="24.4560%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.03%)</title><rect x="24.3029%" y="357" width="0.0344%" height="15" fill="rgb(205,105,0)" fg:x="706" fg:w="1"/><text x="24.4904%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.03%)</title><rect x="24.3029%" y="341" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="706" fg:w="1"/><text x="24.4904%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="24.3718%" y="341" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="708" fg:w="1"/><text x="24.5593%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="24.3718%" y="325" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="708" fg:w="1"/><text x="24.5593%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="24.4062%" y="341" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="709" fg:w="1"/><text x="24.5937%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="24.4062%" y="325" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="709" fg:w="1"/><text x="24.5937%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="24.4062%" y="309" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="709" fg:w="1"/><text x="24.5937%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="24.4062%" y="293" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="709" fg:w="1"/><text x="24.5937%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="24.4062%" y="277" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="709" fg:w="1"/><text x="24.5937%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (4 samples, 0.14%)</title><rect x="24.3373%" y="389" width="0.1377%" height="15" fill="rgb(193,93,0)" fg:x="707" fg:w="4"/><text x="24.5248%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.14%)</title><rect x="24.3373%" y="373" width="0.1377%" height="15" fill="rgb(226,126,0)" fg:x="707" fg:w="4"/><text x="24.5248%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.14%)</title><rect x="24.3373%" y="357" width="0.1377%" height="15" fill="rgb(220,120,0)" fg:x="707" fg:w="4"/><text x="24.5248%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="24.4406%" y="341" width="0.0344%" height="15" fill="rgb(233,133,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="24.4406%" y="325" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="24.4406%" y="309" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="24.4406%" y="293" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="24.4406%" y="277" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="24.4406%" y="261" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="24.4406%" y="245" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="24.4406%" y="229" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="710" fg:w="1"/><text x="24.6281%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="24.4406%" y="213" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="710" fg:w="1"/><text x="24.6281%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="24.4750%" y="341" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="711" fg:w="1"/><text x="24.6625%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.03%)</title><rect x="24.5095%" y="341" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="712" fg:w="1"/><text x="24.6970%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="24.7849%" y="245" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="720" fg:w="3"/><text x="24.9724%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.45%)</title><rect x="24.4750%" y="389" width="0.4475%" height="15" fill="rgb(254,154,0)" fg:x="711" fg:w="13"/><text x="24.6625%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.45%)</title><rect x="24.4750%" y="373" width="0.4475%" height="15" fill="rgb(219,119,0)" fg:x="711" fg:w="13"/><text x="24.6625%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.45%)</title><rect x="24.4750%" y="357" width="0.4475%" height="15" fill="rgb(205,105,0)" fg:x="711" fg:w="13"/><text x="24.6625%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.38%)</title><rect x="24.5439%" y="341" width="0.3787%" height="15" fill="rgb(227,127,0)" fg:x="713" fg:w="11"/><text x="24.7314%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.38%)</title><rect x="24.5439%" y="325" width="0.3787%" height="15" fill="rgb(234,134,0)" fg:x="713" fg:w="11"/><text x="24.7314%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.38%)</title><rect x="24.5439%" y="309" width="0.3787%" height="15" fill="rgb(232,132,0)" fg:x="713" fg:w="11"/><text x="24.7314%" y="319.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.38%)</title><rect x="24.5439%" y="293" width="0.3787%" height="15" fill="rgb(203,103,0)" fg:x="713" fg:w="11"/><text x="24.7314%" y="303.50"></text></g><g><title>realloc (11 samples, 0.38%)</title><rect x="24.5439%" y="277" width="0.3787%" height="15" fill="rgb(189,189,55)" fg:x="713" fg:w="11"/><text x="24.7314%" y="287.50"></text></g><g><title>[libc.so.6] (10 samples, 0.34%)</title><rect x="24.5783%" y="261" width="0.3442%" height="15" fill="rgb(213,213,64)" fg:x="714" fg:w="10"/><text x="24.7658%" y="271.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="24.8881%" y="245" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="723" fg:w="1"/><text x="25.0756%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="24.9225%" y="277" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="724" fg:w="1"/><text x="25.1100%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="24.9914%" y="261" width="0.0344%" height="15" fill="rgb(232,132,0)" fg:x="726" fg:w="1"/><text x="25.1789%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="24.9914%" y="245" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="726" fg:w="1"/><text x="25.1789%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="25.0947%" y="165" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="729" fg:w="1"/><text x="25.2822%" y="175.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (1 samples, 0.03%)</title><rect x="25.0947%" y="149" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="729" fg:w="1"/><text x="25.2822%" y="159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="25.1291%" y="165" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="730" fg:w="1"/><text x="25.3166%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="25.1635%" y="165" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="731" fg:w="1"/><text x="25.3510%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="25.1635%" y="149" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="731" fg:w="1"/><text x="25.3510%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="25.1635%" y="133" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="731" fg:w="1"/><text x="25.3510%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.07%)</title><rect x="25.1979%" y="165" width="0.0688%" height="15" fill="rgb(233,133,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="25.1979%" y="149" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="25.1979%" y="133" width="0.0688%" height="15" fill="rgb(245,145,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.07%)</title><rect x="25.1979%" y="117" width="0.0688%" height="15" fill="rgb(247,147,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="25.1979%" y="101" width="0.0688%" height="15" fill="rgb(222,122,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="25.1979%" y="85" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="95.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="25.1979%" y="69" width="0.0688%" height="15" fill="rgb(228,128,0)" fg:x="732" fg:w="2"/><text x="25.3854%" y="79.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="25.1979%" y="53" width="0.0688%" height="15" fill="rgb(221,221,67)" fg:x="732" fg:w="2"/><text x="25.3854%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="25.2668%" y="165" width="0.0344%" height="15" fill="rgb(192,92,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="175.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.03%)</title><rect x="25.2668%" y="149" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="25.2668%" y="133" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="25.2668%" y="117" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.03%)</title><rect x="25.2668%" y="101" width="0.0344%" height="15" fill="rgb(243,143,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="111.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="25.2668%" y="85" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="95.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="25.2668%" y="69" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="79.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (1 samples, 0.03%)</title><rect x="25.2668%" y="53" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="734" fg:w="1"/><text x="25.4543%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.41%)</title><rect x="24.9225%" y="325" width="0.4131%" height="15" fill="rgb(249,149,0)" fg:x="724" fg:w="12"/><text x="25.1100%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.41%)</title><rect x="24.9225%" y="309" width="0.4131%" height="15" fill="rgb(241,141,0)" fg:x="724" fg:w="12"/><text x="25.1100%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.41%)</title><rect x="24.9225%" y="293" width="0.4131%" height="15" fill="rgb(209,109,0)" fg:x="724" fg:w="12"/><text x="25.1100%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.38%)</title><rect x="24.9570%" y="277" width="0.3787%" height="15" fill="rgb(193,93,0)" fg:x="725" fg:w="11"/><text x="25.1445%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.31%)</title><rect x="25.0258%" y="261" width="0.3098%" height="15" fill="rgb(221,121,0)" fg:x="727" fg:w="9"/><text x="25.2133%" y="271.50"></text></g><g><title>pillar::utils::format::fast_zip::{{closure}} (9 samples, 0.31%)</title><rect x="25.0258%" y="245" width="0.3098%" height="15" fill="rgb(52,167,167)" fg:x="727" fg:w="9"/><text x="25.2133%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (9 samples, 0.31%)</title><rect x="25.0258%" y="229" width="0.3098%" height="15" fill="rgb(252,152,0)" fg:x="727" fg:w="9"/><text x="25.2133%" y="239.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (9 samples, 0.31%)</title><rect x="25.0258%" y="213" width="0.3098%" height="15" fill="rgb(197,97,0)" fg:x="727" fg:w="9"/><text x="25.2133%" y="223.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (9 samples, 0.31%)</title><rect x="25.0258%" y="197" width="0.3098%" height="15" fill="rgb(226,126,0)" fg:x="727" fg:w="9"/><text x="25.2133%" y="207.50"></text></g><g><title>alloc::str::join_generic_copy (9 samples, 0.31%)</title><rect x="25.0258%" y="181" width="0.3098%" height="15" fill="rgb(220,120,0)" fg:x="727" fg:w="9"/><text x="25.2133%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="25.3012%" y="165" width="0.0344%" height="15" fill="rgb(244,144,0)" fg:x="735" fg:w="1"/><text x="25.4887%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="25.3012%" y="149" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="735" fg:w="1"/><text x="25.4887%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="25.3012%" y="133" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="735" fg:w="1"/><text x="25.4887%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="25.3356%" y="277" width="0.0344%" height="15" fill="rgb(234,134,0)" fg:x="736" fg:w="1"/><text x="25.5231%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.48%)</title><rect x="24.9225%" y="389" width="0.4819%" height="15" fill="rgb(250,150,0)" fg:x="724" fg:w="14"/><text x="25.1100%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.48%)</title><rect x="24.9225%" y="373" width="0.4819%" height="15" fill="rgb(228,128,0)" fg:x="724" fg:w="14"/><text x="25.1100%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.48%)</title><rect x="24.9225%" y="357" width="0.4819%" height="15" fill="rgb(234,134,0)" fg:x="724" fg:w="14"/><text x="25.1100%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.48%)</title><rect x="24.9225%" y="341" width="0.4819%" height="15" fill="rgb(194,94,0)" fg:x="724" fg:w="14"/><text x="25.1100%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.07%)</title><rect x="25.3356%" y="325" width="0.0688%" height="15" fill="rgb(233,133,0)" fg:x="736" fg:w="2"/><text x="25.5231%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="25.3356%" y="309" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="736" fg:w="2"/><text x="25.5231%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="25.3356%" y="293" width="0.0688%" height="15" fill="rgb(245,145,0)" fg:x="736" fg:w="2"/><text x="25.5231%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="25.3701%" y="277" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="737" fg:w="1"/><text x="25.5576%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="25.3701%" y="261" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="737" fg:w="1"/><text x="25.5576%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="25.3701%" y="245" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="737" fg:w="1"/><text x="25.5576%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="25.3701%" y="229" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="737" fg:w="1"/><text x="25.5576%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (6 samples, 0.21%)</title><rect x="25.4045%" y="389" width="0.2065%" height="15" fill="rgb(238,138,0)" fg:x="738" fg:w="6"/><text x="25.5920%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (6 samples, 0.21%)</title><rect x="25.4045%" y="373" width="0.2065%" height="15" fill="rgb(194,94,0)" fg:x="738" fg:w="6"/><text x="25.5920%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.21%)</title><rect x="25.4045%" y="357" width="0.2065%" height="15" fill="rgb(226,126,0)" fg:x="738" fg:w="6"/><text x="25.5920%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.21%)</title><rect x="25.4045%" y="341" width="0.2065%" height="15" fill="rgb(211,111,0)" fg:x="738" fg:w="6"/><text x="25.5920%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.21%)</title><rect x="25.4045%" y="325" width="0.2065%" height="15" fill="rgb(194,94,0)" fg:x="738" fg:w="6"/><text x="25.5920%" y="335.50"></text></g><g><title>cfree (6 samples, 0.21%)</title><rect x="25.4045%" y="309" width="0.2065%" height="15" fill="rgb(178,178,51)" fg:x="738" fg:w="6"/><text x="25.5920%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="25.5077%" y="293" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="741" fg:w="3"/><text x="25.6952%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="25.6110%" y="373" width="0.0688%" height="15" fill="rgb(194,94,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (2 samples, 0.07%)</title><rect x="25.6110%" y="357" width="0.0688%" height="15" fill="rgb(207,107,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.07%)</title><rect x="25.6110%" y="341" width="0.0688%" height="15" fill="rgb(236,136,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.07%)</title><rect x="25.6110%" y="325" width="0.0688%" height="15" fill="rgb(199,99,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.07%)</title><rect x="25.6110%" y="309" width="0.0688%" height="15" fill="rgb(201,101,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="25.6110%" y="293" width="0.0688%" height="15" fill="rgb(226,126,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.07%)</title><rect x="25.6110%" y="277" width="0.0688%" height="15" fill="rgb(211,111,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.07%)</title><rect x="25.6110%" y="261" width="0.0688%" height="15" fill="rgb(194,94,0)" fg:x="744" fg:w="2"/><text x="25.7985%" y="271.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="25.6110%" y="245" width="0.0688%" height="15" fill="rgb(178,178,51)" fg:x="744" fg:w="2"/><text x="25.7985%" y="255.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (365 samples, 12.56%)</title><rect x="13.2874%" y="421" width="12.5645%" height="15" fill="rgb(50,165,165)" fg:x="386" fg:w="365"/><text x="13.4749%" y="431.50">&lt;pillar::parser::Token as ..</text></g><g><title>pillar::utils::format::fast_zip (44 samples, 1.51%)</title><rect x="24.3373%" y="405" width="1.5146%" height="15" fill="rgb(73,186,186)" fg:x="707" fg:w="44"/><text x="24.5248%" y="415.50">p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (7 samples, 0.24%)</title><rect x="25.6110%" y="389" width="0.2410%" height="15" fill="rgb(231,131,0)" fg:x="744" fg:w="7"/><text x="25.7985%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (5 samples, 0.17%)</title><rect x="25.6799%" y="373" width="0.1721%" height="15" fill="rgb(199,99,0)" fg:x="746" fg:w="5"/><text x="25.8674%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="25.6799%" y="357" width="0.1721%" height="15" fill="rgb(226,126,0)" fg:x="746" fg:w="5"/><text x="25.8674%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.17%)</title><rect x="25.6799%" y="341" width="0.1721%" height="15" fill="rgb(211,111,0)" fg:x="746" fg:w="5"/><text x="25.8674%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.17%)</title><rect x="25.6799%" y="325" width="0.1721%" height="15" fill="rgb(194,94,0)" fg:x="746" fg:w="5"/><text x="25.8674%" y="335.50"></text></g><g><title>cfree (5 samples, 0.17%)</title><rect x="25.6799%" y="309" width="0.1721%" height="15" fill="rgb(178,178,51)" fg:x="746" fg:w="5"/><text x="25.8674%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="25.7487%" y="293" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="748" fg:w="3"/><text x="25.9362%" y="303.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.03%)</title><rect x="25.8520%" y="421" width="0.0344%" height="15" fill="rgb(218,118,0)" fg:x="751" fg:w="1"/><text x="26.0395%" y="431.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="25.8864%" y="421" width="0.0344%" height="15" fill="rgb(196,96,0)" fg:x="752" fg:w="1"/><text x="26.0739%" y="431.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (368 samples, 12.67%)</title><rect x="13.2874%" y="437" width="12.6678%" height="15" fill="rgb(69,183,183)" fg:x="386" fg:w="368"/><text x="13.4749%" y="447.50">&lt;T as alloc::string::ToStr..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.03%)</title><rect x="25.9208%" y="421" width="0.0344%" height="15" fill="rgb(217,117,0)" fg:x="753" fg:w="1"/><text x="26.1083%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="25.9552%" y="357" width="0.0344%" height="15" fill="rgb(248,148,0)" fg:x="754" fg:w="1"/><text x="26.1427%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="25.9552%" y="341" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="754" fg:w="1"/><text x="26.1427%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="25.9552%" y="325" width="0.0344%" height="15" fill="rgb(247,147,0)" fg:x="754" fg:w="1"/><text x="26.1427%" y="335.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="25.9897%" y="325" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="755" fg:w="3"/><text x="26.1772%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.21%)</title><rect x="25.9552%" y="437" width="0.2065%" height="15" fill="rgb(208,108,0)" fg:x="754" fg:w="6"/><text x="26.1427%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.21%)</title><rect x="25.9552%" y="421" width="0.2065%" height="15" fill="rgb(219,119,0)" fg:x="754" fg:w="6"/><text x="26.1427%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.21%)</title><rect x="25.9552%" y="405" width="0.2065%" height="15" fill="rgb(224,124,0)" fg:x="754" fg:w="6"/><text x="26.1427%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.21%)</title><rect x="25.9552%" y="389" width="0.2065%" height="15" fill="rgb(238,138,0)" fg:x="754" fg:w="6"/><text x="26.1427%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.21%)</title><rect x="25.9552%" y="373" width="0.2065%" height="15" fill="rgb(61,175,175)" fg:x="754" fg:w="6"/><text x="26.1427%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.17%)</title><rect x="25.9897%" y="357" width="0.1721%" height="15" fill="rgb(220,120,0)" fg:x="755" fg:w="5"/><text x="26.1772%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.17%)</title><rect x="25.9897%" y="341" width="0.1721%" height="15" fill="rgb(195,95,0)" fg:x="755" fg:w="5"/><text x="26.1772%" y="351.50"></text></g><g><title>memcpy (2 samples, 0.07%)</title><rect x="26.0929%" y="325" width="0.0688%" height="15" fill="rgb(207,207,61)" fg:x="758" fg:w="2"/><text x="26.2804%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="26.1618%" y="437" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="760" fg:w="1"/><text x="26.3493%" y="447.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="26.1962%" y="437" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="761" fg:w="1"/><text x="26.3837%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.14%)</title><rect x="26.2306%" y="373" width="0.1377%" height="15" fill="rgb(234,134,0)" fg:x="762" fg:w="4"/><text x="26.4181%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.14%)</title><rect x="26.2306%" y="357" width="0.1377%" height="15" fill="rgb(232,132,0)" fg:x="762" fg:w="4"/><text x="26.4181%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.14%)</title><rect x="26.2306%" y="341" width="0.1377%" height="15" fill="rgb(203,103,0)" fg:x="762" fg:w="4"/><text x="26.4181%" y="351.50"></text></g><g><title>realloc (4 samples, 0.14%)</title><rect x="26.2306%" y="325" width="0.1377%" height="15" fill="rgb(189,189,55)" fg:x="762" fg:w="4"/><text x="26.4181%" y="335.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="26.2306%" y="309" width="0.1377%" height="15" fill="rgb(213,213,64)" fg:x="762" fg:w="4"/><text x="26.4181%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="26.2995%" y="293" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="764" fg:w="2"/><text x="26.4870%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="26.3683%" y="373" width="0.0344%" height="15" fill="rgb(227,127,0)" fg:x="766" fg:w="1"/><text x="26.5558%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.38%)</title><rect x="26.2306%" y="389" width="0.3787%" height="15" fill="rgb(227,127,0)" fg:x="762" fg:w="11"/><text x="26.4181%" y="399.50"></text></g><g><title>malloc (6 samples, 0.21%)</title><rect x="26.4028%" y="373" width="0.2065%" height="15" fill="rgb(221,221,67)" fg:x="767" fg:w="6"/><text x="26.5903%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.41%)</title><rect x="26.2306%" y="421" width="0.4131%" height="15" fill="rgb(219,119,0)" fg:x="762" fg:w="12"/><text x="26.4181%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.41%)</title><rect x="26.2306%" y="405" width="0.4131%" height="15" fill="rgb(205,105,0)" fg:x="762" fg:w="12"/><text x="26.4181%" y="415.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="26.6093%" y="389" width="0.0344%" height="15" fill="rgb(202,102,0)" fg:x="773" fg:w="1"/><text x="26.7968%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="26.6093%" y="373" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="773" fg:w="1"/><text x="26.7968%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.59%)</title><rect x="26.2306%" y="437" width="0.5852%" height="15" fill="rgb(254,154,0)" fg:x="762" fg:w="17"/><text x="26.4181%" y="447.50"></text></g><g><title>core::ptr::write (5 samples, 0.17%)</title><rect x="26.6437%" y="421" width="0.1721%" height="15" fill="rgb(230,130,0)" fg:x="774" fg:w="5"/><text x="26.8312%" y="431.50"></text></g><g><title>cfree (15 samples, 0.52%)</title><rect x="26.8158%" y="437" width="0.5164%" height="15" fill="rgb(178,178,51)" fg:x="779" fg:w="15"/><text x="27.0033%" y="447.50"></text></g><g><title>[libc.so.6] (11 samples, 0.38%)</title><rect x="26.9535%" y="421" width="0.3787%" height="15" fill="rgb(213,213,64)" fg:x="783" fg:w="11"/><text x="27.1410%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.07%)</title><rect x="27.5731%" y="405" width="0.0688%" height="15" fill="rgb(61,175,175)" fg:x="801" fg:w="2"/><text x="27.7606%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="27.6420%" y="405" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="803" fg:w="1"/><text x="27.8295%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="27.7108%" y="325" width="0.0344%" height="15" fill="rgb(239,139,0)" fg:x="805" fg:w="1"/><text x="27.8983%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.07%)</title><rect x="27.7453%" y="277" width="0.0688%" height="15" fill="rgb(244,144,0)" fg:x="806" fg:w="2"/><text x="27.9328%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.10%)</title><rect x="27.7453%" y="293" width="0.1033%" height="15" fill="rgb(216,116,0)" fg:x="806" fg:w="3"/><text x="27.9328%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="27.8141%" y="277" width="0.0344%" height="15" fill="rgb(250,150,0)" fg:x="808" fg:w="1"/><text x="28.0016%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="27.9518%" y="261" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="812" fg:w="1"/><text x="28.1393%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.03%)</title><rect x="27.9862%" y="261" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="813" fg:w="1"/><text x="28.1737%" y="271.50"></text></g><g><title>[libc.so.6] (58 samples, 2.00%)</title><rect x="29.3287%" y="165" width="1.9966%" height="15" fill="rgb(213,213,64)" fg:x="852" fg:w="58"/><text x="29.5162%" y="175.50">[l..</text></g><g><title>[libc.so.6] (6 samples, 0.21%)</title><rect x="31.1188%" y="149" width="0.2065%" height="15" fill="rgb(213,213,64)" fg:x="904" fg:w="6"/><text x="31.3063%" y="159.50"></text></g><g><title>__default_morecore (2 samples, 0.07%)</title><rect x="31.2565%" y="133" width="0.0688%" height="15" fill="rgb(194,194,57)" fg:x="908" fg:w="2"/><text x="31.4440%" y="143.50"></text></g><g><title>__sbrk (2 samples, 0.07%)</title><rect x="31.2565%" y="117" width="0.0688%" height="15" fill="rgb(193,193,56)" fg:x="908" fg:w="2"/><text x="31.4440%" y="127.50"></text></g><g><title>brk (2 samples, 0.07%)</title><rect x="31.2565%" y="101" width="0.0688%" height="15" fill="rgb(175,175,50)" fg:x="908" fg:w="2"/><text x="31.4440%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (96 samples, 3.30%)</title><rect x="28.0551%" y="245" width="3.3046%" height="15" fill="rgb(234,134,0)" fg:x="815" fg:w="96"/><text x="28.2426%" y="255.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::grow_impl (96 samples, 3.30%)</title><rect x="28.0551%" y="229" width="3.3046%" height="15" fill="rgb(232,132,0)" fg:x="815" fg:w="96"/><text x="28.2426%" y="239.50">alloc..</text></g><g><title>alloc::alloc::realloc (96 samples, 3.30%)</title><rect x="28.0551%" y="213" width="3.3046%" height="15" fill="rgb(203,103,0)" fg:x="815" fg:w="96"/><text x="28.2426%" y="223.50">alloc..</text></g><g><title>realloc (96 samples, 3.30%)</title><rect x="28.0551%" y="197" width="3.3046%" height="15" fill="rgb(189,189,55)" fg:x="815" fg:w="96"/><text x="28.2426%" y="207.50">reall..</text></g><g><title>[libc.so.6] (91 samples, 3.13%)</title><rect x="28.2272%" y="181" width="3.1325%" height="15" fill="rgb(213,213,64)" fg:x="820" fg:w="91"/><text x="28.4147%" y="191.50">[libc..</text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="31.3253%" y="165" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="910" fg:w="1"/><text x="31.5128%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (101 samples, 3.48%)</title><rect x="28.0207%" y="261" width="3.4768%" height="15" fill="rgb(227,127,0)" fg:x="814" fg:w="101"/><text x="28.2082%" y="271.50">alloc..</text></g><g><title>malloc (4 samples, 0.14%)</title><rect x="31.3597%" y="245" width="0.1377%" height="15" fill="rgb(221,221,67)" fg:x="911" fg:w="4"/><text x="31.5472%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="31.4974%" y="261" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="915" fg:w="1"/><text x="31.6849%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="31.4974%" y="245" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="915" fg:w="1"/><text x="31.6849%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (109 samples, 3.75%)</title><rect x="27.8485%" y="277" width="3.7522%" height="15" fill="rgb(205,105,0)" fg:x="809" fg:w="109"/><text x="28.0360%" y="287.50">alloc:..</text></g><g><title>core::cmp::max (2 samples, 0.07%)</title><rect x="31.5318%" y="261" width="0.0688%" height="15" fill="rgb(202,102,0)" fg:x="916" fg:w="2"/><text x="31.7193%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="31.5318%" y="245" width="0.0688%" height="15" fill="rgb(190,90,0)" fg:x="916" fg:w="2"/><text x="31.7193%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (114 samples, 3.92%)</title><rect x="27.7453%" y="325" width="3.9243%" height="15" fill="rgb(235,135,0)" fg:x="806" fg:w="114"/><text x="27.9328%" y="335.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (114 samples, 3.92%)</title><rect x="27.7453%" y="309" width="3.9243%" height="15" fill="rgb(230,130,0)" fg:x="806" fg:w="114"/><text x="27.9328%" y="319.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (111 samples, 3.82%)</title><rect x="27.8485%" y="293" width="3.8210%" height="15" fill="rgb(190,90,0)" fg:x="809" fg:w="111"/><text x="28.0360%" y="303.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="31.6007%" y="277" width="0.0688%" height="15" fill="rgb(190,90,0)" fg:x="918" fg:w="2"/><text x="31.7882%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.55%)</title><rect x="31.6695%" y="325" width="0.5508%" height="15" fill="rgb(195,95,0)" fg:x="920" fg:w="16"/><text x="31.8570%" y="335.50"></text></g><g><title>[libc.so.6] (15 samples, 0.52%)</title><rect x="31.7040%" y="309" width="0.5164%" height="15" fill="rgb(213,213,64)" fg:x="921" fg:w="15"/><text x="31.8915%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (133 samples, 4.58%)</title><rect x="27.6764%" y="405" width="4.5783%" height="15" fill="rgb(239,139,0)" fg:x="804" fg:w="133"/><text x="27.8639%" y="415.50">&lt;alloc::..</text></g><g><title>alloc::string::String::push_str (132 samples, 4.54%)</title><rect x="27.7108%" y="389" width="4.5439%" height="15" fill="rgb(235,135,0)" fg:x="805" fg:w="132"/><text x="27.8983%" y="399.50">alloc::s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (132 samples, 4.54%)</title><rect x="27.7108%" y="373" width="4.5439%" height="15" fill="rgb(204,104,0)" fg:x="805" fg:w="132"/><text x="27.8983%" y="383.50">alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (132 samples, 4.54%)</title><rect x="27.7108%" y="357" width="4.5439%" height="15" fill="rgb(248,148,0)" fg:x="805" fg:w="132"/><text x="27.8983%" y="367.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (132 samples, 4.54%)</title><rect x="27.7108%" y="341" width="4.5439%" height="15" fill="rgb(204,104,0)" fg:x="805" fg:w="132"/><text x="27.8983%" y="351.50">alloc::v..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="32.2203%" y="325" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="936" fg:w="1"/><text x="32.4078%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="32.2203%" y="309" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="936" fg:w="1"/><text x="32.4078%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="32.2547%" y="405" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="937" fg:w="2"/><text x="32.4422%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="32.2547%" y="389" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="937" fg:w="2"/><text x="32.4422%" y="399.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.07%)</title><rect x="32.3236%" y="405" width="0.0688%" height="15" fill="rgb(69,183,183)" fg:x="939" fg:w="2"/><text x="32.5111%" y="415.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="32.3924%" y="405" width="0.0344%" height="15" fill="rgb(196,96,0)" fg:x="941" fg:w="1"/><text x="32.5799%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (152 samples, 5.23%)</title><rect x="27.3322%" y="437" width="5.2324%" height="15" fill="rgb(216,116,0)" fg:x="794" fg:w="152"/><text x="27.5197%" y="447.50">core::fmt..</text></g><g><title>core::fmt::write (151 samples, 5.20%)</title><rect x="27.3666%" y="421" width="5.1979%" height="15" fill="rgb(249,149,0)" fg:x="795" fg:w="151"/><text x="27.5541%" y="431.50">core::fmt..</text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.14%)</title><rect x="32.4269%" y="405" width="0.1377%" height="15" fill="rgb(218,118,0)" fg:x="942" fg:w="4"/><text x="32.6144%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.10%)</title><rect x="32.4613%" y="389" width="0.1033%" height="15" fill="rgb(227,127,0)" fg:x="943" fg:w="3"/><text x="32.6488%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.10%)</title><rect x="32.4613%" y="373" width="0.1033%" height="15" fill="rgb(215,115,0)" fg:x="943" fg:w="3"/><text x="32.6488%" y="383.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.28%)</title><rect x="32.8055%" y="293" width="0.2754%" height="15" fill="rgb(242,142,0)" fg:x="953" fg:w="8"/><text x="32.9930%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="33.2874%" y="277" width="0.0344%" height="15" fill="rgb(236,136,0)" fg:x="967" fg:w="1"/><text x="33.4749%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="33.2874%" y="261" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="967" fg:w="1"/><text x="33.4749%" y="271.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="33.2874%" y="245" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="967" fg:w="1"/><text x="33.4749%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.03%)</title><rect x="33.3219%" y="277" width="0.0344%" height="15" fill="rgb(200,100,0)" fg:x="968" fg:w="1"/><text x="33.5094%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="33.3219%" y="261" width="0.0344%" height="15" fill="rgb(106,216,216)" fg:x="968" fg:w="1"/><text x="33.5094%" y="271.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (20 samples, 0.69%)</title><rect x="32.8055%" y="309" width="0.6885%" height="15" fill="rgb(248,148,0)" fg:x="953" fg:w="20"/><text x="32.9930%" y="319.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (12 samples, 0.41%)</title><rect x="33.0809%" y="293" width="0.4131%" height="15" fill="rgb(206,106,0)" fg:x="961" fg:w="12"/><text x="33.2684%" y="303.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (4 samples, 0.14%)</title><rect x="33.3563%" y="277" width="0.1377%" height="15" fill="rgb(203,103,0)" fg:x="969" fg:w="4"/><text x="33.5438%" y="287.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.72%)</title><rect x="32.8055%" y="341" width="0.7229%" height="15" fill="rgb(242,142,0)" fg:x="953" fg:w="21"/><text x="32.9930%" y="351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (21 samples, 0.72%)</title><rect x="32.8055%" y="325" width="0.7229%" height="15" fill="rgb(225,125,0)" fg:x="953" fg:w="21"/><text x="32.9930%" y="335.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.03%)</title><rect x="33.4940%" y="309" width="0.0344%" height="15" fill="rgb(251,151,0)" fg:x="973" fg:w="1"/><text x="33.6815%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.10%)</title><rect x="33.5284%" y="277" width="0.1033%" height="15" fill="rgb(227,127,0)" fg:x="974" fg:w="3"/><text x="33.7159%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.10%)</title><rect x="33.5284%" y="261" width="0.1033%" height="15" fill="rgb(234,134,0)" fg:x="974" fg:w="3"/><text x="33.7159%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.10%)</title><rect x="33.5284%" y="245" width="0.1033%" height="15" fill="rgb(232,132,0)" fg:x="974" fg:w="3"/><text x="33.7159%" y="255.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.10%)</title><rect x="33.5284%" y="229" width="0.1033%" height="15" fill="rgb(203,103,0)" fg:x="974" fg:w="3"/><text x="33.7159%" y="239.50"></text></g><g><title>realloc (3 samples, 0.10%)</title><rect x="33.5284%" y="213" width="0.1033%" height="15" fill="rgb(189,189,55)" fg:x="974" fg:w="3"/><text x="33.7159%" y="223.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="33.5284%" y="197" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="974" fg:w="3"/><text x="33.7159%" y="207.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="33.5284%" y="181" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="974" fg:w="3"/><text x="33.7159%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="33.5972%" y="165" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="976" fg:w="1"/><text x="33.7847%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (30 samples, 1.03%)</title><rect x="32.7022%" y="357" width="1.0327%" height="15" fill="rgb(237,137,0)" fg:x="950" fg:w="30"/><text x="32.8897%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.21%)</title><rect x="33.5284%" y="341" width="0.2065%" height="15" fill="rgb(235,135,0)" fg:x="974" fg:w="6"/><text x="33.7159%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.21%)</title><rect x="33.5284%" y="325" width="0.2065%" height="15" fill="rgb(230,130,0)" fg:x="974" fg:w="6"/><text x="33.7159%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.21%)</title><rect x="33.5284%" y="309" width="0.2065%" height="15" fill="rgb(190,90,0)" fg:x="974" fg:w="6"/><text x="33.7159%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.21%)</title><rect x="33.5284%" y="293" width="0.2065%" height="15" fill="rgb(205,105,0)" fg:x="974" fg:w="6"/><text x="33.7159%" y="303.50"></text></g><g><title>core::cmp::max (3 samples, 0.10%)</title><rect x="33.6317%" y="277" width="0.1033%" height="15" fill="rgb(202,102,0)" fg:x="977" fg:w="3"/><text x="33.8192%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.10%)</title><rect x="33.6317%" y="261" width="0.1033%" height="15" fill="rgb(190,90,0)" fg:x="977" fg:w="3"/><text x="33.8192%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (32 samples, 1.10%)</title><rect x="32.7022%" y="373" width="1.1015%" height="15" fill="rgb(249,149,0)" fg:x="950" fg:w="32"/><text x="32.8897%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.07%)</title><rect x="33.7349%" y="357" width="0.0688%" height="15" fill="rgb(241,141,0)" fg:x="980" fg:w="2"/><text x="33.9224%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.07%)</title><rect x="33.7349%" y="341" width="0.0688%" height="15" fill="rgb(209,109,0)" fg:x="980" fg:w="2"/><text x="33.9224%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.07%)</title><rect x="33.7349%" y="325" width="0.0688%" height="15" fill="rgb(193,93,0)" fg:x="980" fg:w="2"/><text x="33.9224%" y="335.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.21%)</title><rect x="33.8038%" y="325" width="0.2065%" height="15" fill="rgb(242,142,0)" fg:x="982" fg:w="6"/><text x="33.9913%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="34.2513%" y="309" width="0.0344%" height="15" fill="rgb(236,136,0)" fg:x="995" fg:w="1"/><text x="34.4388%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="34.2513%" y="293" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="995" fg:w="1"/><text x="34.4388%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="34.2513%" y="277" width="0.0344%" height="15" fill="rgb(198,98,0)" fg:x="995" fg:w="1"/><text x="34.4388%" y="287.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.86%)</title><rect x="33.8038%" y="373" width="0.8606%" height="15" fill="rgb(242,142,0)" fg:x="982" fg:w="25"/><text x="33.9913%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (25 samples, 0.86%)</title><rect x="33.8038%" y="357" width="0.8606%" height="15" fill="rgb(225,125,0)" fg:x="982" fg:w="25"/><text x="33.9913%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (25 samples, 0.86%)</title><rect x="33.8038%" y="341" width="0.8606%" height="15" fill="rgb(248,148,0)" fg:x="982" fg:w="25"/><text x="33.9913%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (19 samples, 0.65%)</title><rect x="34.0103%" y="325" width="0.6540%" height="15" fill="rgb(206,106,0)" fg:x="988" fg:w="19"/><text x="34.1978%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (11 samples, 0.38%)</title><rect x="34.2857%" y="309" width="0.3787%" height="15" fill="rgb(203,103,0)" fg:x="996" fg:w="11"/><text x="34.4732%" y="319.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (2 samples, 0.07%)</title><rect x="34.6644%" y="325" width="0.0688%" height="15" fill="rgb(50,165,165)" fg:x="1007" fg:w="2"/><text x="34.8519%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="34.7332%" y="261" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="1009" fg:w="1"/><text x="34.9207%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="34.7332%" y="245" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="1009" fg:w="1"/><text x="34.9207%" y="255.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="34.7676%" y="261" width="0.0344%" height="15" fill="rgb(220,220,66)" fg:x="1010" fg:w="1"/><text x="34.9551%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 2.38%)</title><rect x="32.5645%" y="437" width="2.3752%" height="15" fill="rgb(250,150,0)" fg:x="946" fg:w="69"/><text x="32.7520%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (69 samples, 2.38%)</title><rect x="32.5645%" y="421" width="2.3752%" height="15" fill="rgb(228,128,0)" fg:x="946" fg:w="69"/><text x="32.7520%" y="431.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 2.38%)</title><rect x="32.5645%" y="405" width="2.3752%" height="15" fill="rgb(234,134,0)" fg:x="946" fg:w="69"/><text x="32.7520%" y="415.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (66 samples, 2.27%)</title><rect x="32.6678%" y="389" width="2.2719%" height="15" fill="rgb(194,94,0)" fg:x="949" fg:w="66"/><text x="32.8553%" y="399.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.28%)</title><rect x="34.6644%" y="373" width="0.2754%" height="15" fill="rgb(233,133,0)" fg:x="1007" fg:w="8"/><text x="34.8519%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.28%)</title><rect x="34.6644%" y="357" width="0.2754%" height="15" fill="rgb(248,148,0)" fg:x="1007" fg:w="8"/><text x="34.8519%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.28%)</title><rect x="34.6644%" y="341" width="0.2754%" height="15" fill="rgb(245,145,0)" fg:x="1007" fg:w="8"/><text x="34.8519%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.21%)</title><rect x="34.7332%" y="325" width="0.2065%" height="15" fill="rgb(247,147,0)" fg:x="1009" fg:w="6"/><text x="34.9207%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.21%)</title><rect x="34.7332%" y="309" width="0.2065%" height="15" fill="rgb(222,122,0)" fg:x="1009" fg:w="6"/><text x="34.9207%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.21%)</title><rect x="34.7332%" y="293" width="0.2065%" height="15" fill="rgb(249,149,0)" fg:x="1009" fg:w="6"/><text x="34.9207%" y="303.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.21%)</title><rect x="34.7332%" y="277" width="0.2065%" height="15" fill="rgb(228,128,0)" fg:x="1009" fg:w="6"/><text x="34.9207%" y="287.50"></text></g><g><title>malloc (4 samples, 0.14%)</title><rect x="34.8021%" y="261" width="0.1377%" height="15" fill="rgb(221,221,67)" fg:x="1011" fg:w="4"/><text x="34.9896%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.31%)</title><rect x="34.9398%" y="437" width="0.3098%" height="15" fill="rgb(236,136,0)" fg:x="1015" fg:w="9"/><text x="35.1273%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.31%)</title><rect x="34.9398%" y="421" width="0.3098%" height="15" fill="rgb(199,99,0)" fg:x="1015" fg:w="9"/><text x="35.1273%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.31%)</title><rect x="34.9398%" y="405" width="0.3098%" height="15" fill="rgb(201,101,0)" fg:x="1015" fg:w="9"/><text x="35.1273%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.31%)</title><rect x="34.9398%" y="389" width="0.3098%" height="15" fill="rgb(226,126,0)" fg:x="1015" fg:w="9"/><text x="35.1273%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.28%)</title><rect x="34.9742%" y="373" width="0.2754%" height="15" fill="rgb(211,111,0)" fg:x="1016" fg:w="8"/><text x="35.1617%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.28%)</title><rect x="34.9742%" y="357" width="0.2754%" height="15" fill="rgb(194,94,0)" fg:x="1016" fg:w="8"/><text x="35.1617%" y="367.50"></text></g><g><title>cfree (8 samples, 0.28%)</title><rect x="34.9742%" y="341" width="0.2754%" height="15" fill="rgb(178,178,51)" fg:x="1016" fg:w="8"/><text x="35.1617%" y="351.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="35.1119%" y="325" width="0.1377%" height="15" fill="rgb(213,213,64)" fg:x="1020" fg:w="4"/><text x="35.2994%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="35.1807%" y="309" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="1022" fg:w="2"/><text x="35.3682%" y="319.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="35.2496%" y="309" width="0.0344%" height="15" fill="rgb(50,165,165)" fg:x="1024" fg:w="1"/><text x="35.4371%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.72%)</title><rect x="35.2496%" y="421" width="0.7229%" height="15" fill="rgb(194,94,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (21 samples, 0.72%)</title><rect x="35.2496%" y="405" width="0.7229%" height="15" fill="rgb(207,107,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21 samples, 0.72%)</title><rect x="35.2496%" y="389" width="0.7229%" height="15" fill="rgb(236,136,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.72%)</title><rect x="35.2496%" y="373" width="0.7229%" height="15" fill="rgb(199,99,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.72%)</title><rect x="35.2496%" y="357" width="0.7229%" height="15" fill="rgb(201,101,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.72%)</title><rect x="35.2496%" y="341" width="0.7229%" height="15" fill="rgb(226,126,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.72%)</title><rect x="35.2496%" y="325" width="0.7229%" height="15" fill="rgb(211,111,0)" fg:x="1024" fg:w="21"/><text x="35.4371%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.69%)</title><rect x="35.2840%" y="309" width="0.6885%" height="15" fill="rgb(194,94,0)" fg:x="1025" fg:w="20"/><text x="35.4715%" y="319.50"></text></g><g><title>cfree (20 samples, 0.69%)</title><rect x="35.2840%" y="293" width="0.6885%" height="15" fill="rgb(178,178,51)" fg:x="1025" fg:w="20"/><text x="35.4715%" y="303.50"></text></g><g><title>[libc.so.6] (13 samples, 0.45%)</title><rect x="35.5250%" y="277" width="0.4475%" height="15" fill="rgb(213,213,64)" fg:x="1032" fg:w="13"/><text x="35.7125%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (22 samples, 0.76%)</title><rect x="35.2496%" y="437" width="0.7573%" height="15" fill="rgb(231,131,0)" fg:x="1024" fg:w="22"/><text x="35.4371%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.03%)</title><rect x="35.9725%" y="421" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="1045" fg:w="1"/><text x="36.1600%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="35.9725%" y="405" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="1045" fg:w="1"/><text x="36.1600%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="35.9725%" y="389" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="1045" fg:w="1"/><text x="36.1600%" y="399.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.03%)</title><rect x="36.2823%" y="389" width="0.0344%" height="15" fill="rgb(237,137,0)" fg:x="1054" fg:w="1"/><text x="36.4698%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.03%)</title><rect x="36.3167%" y="373" width="0.0344%" height="15" fill="rgb(207,107,0)" fg:x="1055" fg:w="1"/><text x="36.5042%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.03%)</title><rect x="36.3167%" y="357" width="0.0344%" height="15" fill="rgb(108,218,218)" fg:x="1055" fg:w="1"/><text x="36.5042%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="36.3167%" y="341" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1055" fg:w="1"/><text x="36.5042%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (13 samples, 0.45%)</title><rect x="36.0069%" y="437" width="0.4475%" height="15" fill="rgb(231,131,0)" fg:x="1046" fg:w="13"/><text x="36.1944%" y="447.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (9 samples, 0.31%)</title><rect x="36.1446%" y="421" width="0.3098%" height="15" fill="rgb(108,218,218)" fg:x="1050" fg:w="9"/><text x="36.3321%" y="431.50"></text></g><g><title>core::str::pattern::StrSearcher::new (9 samples, 0.31%)</title><rect x="36.1446%" y="405" width="0.3098%" height="15" fill="rgb(237,137,0)" fg:x="1050" fg:w="9"/><text x="36.3321%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.14%)</title><rect x="36.3167%" y="389" width="0.1377%" height="15" fill="rgb(205,105,0)" fg:x="1055" fg:w="4"/><text x="36.5042%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (3 samples, 0.10%)</title><rect x="36.3511%" y="373" width="0.1033%" height="15" fill="rgb(203,103,0)" fg:x="1056" fg:w="3"/><text x="36.5386%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.10%)</title><rect x="36.3511%" y="357" width="0.1033%" height="15" fill="rgb(193,93,0)" fg:x="1056" fg:w="3"/><text x="36.5386%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (1 samples, 0.03%)</title><rect x="36.4200%" y="341" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="1058" fg:w="1"/><text x="36.6075%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="36.4888%" y="309" width="0.1033%" height="15" fill="rgb(248,148,0)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="36.4888%" y="293" width="0.1033%" height="15" fill="rgb(245,145,0)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.10%)</title><rect x="36.4888%" y="277" width="0.1033%" height="15" fill="rgb(247,147,0)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.10%)</title><rect x="36.4888%" y="261" width="0.1033%" height="15" fill="rgb(222,122,0)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.10%)</title><rect x="36.4888%" y="245" width="0.1033%" height="15" fill="rgb(249,149,0)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.10%)</title><rect x="36.4888%" y="229" width="0.1033%" height="15" fill="rgb(228,128,0)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="239.50"></text></g><g><title>malloc (3 samples, 0.10%)</title><rect x="36.4888%" y="213" width="0.1033%" height="15" fill="rgb(221,221,67)" fg:x="1060" fg:w="3"/><text x="36.6763%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="36.5232%" y="197" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="1061" fg:w="2"/><text x="36.7107%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.14%)</title><rect x="36.4888%" y="421" width="0.1377%" height="15" fill="rgb(197,97,0)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.14%)</title><rect x="36.4888%" y="405" width="0.1377%" height="15" fill="rgb(209,109,0)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.14%)</title><rect x="36.4888%" y="389" width="0.1377%" height="15" fill="rgb(211,111,0)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.14%)</title><rect x="36.4888%" y="373" width="0.1377%" height="15" fill="rgb(197,97,0)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.14%)</title><rect x="36.4888%" y="357" width="0.1377%" height="15" fill="rgb(224,124,0)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.14%)</title><rect x="36.4888%" y="341" width="0.1377%" height="15" fill="rgb(238,138,0)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.14%)</title><rect x="36.4888%" y="325" width="0.1377%" height="15" fill="rgb(61,175,175)" fg:x="1060" fg:w="4"/><text x="36.6763%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="36.5921%" y="309" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1063" fg:w="1"/><text x="36.7796%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="36.5921%" y="293" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="1063" fg:w="1"/><text x="36.7796%" y="303.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="36.5921%" y="277" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="1063" fg:w="1"/><text x="36.7796%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="36.6609%" y="373" width="0.0688%" height="15" fill="rgb(220,120,0)" fg:x="1065" fg:w="2"/><text x="36.8484%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="36.6609%" y="357" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="1065" fg:w="2"/><text x="36.8484%" y="367.50"></text></g><g><title>alloc::str::join_generic_copy (2 samples, 0.07%)</title><rect x="36.7298%" y="373" width="0.0688%" height="15" fill="rgb(220,120,0)" fg:x="1067" fg:w="2"/><text x="36.9173%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="36.7986%" y="373" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1069" fg:w="2"/><text x="36.9861%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="36.7986%" y="357" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="1069" fg:w="2"/><text x="36.9861%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="36.7986%" y="341" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1069" fg:w="2"/><text x="36.9861%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="36.7986%" y="325" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="1069" fg:w="2"/><text x="36.9861%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="36.7986%" y="309" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="1069" fg:w="2"/><text x="36.9861%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (1 samples, 0.03%)</title><rect x="36.8675%" y="373" width="0.0344%" height="15" fill="rgb(237,137,0)" fg:x="1071" fg:w="1"/><text x="37.0550%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="36.8675%" y="357" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="1071" fg:w="1"/><text x="37.0550%" y="367.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.03%)</title><rect x="36.8675%" y="341" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1071" fg:w="1"/><text x="37.0550%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.62%)</title><rect x="36.9019%" y="373" width="0.6196%" height="15" fill="rgb(233,133,0)" fg:x="1072" fg:w="18"/><text x="37.0894%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.62%)</title><rect x="36.9019%" y="357" width="0.6196%" height="15" fill="rgb(248,148,0)" fg:x="1072" fg:w="18"/><text x="37.0894%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.59%)</title><rect x="36.9363%" y="341" width="0.5852%" height="15" fill="rgb(245,145,0)" fg:x="1073" fg:w="17"/><text x="37.1238%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.59%)</title><rect x="36.9363%" y="325" width="0.5852%" height="15" fill="rgb(247,147,0)" fg:x="1073" fg:w="17"/><text x="37.1238%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.59%)</title><rect x="36.9363%" y="309" width="0.5852%" height="15" fill="rgb(222,122,0)" fg:x="1073" fg:w="17"/><text x="37.1238%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.59%)</title><rect x="36.9363%" y="293" width="0.5852%" height="15" fill="rgb(249,149,0)" fg:x="1073" fg:w="17"/><text x="37.1238%" y="303.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.59%)</title><rect x="36.9363%" y="277" width="0.5852%" height="15" fill="rgb(228,128,0)" fg:x="1073" fg:w="17"/><text x="37.1238%" y="287.50"></text></g><g><title>malloc (17 samples, 0.59%)</title><rect x="36.9363%" y="261" width="0.5852%" height="15" fill="rgb(221,221,67)" fg:x="1073" fg:w="17"/><text x="37.1238%" y="271.50"></text></g><g><title>[libc.so.6] (16 samples, 0.55%)</title><rect x="36.9707%" y="245" width="0.5508%" height="15" fill="rgb(213,213,64)" fg:x="1074" fg:w="16"/><text x="37.1582%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.03%)</title><rect x="37.5215%" y="373" width="0.0344%" height="15" fill="rgb(231,131,0)" fg:x="1090" fg:w="1"/><text x="37.7090%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.03%)</title><rect x="37.5215%" y="357" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="1090" fg:w="1"/><text x="37.7090%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="37.5559%" y="373" width="0.0344%" height="15" fill="rgb(192,92,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.03%)</title><rect x="37.5559%" y="357" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="37.5559%" y="341" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="37.5559%" y="325" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.03%)</title><rect x="37.5559%" y="309" width="0.0344%" height="15" fill="rgb(243,143,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="37.5559%" y="293" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="37.5559%" y="277" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="37.5559%" y="261" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="1091" fg:w="1"/><text x="37.7434%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="37.5904%" y="341" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1092" fg:w="1"/><text x="37.7779%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (30 samples, 1.03%)</title><rect x="36.6265%" y="421" width="1.0327%" height="15" fill="rgb(193,93,0)" fg:x="1064" fg:w="30"/><text x="36.8140%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (30 samples, 1.03%)</title><rect x="36.6265%" y="405" width="1.0327%" height="15" fill="rgb(226,126,0)" fg:x="1064" fg:w="30"/><text x="36.8140%" y="415.50"></text></g><g><title>alloc::str::join_generic_copy (30 samples, 1.03%)</title><rect x="36.6265%" y="389" width="1.0327%" height="15" fill="rgb(220,120,0)" fg:x="1064" fg:w="30"/><text x="36.8140%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.07%)</title><rect x="37.5904%" y="373" width="0.0688%" height="15" fill="rgb(244,144,0)" fg:x="1092" fg:w="2"/><text x="37.7779%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="37.5904%" y="357" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="1092" fg:w="2"/><text x="37.7779%" y="367.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="37.6248%" y="341" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="1093" fg:w="1"/><text x="37.8123%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.83%)</title><rect x="37.6592%" y="357" width="0.8262%" height="15" fill="rgb(234,134,0)" fg:x="1094" fg:w="24"/><text x="37.8467%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.83%)</title><rect x="37.6592%" y="341" width="0.8262%" height="15" fill="rgb(232,132,0)" fg:x="1094" fg:w="24"/><text x="37.8467%" y="351.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.83%)</title><rect x="37.6592%" y="325" width="0.8262%" height="15" fill="rgb(203,103,0)" fg:x="1094" fg:w="24"/><text x="37.8467%" y="335.50"></text></g><g><title>realloc (24 samples, 0.83%)</title><rect x="37.6592%" y="309" width="0.8262%" height="15" fill="rgb(189,189,55)" fg:x="1094" fg:w="24"/><text x="37.8467%" y="319.50"></text></g><g><title>[libc.so.6] (23 samples, 0.79%)</title><rect x="37.6936%" y="293" width="0.7917%" height="15" fill="rgb(213,213,64)" fg:x="1095" fg:w="23"/><text x="37.8811%" y="303.50"></text></g><g><title>[libc.so.6] (13 samples, 0.45%)</title><rect x="38.0379%" y="277" width="0.4475%" height="15" fill="rgb(213,213,64)" fg:x="1105" fg:w="13"/><text x="38.2254%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.86%)</title><rect x="37.6592%" y="405" width="0.8606%" height="15" fill="rgb(219,119,0)" fg:x="1094" fg:w="25"/><text x="37.8467%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.86%)</title><rect x="37.6592%" y="389" width="0.8606%" height="15" fill="rgb(205,105,0)" fg:x="1094" fg:w="25"/><text x="37.8467%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.86%)</title><rect x="37.6592%" y="373" width="0.8606%" height="15" fill="rgb(227,127,0)" fg:x="1094" fg:w="25"/><text x="37.8467%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="38.4854%" y="357" width="0.0344%" height="15" fill="rgb(232,132,0)" fg:x="1118" fg:w="1"/><text x="38.6729%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27 samples, 0.93%)</title><rect x="37.6592%" y="421" width="0.9294%" height="15" fill="rgb(254,154,0)" fg:x="1094" fg:w="27"/><text x="37.8467%" y="431.50"></text></g><g><title>core::ptr::write (2 samples, 0.07%)</title><rect x="38.5198%" y="405" width="0.0688%" height="15" fill="rgb(230,130,0)" fg:x="1119" fg:w="2"/><text x="38.7073%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="38.7263%" y="309" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="1125" fg:w="1"/><text x="38.9138%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="38.7952%" y="293" width="0.0344%" height="15" fill="rgb(232,132,0)" fg:x="1127" fg:w="1"/><text x="38.9827%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="38.7952%" y="277" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="1127" fg:w="1"/><text x="38.9827%" y="287.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.21%)</title><rect x="38.8296%" y="261" width="0.2065%" height="15" fill="rgb(226,126,0)" fg:x="1128" fg:w="6"/><text x="39.0171%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.21%)</title><rect x="38.8296%" y="245" width="0.2065%" height="15" fill="rgb(222,122,0)" fg:x="1128" fg:w="6"/><text x="39.0171%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.21%)</title><rect x="38.8296%" y="229" width="0.2065%" height="15" fill="rgb(249,149,0)" fg:x="1128" fg:w="6"/><text x="39.0171%" y="239.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.21%)</title><rect x="38.8296%" y="213" width="0.2065%" height="15" fill="rgb(228,128,0)" fg:x="1128" fg:w="6"/><text x="39.0171%" y="223.50"></text></g><g><title>malloc (6 samples, 0.21%)</title><rect x="38.8296%" y="197" width="0.2065%" height="15" fill="rgb(221,221,67)" fg:x="1128" fg:w="6"/><text x="39.0171%" y="207.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (1 samples, 0.03%)</title><rect x="39.0706%" y="213" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="1135" fg:w="1"/><text x="39.2581%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="39.2427%" y="149" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="1140" fg:w="1"/><text x="39.4302%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="39.2427%" y="133" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1140" fg:w="1"/><text x="39.4302%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="39.2427%" y="117" width="0.0344%" height="15" fill="rgb(216,116,0)" fg:x="1140" fg:w="1"/><text x="39.4302%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="39.2427%" y="197" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1140" fg:w="2"/><text x="39.4302%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="39.2427%" y="181" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="1140" fg:w="2"/><text x="39.4302%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="39.2427%" y="165" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1140" fg:w="2"/><text x="39.4302%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="39.2771%" y="149" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="1141" fg:w="1"/><text x="39.4646%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="39.2771%" y="133" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1141" fg:w="1"/><text x="39.4646%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="39.3115%" y="85" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="1142" fg:w="1"/><text x="39.4990%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="39.3115%" y="69" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="1142" fg:w="1"/><text x="39.4990%" y="79.50"></text></g><g><title>__rust_alloc (2 samples, 0.07%)</title><rect x="39.3460%" y="85" width="0.0688%" height="15" fill="rgb(220,220,66)" fg:x="1143" fg:w="2"/><text x="39.5335%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.21%)</title><rect x="39.3115%" y="197" width="0.2065%" height="15" fill="rgb(233,133,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.21%)</title><rect x="39.3115%" y="181" width="0.2065%" height="15" fill="rgb(248,148,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.21%)</title><rect x="39.3115%" y="165" width="0.2065%" height="15" fill="rgb(245,145,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.21%)</title><rect x="39.3115%" y="149" width="0.2065%" height="15" fill="rgb(247,147,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.21%)</title><rect x="39.3115%" y="133" width="0.2065%" height="15" fill="rgb(222,122,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.21%)</title><rect x="39.3115%" y="117" width="0.2065%" height="15" fill="rgb(249,149,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="127.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.21%)</title><rect x="39.3115%" y="101" width="0.2065%" height="15" fill="rgb(228,128,0)" fg:x="1142" fg:w="6"/><text x="39.4990%" y="111.50"></text></g><g><title>malloc (3 samples, 0.10%)</title><rect x="39.4148%" y="85" width="0.1033%" height="15" fill="rgb(221,221,67)" fg:x="1145" fg:w="3"/><text x="39.6023%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.07%)</title><rect x="39.5181%" y="197" width="0.0688%" height="15" fill="rgb(192,92,0)" fg:x="1148" fg:w="2"/><text x="39.7056%" y="207.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (2 samples, 0.07%)</title><rect x="39.5181%" y="181" width="0.0688%" height="15" fill="rgb(220,120,0)" fg:x="1148" fg:w="2"/><text x="39.7056%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.07%)</title><rect x="39.5181%" y="165" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1148" fg:w="2"/><text x="39.7056%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.07%)</title><rect x="39.5181%" y="149" width="0.0688%" height="15" fill="rgb(228,128,0)" fg:x="1148" fg:w="2"/><text x="39.7056%" y="159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="39.5181%" y="133" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="1148" fg:w="2"/><text x="39.7056%" y="143.50"></text></g><g><title>alloc::str::join_generic_copy (16 samples, 0.55%)</title><rect x="39.1050%" y="213" width="0.5508%" height="15" fill="rgb(220,120,0)" fg:x="1136" fg:w="16"/><text x="39.2925%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.07%)</title><rect x="39.5869%" y="197" width="0.0688%" height="15" fill="rgb(244,144,0)" fg:x="1150" fg:w="2"/><text x="39.7744%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="39.5869%" y="181" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="1150" fg:w="2"/><text x="39.7744%" y="191.50"></text></g><g><title>memcpy (2 samples, 0.07%)</title><rect x="39.5869%" y="165" width="0.0688%" height="15" fill="rgb(207,207,61)" fg:x="1150" fg:w="2"/><text x="39.7744%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (23 samples, 0.79%)</title><rect x="39.0361%" y="261" width="0.7917%" height="15" fill="rgb(252,152,0)" fg:x="1134" fg:w="23"/><text x="39.2236%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (22 samples, 0.76%)</title><rect x="39.0706%" y="245" width="0.7573%" height="15" fill="rgb(197,97,0)" fg:x="1135" fg:w="22"/><text x="39.2581%" y="255.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (22 samples, 0.76%)</title><rect x="39.0706%" y="229" width="0.7573%" height="15" fill="rgb(226,126,0)" fg:x="1135" fg:w="22"/><text x="39.2581%" y="239.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (5 samples, 0.17%)</title><rect x="39.6558%" y="213" width="0.1721%" height="15" fill="rgb(197,97,0)" fg:x="1152" fg:w="5"/><text x="39.8433%" y="223.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="39.8279%" y="181" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1157" fg:w="1"/><text x="40.0154%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 1.27%)</title><rect x="38.7263%" y="357" width="1.2737%" height="15" fill="rgb(249,149,0)" fg:x="1125" fg:w="37"/><text x="38.9138%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (37 samples, 1.27%)</title><rect x="38.7263%" y="341" width="1.2737%" height="15" fill="rgb(241,141,0)" fg:x="1125" fg:w="37"/><text x="38.9138%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 1.27%)</title><rect x="38.7263%" y="325" width="1.2737%" height="15" fill="rgb(209,109,0)" fg:x="1125" fg:w="37"/><text x="38.9138%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 1.24%)</title><rect x="38.7608%" y="309" width="1.2392%" height="15" fill="rgb(193,93,0)" fg:x="1126" fg:w="36"/><text x="38.9483%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (34 samples, 1.17%)</title><rect x="38.8296%" y="293" width="1.1704%" height="15" fill="rgb(221,121,0)" fg:x="1128" fg:w="34"/><text x="39.0171%" y="303.50"></text></g><g><title>pillar::utils::format::fast_zip::{{closure}} (34 samples, 1.17%)</title><rect x="38.8296%" y="277" width="1.1704%" height="15" fill="rgb(52,167,167)" fg:x="1128" fg:w="34"/><text x="39.0171%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (5 samples, 0.17%)</title><rect x="39.8279%" y="261" width="0.1721%" height="15" fill="rgb(238,138,0)" fg:x="1157" fg:w="5"/><text x="40.0154%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (5 samples, 0.17%)</title><rect x="39.8279%" y="245" width="0.1721%" height="15" fill="rgb(194,94,0)" fg:x="1157" fg:w="5"/><text x="40.0154%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="39.8279%" y="229" width="0.1721%" height="15" fill="rgb(226,126,0)" fg:x="1157" fg:w="5"/><text x="40.0154%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.17%)</title><rect x="39.8279%" y="213" width="0.1721%" height="15" fill="rgb(211,111,0)" fg:x="1157" fg:w="5"/><text x="40.0154%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.17%)</title><rect x="39.8279%" y="197" width="0.1721%" height="15" fill="rgb(194,94,0)" fg:x="1157" fg:w="5"/><text x="40.0154%" y="207.50"></text></g><g><title>cfree (4 samples, 0.14%)</title><rect x="39.8623%" y="181" width="0.1377%" height="15" fill="rgb(178,178,51)" fg:x="1158" fg:w="4"/><text x="40.0498%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="39.8967%" y="165" width="0.1033%" height="15" fill="rgb(213,213,64)" fg:x="1159" fg:w="3"/><text x="40.0842%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="40.0344%" y="245" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="1163" fg:w="1"/><text x="40.2219%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="40.0344%" y="229" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="1163" fg:w="1"/><text x="40.2219%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 1.51%)</title><rect x="38.5886%" y="421" width="1.5146%" height="15" fill="rgb(250,150,0)" fg:x="1121" fg:w="44"/><text x="38.7761%" y="431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (44 samples, 1.51%)</title><rect x="38.5886%" y="405" width="1.5146%" height="15" fill="rgb(228,128,0)" fg:x="1121" fg:w="44"/><text x="38.7761%" y="415.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44 samples, 1.51%)</title><rect x="38.5886%" y="389" width="1.5146%" height="15" fill="rgb(234,134,0)" fg:x="1121" fg:w="44"/><text x="38.7761%" y="399.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (40 samples, 1.38%)</title><rect x="38.7263%" y="373" width="1.3769%" height="15" fill="rgb(194,94,0)" fg:x="1125" fg:w="40"/><text x="38.9138%" y="383.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.10%)</title><rect x="40.0000%" y="357" width="0.1033%" height="15" fill="rgb(233,133,0)" fg:x="1162" fg:w="3"/><text x="40.1875%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="40.0000%" y="341" width="0.1033%" height="15" fill="rgb(248,148,0)" fg:x="1162" fg:w="3"/><text x="40.1875%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="40.0000%" y="325" width="0.1033%" height="15" fill="rgb(245,145,0)" fg:x="1162" fg:w="3"/><text x="40.1875%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.10%)</title><rect x="40.0000%" y="309" width="0.1033%" height="15" fill="rgb(247,147,0)" fg:x="1162" fg:w="3"/><text x="40.1875%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="40.0344%" y="293" width="0.0688%" height="15" fill="rgb(222,122,0)" fg:x="1163" fg:w="2"/><text x="40.2219%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="40.0344%" y="277" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="1163" fg:w="2"/><text x="40.2219%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="40.0344%" y="261" width="0.0688%" height="15" fill="rgb(228,128,0)" fg:x="1163" fg:w="2"/><text x="40.2219%" y="271.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="40.0688%" y="245" width="0.0344%" height="15" fill="rgb(221,221,67)" fg:x="1164" fg:w="1"/><text x="40.2563%" y="255.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.07%)</title><rect x="40.1033%" y="341" width="0.0688%" height="15" fill="rgb(223,223,67)" fg:x="1165" fg:w="2"/><text x="40.2908%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.07%)</title><rect x="40.1033%" y="325" width="0.0688%" height="15" fill="rgb(213,113,0)" fg:x="1165" fg:w="2"/><text x="40.2908%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="40.1721%" y="341" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1167" fg:w="1"/><text x="40.3596%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.55%)</title><rect x="40.1033%" y="373" width="0.5508%" height="15" fill="rgb(211,111,0)" fg:x="1165" fg:w="16"/><text x="40.2908%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.55%)</title><rect x="40.1033%" y="357" width="0.5508%" height="15" fill="rgb(194,94,0)" fg:x="1165" fg:w="16"/><text x="40.2908%" y="367.50"></text></g><g><title>cfree (13 samples, 0.45%)</title><rect x="40.2065%" y="341" width="0.4475%" height="15" fill="rgb(178,178,51)" fg:x="1168" fg:w="13"/><text x="40.3940%" y="351.50"></text></g><g><title>[libc.so.6] (7 samples, 0.24%)</title><rect x="40.4131%" y="325" width="0.2410%" height="15" fill="rgb(213,213,64)" fg:x="1174" fg:w="7"/><text x="40.6006%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (17 samples, 0.59%)</title><rect x="40.1033%" y="421" width="0.5852%" height="15" fill="rgb(238,138,0)" fg:x="1165" fg:w="17"/><text x="40.2908%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (17 samples, 0.59%)</title><rect x="40.1033%" y="405" width="0.5852%" height="15" fill="rgb(194,94,0)" fg:x="1165" fg:w="17"/><text x="40.2908%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.59%)</title><rect x="40.1033%" y="389" width="0.5852%" height="15" fill="rgb(226,126,0)" fg:x="1165" fg:w="17"/><text x="40.2908%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="40.6540%" y="373" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="1181" fg:w="1"/><text x="40.8415%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.45%)</title><rect x="40.7573%" y="309" width="0.4475%" height="15" fill="rgb(211,111,0)" fg:x="1184" fg:w="13"/><text x="40.9448%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.45%)</title><rect x="40.7573%" y="293" width="0.4475%" height="15" fill="rgb(194,94,0)" fg:x="1184" fg:w="13"/><text x="40.9448%" y="303.50"></text></g><g><title>cfree (13 samples, 0.45%)</title><rect x="40.7573%" y="277" width="0.4475%" height="15" fill="rgb(178,178,51)" fg:x="1184" fg:w="13"/><text x="40.9448%" y="287.50"></text></g><g><title>[libc.so.6] (8 samples, 0.28%)</title><rect x="40.9294%" y="261" width="0.2754%" height="15" fill="rgb(213,213,64)" fg:x="1189" fg:w="8"/><text x="41.1169%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.55%)</title><rect x="40.6885%" y="405" width="0.5508%" height="15" fill="rgb(194,94,0)" fg:x="1182" fg:w="16"/><text x="40.8760%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (16 samples, 0.55%)</title><rect x="40.6885%" y="389" width="0.5508%" height="15" fill="rgb(207,107,0)" fg:x="1182" fg:w="16"/><text x="40.8760%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (16 samples, 0.55%)</title><rect x="40.6885%" y="373" width="0.5508%" height="15" fill="rgb(236,136,0)" fg:x="1182" fg:w="16"/><text x="40.8760%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.55%)</title><rect x="40.6885%" y="357" width="0.5508%" height="15" fill="rgb(199,99,0)" fg:x="1182" fg:w="16"/><text x="40.8760%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.55%)</title><rect x="40.6885%" y="341" width="0.5508%" height="15" fill="rgb(201,101,0)" fg:x="1182" fg:w="16"/><text x="40.8760%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.55%)</title><rect x="40.6885%" y="325" width="0.5508%" height="15" fill="rgb(226,126,0)" fg:x="1182" fg:w="16"/><text x="40.8760%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="41.2048%" y="309" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="1197" fg:w="1"/><text x="41.3923%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="41.2048%" y="293" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="1197" fg:w="1"/><text x="41.3923%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="41.2048%" y="277" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="1197" fg:w="1"/><text x="41.3923%" y="287.50"></text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (861 samples, 29.64%)</title><rect x="12.0482%" y="453" width="29.6386%" height="15" fill="rgb(50,165,165)" fg:x="350" fg:w="861"/><text x="12.2357%" y="463.50">&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt</text></g><g><title>pillar::utils::format::fast_zip (152 samples, 5.23%)</title><rect x="36.4544%" y="437" width="5.2324%" height="15" fill="rgb(73,186,186)" fg:x="1059" fg:w="152"/><text x="36.6419%" y="447.50">pillar::u..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (29 samples, 1.00%)</title><rect x="40.6885%" y="421" width="0.9983%" height="15" fill="rgb(231,131,0)" fg:x="1182" fg:w="29"/><text x="40.8760%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (13 samples, 0.45%)</title><rect x="41.2392%" y="405" width="0.4475%" height="15" fill="rgb(199,99,0)" fg:x="1198" fg:w="13"/><text x="41.4267%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.45%)</title><rect x="41.2392%" y="389" width="0.4475%" height="15" fill="rgb(226,126,0)" fg:x="1198" fg:w="13"/><text x="41.4267%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.41%)</title><rect x="41.2737%" y="373" width="0.4131%" height="15" fill="rgb(211,111,0)" fg:x="1199" fg:w="12"/><text x="41.4612%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.41%)</title><rect x="41.2737%" y="357" width="0.4131%" height="15" fill="rgb(194,94,0)" fg:x="1199" fg:w="12"/><text x="41.4612%" y="367.50"></text></g><g><title>cfree (12 samples, 0.41%)</title><rect x="41.2737%" y="341" width="0.4131%" height="15" fill="rgb(178,178,51)" fg:x="1199" fg:w="12"/><text x="41.4612%" y="351.50"></text></g><g><title>[libc.so.6] (10 samples, 0.34%)</title><rect x="41.3425%" y="325" width="0.3442%" height="15" fill="rgb(213,213,64)" fg:x="1201" fg:w="10"/><text x="41.5300%" y="335.50"></text></g><g><title>[libc.so.6] (7 samples, 0.24%)</title><rect x="41.4458%" y="309" width="0.2410%" height="15" fill="rgb(213,213,64)" fg:x="1204" fg:w="7"/><text x="41.6333%" y="319.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (862 samples, 29.67%)</title><rect x="12.0482%" y="469" width="29.6730%" height="15" fill="rgb(69,183,183)" fg:x="350" fg:w="862"/><text x="12.2357%" y="479.50">&lt;T as alloc::string::ToString&gt;::to_string</text></g><g><title>alloc::string::String::new (1 samples, 0.03%)</title><rect x="41.6867%" y="453" width="0.0344%" height="15" fill="rgb(218,118,0)" fg:x="1211" fg:w="1"/><text x="41.8742%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.17%)</title><rect x="41.7556%" y="453" width="0.1721%" height="15" fill="rgb(219,119,0)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.17%)</title><rect x="41.7556%" y="437" width="0.1721%" height="15" fill="rgb(205,105,0)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.17%)</title><rect x="41.7556%" y="421" width="0.1721%" height="15" fill="rgb(227,127,0)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.17%)</title><rect x="41.7556%" y="405" width="0.1721%" height="15" fill="rgb(234,134,0)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.17%)</title><rect x="41.7556%" y="389" width="0.1721%" height="15" fill="rgb(232,132,0)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="399.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.17%)</title><rect x="41.7556%" y="373" width="0.1721%" height="15" fill="rgb(203,103,0)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="383.50"></text></g><g><title>realloc (5 samples, 0.17%)</title><rect x="41.7556%" y="357" width="0.1721%" height="15" fill="rgb(189,189,55)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="41.7556%" y="341" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="351.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="41.7556%" y="325" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="1213" fg:w="5"/><text x="41.9431%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="41.8933%" y="309" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1217" fg:w="1"/><text x="42.0808%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.59%)</title><rect x="41.7212%" y="469" width="0.5852%" height="15" fill="rgb(254,154,0)" fg:x="1212" fg:w="17"/><text x="41.9087%" y="479.50"></text></g><g><title>core::ptr::write (11 samples, 0.38%)</title><rect x="41.9277%" y="453" width="0.3787%" height="15" fill="rgb(230,130,0)" fg:x="1218" fg:w="11"/><text x="42.1152%" y="463.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="42.3064%" y="469" width="0.0688%" height="15" fill="rgb(178,178,51)" fg:x="1229" fg:w="2"/><text x="42.4939%" y="479.50"></text></g><g><title>__munmap (2 samples, 0.07%)</title><rect x="42.3064%" y="453" width="0.0688%" height="15" fill="rgb(218,218,65)" fg:x="1229" fg:w="2"/><text x="42.4939%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 1.34%)</title><rect x="42.3752%" y="341" width="1.3425%" height="15" fill="rgb(235,135,0)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="351.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 1.34%)</title><rect x="42.3752%" y="325" width="1.3425%" height="15" fill="rgb(230,130,0)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="335.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 1.34%)</title><rect x="42.3752%" y="309" width="1.3425%" height="15" fill="rgb(190,90,0)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="319.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 1.34%)</title><rect x="42.3752%" y="293" width="1.3425%" height="15" fill="rgb(205,105,0)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="303.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 1.34%)</title><rect x="42.3752%" y="277" width="1.3425%" height="15" fill="rgb(227,127,0)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="287.50">a..</text></g><g><title>malloc (39 samples, 1.34%)</title><rect x="42.3752%" y="261" width="1.3425%" height="15" fill="rgb(221,221,67)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="271.50">m..</text></g><g><title>[libc.so.6] (39 samples, 1.34%)</title><rect x="42.3752%" y="245" width="1.3425%" height="15" fill="rgb(213,213,64)" fg:x="1231" fg:w="39"/><text x="42.5627%" y="255.50">[..</text></g><g><title>[libc.so.6] (38 samples, 1.31%)</title><rect x="42.4096%" y="229" width="1.3081%" height="15" fill="rgb(213,213,64)" fg:x="1232" fg:w="38"/><text x="42.5971%" y="239.50"></text></g><g><title>[libc.so.6] (15 samples, 0.52%)</title><rect x="43.2014%" y="213" width="0.5164%" height="15" fill="rgb(213,213,64)" fg:x="1255" fg:w="15"/><text x="43.3889%" y="223.50"></text></g><g><title>core::fmt::Formatter::write_fmt (51 samples, 1.76%)</title><rect x="42.3752%" y="469" width="1.7556%" height="15" fill="rgb(216,116,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="479.50">c..</text></g><g><title>core::fmt::write (51 samples, 1.76%)</title><rect x="42.3752%" y="453" width="1.7556%" height="15" fill="rgb(249,149,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="463.50">c..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (51 samples, 1.76%)</title><rect x="42.3752%" y="437" width="1.7556%" height="15" fill="rgb(78,191,191)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="447.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (51 samples, 1.76%)</title><rect x="42.3752%" y="421" width="1.7556%" height="15" fill="rgb(239,139,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="431.50">&lt;..</text></g><g><title>alloc::string::String::push_str (51 samples, 1.76%)</title><rect x="42.3752%" y="405" width="1.7556%" height="15" fill="rgb(235,135,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="415.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 1.76%)</title><rect x="42.3752%" y="389" width="1.7556%" height="15" fill="rgb(204,104,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="399.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 1.76%)</title><rect x="42.3752%" y="373" width="1.7556%" height="15" fill="rgb(248,148,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="383.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 1.76%)</title><rect x="42.3752%" y="357" width="1.7556%" height="15" fill="rgb(204,104,0)" fg:x="1231" fg:w="51"/><text x="42.5627%" y="367.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.41%)</title><rect x="43.7177%" y="341" width="0.4131%" height="15" fill="rgb(195,95,0)" fg:x="1270" fg:w="12"/><text x="43.9052%" y="351.50"></text></g><g><title>[libc.so.6] (12 samples, 0.41%)</title><rect x="43.7177%" y="325" width="0.4131%" height="15" fill="rgb(213,213,64)" fg:x="1270" fg:w="12"/><text x="43.9052%" y="335.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="44.1997%" y="341" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="1284" fg:w="1"/><text x="44.3872%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="44.3029%" y="309" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="1287" fg:w="1"/><text x="44.4904%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.03%)</title><rect x="44.3029%" y="293" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="1287" fg:w="1"/><text x="44.4904%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.03%)</title><rect x="44.3029%" y="277" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="1287" fg:w="1"/><text x="44.4904%" y="287.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.31%)</title><rect x="44.1652%" y="373" width="0.3098%" height="15" fill="rgb(242,142,0)" fg:x="1283" fg:w="9"/><text x="44.3527%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (9 samples, 0.31%)</title><rect x="44.1652%" y="357" width="0.3098%" height="15" fill="rgb(225,125,0)" fg:x="1283" fg:w="9"/><text x="44.3527%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.24%)</title><rect x="44.2341%" y="341" width="0.2410%" height="15" fill="rgb(248,148,0)" fg:x="1285" fg:w="7"/><text x="44.4216%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.21%)</title><rect x="44.2685%" y="325" width="0.2065%" height="15" fill="rgb(206,106,0)" fg:x="1286" fg:w="6"/><text x="44.4560%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (4 samples, 0.14%)</title><rect x="44.3373%" y="309" width="0.1377%" height="15" fill="rgb(203,103,0)" fg:x="1288" fg:w="4"/><text x="44.5248%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="44.4750%" y="373" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="44.4750%" y="357" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="44.4750%" y="341" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="44.4750%" y="325" width="0.0344%" height="15" fill="rgb(205,105,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="44.4750%" y="309" width="0.0344%" height="15" fill="rgb(227,127,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="44.4750%" y="293" width="0.0344%" height="15" fill="rgb(234,134,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="44.4750%" y="277" width="0.0344%" height="15" fill="rgb(232,132,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="44.4750%" y="261" width="0.0344%" height="15" fill="rgb(203,103,0)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="271.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="44.4750%" y="245" width="0.0344%" height="15" fill="rgb(189,189,55)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.4750%" y="229" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.4750%" y="213" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1292" fg:w="1"/><text x="44.6625%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.41%)</title><rect x="44.1308%" y="389" width="0.4131%" height="15" fill="rgb(237,137,0)" fg:x="1282" fg:w="12"/><text x="44.3183%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="44.5095%" y="373" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1293" fg:w="1"/><text x="44.6970%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.55%)</title><rect x="44.1308%" y="469" width="0.5508%" height="15" fill="rgb(250,150,0)" fg:x="1282" fg:w="16"/><text x="44.3183%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.55%)</title><rect x="44.1308%" y="453" width="0.5508%" height="15" fill="rgb(228,128,0)" fg:x="1282" fg:w="16"/><text x="44.3183%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.55%)</title><rect x="44.1308%" y="437" width="0.5508%" height="15" fill="rgb(234,134,0)" fg:x="1282" fg:w="16"/><text x="44.3183%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.55%)</title><rect x="44.1308%" y="421" width="0.5508%" height="15" fill="rgb(194,94,0)" fg:x="1282" fg:w="16"/><text x="44.3183%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.55%)</title><rect x="44.1308%" y="405" width="0.5508%" height="15" fill="rgb(249,149,0)" fg:x="1282" fg:w="16"/><text x="44.3183%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.14%)</title><rect x="44.5439%" y="389" width="0.1377%" height="15" fill="rgb(241,141,0)" fg:x="1294" fg:w="4"/><text x="44.7314%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.14%)</title><rect x="44.5439%" y="373" width="0.1377%" height="15" fill="rgb(209,109,0)" fg:x="1294" fg:w="4"/><text x="44.7314%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.14%)</title><rect x="44.5439%" y="357" width="0.1377%" height="15" fill="rgb(193,93,0)" fg:x="1294" fg:w="4"/><text x="44.7314%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.07%)</title><rect x="44.6127%" y="341" width="0.0688%" height="15" fill="rgb(221,121,0)" fg:x="1296" fg:w="2"/><text x="44.8002%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.07%)</title><rect x="44.6127%" y="325" width="0.0688%" height="15" fill="rgb(200,100,0)" fg:x="1296" fg:w="2"/><text x="44.8002%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (2 samples, 0.07%)</title><rect x="44.6127%" y="309" width="0.0688%" height="15" fill="rgb(191,91,0)" fg:x="1296" fg:w="2"/><text x="44.8002%" y="319.50"></text></g><g><title>core::ptr::write (2 samples, 0.07%)</title><rect x="44.6127%" y="293" width="0.0688%" height="15" fill="rgb(230,130,0)" fg:x="1296" fg:w="2"/><text x="44.8002%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (38 samples, 1.31%)</title><rect x="44.6816%" y="469" width="1.3081%" height="15" fill="rgb(236,136,0)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (38 samples, 1.31%)</title><rect x="44.6816%" y="453" width="1.3081%" height="15" fill="rgb(199,99,0)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (38 samples, 1.31%)</title><rect x="44.6816%" y="437" width="1.3081%" height="15" fill="rgb(201,101,0)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 1.31%)</title><rect x="44.6816%" y="421" width="1.3081%" height="15" fill="rgb(226,126,0)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 1.31%)</title><rect x="44.6816%" y="405" width="1.3081%" height="15" fill="rgb(211,111,0)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 1.31%)</title><rect x="44.6816%" y="389" width="1.3081%" height="15" fill="rgb(194,94,0)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="399.50"></text></g><g><title>cfree (38 samples, 1.31%)</title><rect x="44.6816%" y="373" width="1.3081%" height="15" fill="rgb(178,178,51)" fg:x="1298" fg:w="38"/><text x="44.8691%" y="383.50"></text></g><g><title>[libc.so.6] (36 samples, 1.24%)</title><rect x="44.7504%" y="357" width="1.2392%" height="15" fill="rgb(213,213,64)" fg:x="1300" fg:w="36"/><text x="44.9379%" y="367.50"></text></g><g><title>[libc.so.6] (27 samples, 0.93%)</title><rect x="45.0602%" y="341" width="0.9294%" height="15" fill="rgb(213,213,64)" fg:x="1309" fg:w="27"/><text x="45.2477%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 1.27%)</title><rect x="45.9897%" y="357" width="1.2737%" height="15" fill="rgb(211,111,0)" fg:x="1336" fg:w="37"/><text x="46.1772%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 1.27%)</title><rect x="45.9897%" y="341" width="1.2737%" height="15" fill="rgb(194,94,0)" fg:x="1336" fg:w="37"/><text x="46.1772%" y="351.50"></text></g><g><title>cfree (37 samples, 1.27%)</title><rect x="45.9897%" y="325" width="1.2737%" height="15" fill="rgb(178,178,51)" fg:x="1336" fg:w="37"/><text x="46.1772%" y="335.50"></text></g><g><title>[libc.so.6] (30 samples, 1.03%)</title><rect x="46.2306%" y="309" width="1.0327%" height="15" fill="rgb(213,213,64)" fg:x="1343" fg:w="30"/><text x="46.4181%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.21%)</title><rect x="47.0568%" y="293" width="0.2065%" height="15" fill="rgb(213,213,64)" fg:x="1367" fg:w="6"/><text x="47.2443%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (39 samples, 1.34%)</title><rect x="45.9897%" y="469" width="1.3425%" height="15" fill="rgb(231,131,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="479.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 1.34%)</title><rect x="45.9897%" y="453" width="1.3425%" height="15" fill="rgb(194,94,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="463.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (39 samples, 1.34%)</title><rect x="45.9897%" y="437" width="1.3425%" height="15" fill="rgb(207,107,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (39 samples, 1.34%)</title><rect x="45.9897%" y="421" width="1.3425%" height="15" fill="rgb(236,136,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (39 samples, 1.34%)</title><rect x="45.9897%" y="405" width="1.3425%" height="15" fill="rgb(199,99,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (39 samples, 1.34%)</title><rect x="45.9897%" y="389" width="1.3425%" height="15" fill="rgb(201,101,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="399.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 1.34%)</title><rect x="45.9897%" y="373" width="1.3425%" height="15" fill="rgb(226,126,0)" fg:x="1336" fg:w="39"/><text x="46.1772%" y="383.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.07%)</title><rect x="47.2633%" y="357" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="1373" fg:w="2"/><text x="47.4508%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.07%)</title><rect x="47.2633%" y="341" width="0.0688%" height="15" fill="rgb(235,135,0)" fg:x="1373" fg:w="2"/><text x="47.4508%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.07%)</title><rect x="47.2633%" y="325" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="1373" fg:w="2"/><text x="47.4508%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="47.3322%" y="405" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1375" fg:w="1"/><text x="47.5197%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="47.3322%" y="389" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="1375" fg:w="1"/><text x="47.5197%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="47.3666%" y="405" width="0.0344%" height="15" fill="rgb(192,92,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="415.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.03%)</title><rect x="47.3666%" y="389" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="47.3666%" y="373" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="47.3666%" y="357" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.03%)</title><rect x="47.3666%" y="341" width="0.0344%" height="15" fill="rgb(243,143,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="47.3666%" y="325" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="47.3666%" y="309" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="47.3666%" y="293" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="1376" fg:w="1"/><text x="47.5541%" y="303.50"></text></g><g><title>[libc.so.6] (33 samples, 1.14%)</title><rect x="47.4010%" y="373" width="1.1360%" height="15" fill="rgb(213,213,64)" fg:x="1377" fg:w="33"/><text x="47.5885%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (36 samples, 1.24%)</title><rect x="47.4010%" y="405" width="1.2392%" height="15" fill="rgb(244,144,0)" fg:x="1377" fg:w="36"/><text x="47.5885%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 1.24%)</title><rect x="47.4010%" y="389" width="1.2392%" height="15" fill="rgb(195,95,0)" fg:x="1377" fg:w="36"/><text x="47.5885%" y="399.50"></text></g><g><title>memcpy (3 samples, 0.10%)</title><rect x="48.5370%" y="373" width="0.1033%" height="15" fill="rgb(207,207,61)" fg:x="1410" fg:w="3"/><text x="48.7245%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (39 samples, 1.34%)</title><rect x="47.3322%" y="453" width="1.3425%" height="15" fill="rgb(193,93,0)" fg:x="1375" fg:w="39"/><text x="47.5197%" y="463.50">a..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (39 samples, 1.34%)</title><rect x="47.3322%" y="437" width="1.3425%" height="15" fill="rgb(226,126,0)" fg:x="1375" fg:w="39"/><text x="47.5197%" y="447.50">a..</text></g><g><title>alloc::str::join_generic_copy (39 samples, 1.34%)</title><rect x="47.3322%" y="421" width="1.3425%" height="15" fill="rgb(220,120,0)" fg:x="1375" fg:w="39"/><text x="47.5197%" y="431.50">a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.03%)</title><rect x="48.6403%" y="405" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1413" fg:w="1"/><text x="48.8278%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="48.6747%" y="341" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="1414" fg:w="1"/><text x="48.8622%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="48.7780%" y="309" width="0.0344%" height="15" fill="rgb(200,100,0)" fg:x="1417" fg:w="1"/><text x="48.9655%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.03%)</title><rect x="48.7780%" y="293" width="0.0344%" height="15" fill="rgb(191,91,0)" fg:x="1417" fg:w="1"/><text x="48.9655%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="48.7780%" y="277" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1417" fg:w="1"/><text x="48.9655%" y="287.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.31%)</title><rect x="48.8124%" y="293" width="0.3098%" height="15" fill="rgb(226,126,0)" fg:x="1418" fg:w="9"/><text x="48.9999%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.31%)</title><rect x="48.8124%" y="277" width="0.3098%" height="15" fill="rgb(222,122,0)" fg:x="1418" fg:w="9"/><text x="48.9999%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.31%)</title><rect x="48.8124%" y="261" width="0.3098%" height="15" fill="rgb(249,149,0)" fg:x="1418" fg:w="9"/><text x="48.9999%" y="271.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.31%)</title><rect x="48.8124%" y="245" width="0.3098%" height="15" fill="rgb(228,128,0)" fg:x="1418" fg:w="9"/><text x="48.9999%" y="255.50"></text></g><g><title>malloc (9 samples, 0.31%)</title><rect x="48.8124%" y="229" width="0.3098%" height="15" fill="rgb(221,221,67)" fg:x="1418" fg:w="9"/><text x="48.9999%" y="239.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.03%)</title><rect x="49.2943%" y="229" width="0.0344%" height="15" fill="rgb(84,196,196)" fg:x="1432" fg:w="1"/><text x="49.4818%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="49.3287%" y="229" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1433" fg:w="1"/><text x="49.5162%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="49.3287%" y="213" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="1433" fg:w="1"/><text x="49.5162%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="49.3287%" y="197" width="0.0344%" height="15" fill="rgb(237,137,0)" fg:x="1433" fg:w="1"/><text x="49.5162%" y="207.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.03%)</title><rect x="49.3287%" y="181" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1433" fg:w="1"/><text x="49.5162%" y="191.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.03%)</title><rect x="49.3287%" y="165" width="0.0344%" height="15" fill="rgb(84,196,196)" fg:x="1433" fg:w="1"/><text x="49.5162%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="49.3632%" y="165" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1434" fg:w="1"/><text x="49.5507%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.07%)</title><rect x="49.3632%" y="229" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1434" fg:w="2"/><text x="49.5507%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="49.3632%" y="213" width="0.0688%" height="15" fill="rgb(248,148,0)" fg:x="1434" fg:w="2"/><text x="49.5507%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.07%)</title><rect x="49.3632%" y="197" width="0.0688%" height="15" fill="rgb(204,104,0)" fg:x="1434" fg:w="2"/><text x="49.5507%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="49.3632%" y="181" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="1434" fg:w="2"/><text x="49.5507%" y="191.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="49.3976%" y="165" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="1435" fg:w="1"/><text x="49.5851%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="49.5009%" y="117" width="0.0344%" height="15" fill="rgb(220,220,66)" fg:x="1438" fg:w="1"/><text x="49.6884%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (61 samples, 2.10%)</title><rect x="49.4320%" y="229" width="2.0998%" height="15" fill="rgb(233,133,0)" fg:x="1436" fg:w="61"/><text x="49.6195%" y="239.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (61 samples, 2.10%)</title><rect x="49.4320%" y="213" width="2.0998%" height="15" fill="rgb(248,148,0)" fg:x="1436" fg:w="61"/><text x="49.6195%" y="223.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 2.07%)</title><rect x="49.4664%" y="197" width="2.0654%" height="15" fill="rgb(245,145,0)" fg:x="1437" fg:w="60"/><text x="49.6539%" y="207.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 2.07%)</title><rect x="49.4664%" y="181" width="2.0654%" height="15" fill="rgb(247,147,0)" fg:x="1437" fg:w="60"/><text x="49.6539%" y="191.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (59 samples, 2.03%)</title><rect x="49.5009%" y="165" width="2.0310%" height="15" fill="rgb(222,122,0)" fg:x="1438" fg:w="59"/><text x="49.6884%" y="175.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (59 samples, 2.03%)</title><rect x="49.5009%" y="149" width="2.0310%" height="15" fill="rgb(249,149,0)" fg:x="1438" fg:w="59"/><text x="49.6884%" y="159.50">al..</text></g><g><title>alloc::alloc::alloc (59 samples, 2.03%)</title><rect x="49.5009%" y="133" width="2.0310%" height="15" fill="rgb(228,128,0)" fg:x="1438" fg:w="59"/><text x="49.6884%" y="143.50">al..</text></g><g><title>malloc (58 samples, 2.00%)</title><rect x="49.5353%" y="117" width="1.9966%" height="15" fill="rgb(221,221,67)" fg:x="1439" fg:w="58"/><text x="49.7228%" y="127.50">ma..</text></g><g><title>[libc.so.6] (56 samples, 1.93%)</title><rect x="49.6041%" y="101" width="1.9277%" height="15" fill="rgb(213,213,64)" fg:x="1441" fg:w="56"/><text x="49.7916%" y="111.50">[l..</text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="51.3597%" y="85" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="1492" fg:w="5"/><text x="51.5472%" y="95.50"></text></g><g><title>__default_morecore (4 samples, 0.14%)</title><rect x="51.3941%" y="69" width="0.1377%" height="15" fill="rgb(194,194,57)" fg:x="1493" fg:w="4"/><text x="51.5816%" y="79.50"></text></g><g><title>__sbrk (4 samples, 0.14%)</title><rect x="51.3941%" y="53" width="0.1377%" height="15" fill="rgb(193,193,56)" fg:x="1493" fg:w="4"/><text x="51.5816%" y="63.50"></text></g><g><title>brk (4 samples, 0.14%)</title><rect x="51.3941%" y="37" width="0.1377%" height="15" fill="rgb(175,175,50)" fg:x="1493" fg:w="4"/><text x="51.5816%" y="47.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="51.5318%" y="229" width="0.0344%" height="15" fill="rgb(192,92,0)" fg:x="1497" fg:w="1"/><text x="51.7193%" y="239.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.03%)</title><rect x="51.5318%" y="213" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1497" fg:w="1"/><text x="51.7193%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="51.5318%" y="197" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="1497" fg:w="1"/><text x="51.7193%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="51.5318%" y="181" width="0.0344%" height="15" fill="rgb(228,128,0)" fg:x="1497" fg:w="1"/><text x="51.7193%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="51.5318%" y="165" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="1497" fg:w="1"/><text x="51.7193%" y="175.50"></text></g><g><title>[libc.so.6] (15 samples, 0.52%)</title><rect x="51.5663%" y="197" width="0.5164%" height="15" fill="rgb(213,213,64)" fg:x="1498" fg:w="15"/><text x="51.7538%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (96 samples, 3.30%)</title><rect x="49.1222%" y="293" width="3.3046%" height="15" fill="rgb(252,152,0)" fg:x="1427" fg:w="96"/><text x="49.3097%" y="303.50">alloc..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (96 samples, 3.30%)</title><rect x="49.1222%" y="277" width="3.3046%" height="15" fill="rgb(197,97,0)" fg:x="1427" fg:w="96"/><text x="49.3097%" y="287.50">alloc..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (96 samples, 3.30%)</title><rect x="49.1222%" y="261" width="3.3046%" height="15" fill="rgb(226,126,0)" fg:x="1427" fg:w="96"/><text x="49.3097%" y="271.50">alloc..</text></g><g><title>alloc::str::join_generic_copy (96 samples, 3.30%)</title><rect x="49.1222%" y="245" width="3.3046%" height="15" fill="rgb(220,120,0)" fg:x="1427" fg:w="96"/><text x="49.3097%" y="255.50">alloc..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.86%)</title><rect x="51.5663%" y="229" width="0.8606%" height="15" fill="rgb(244,144,0)" fg:x="1498" fg:w="25"/><text x="51.7538%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.86%)</title><rect x="51.5663%" y="213" width="0.8606%" height="15" fill="rgb(195,95,0)" fg:x="1498" fg:w="25"/><text x="51.7538%" y="223.50"></text></g><g><title>memcpy (10 samples, 0.34%)</title><rect x="52.0826%" y="197" width="0.3442%" height="15" fill="rgb(207,207,61)" fg:x="1513" fg:w="10"/><text x="52.2701%" y="207.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="52.4613%" y="213" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1524" fg:w="1"/><text x="52.6488%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (117 samples, 4.03%)</title><rect x="48.6747%" y="453" width="4.0275%" height="15" fill="rgb(250,150,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="463.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (117 samples, 4.03%)</title><rect x="48.6747%" y="437" width="4.0275%" height="15" fill="rgb(228,128,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="447.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (117 samples, 4.03%)</title><rect x="48.6747%" y="421" width="4.0275%" height="15" fill="rgb(234,134,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="431.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (117 samples, 4.03%)</title><rect x="48.6747%" y="405" width="4.0275%" height="15" fill="rgb(194,94,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="415.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (117 samples, 4.03%)</title><rect x="48.6747%" y="389" width="4.0275%" height="15" fill="rgb(249,149,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="399.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (117 samples, 4.03%)</title><rect x="48.6747%" y="373" width="4.0275%" height="15" fill="rgb(241,141,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="383.50">core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 4.03%)</title><rect x="48.6747%" y="357" width="4.0275%" height="15" fill="rgb(209,109,0)" fg:x="1414" fg:w="117"/><text x="48.8622%" y="367.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (116 samples, 3.99%)</title><rect x="48.7091%" y="341" width="3.9931%" height="15" fill="rgb(193,93,0)" fg:x="1415" fg:w="116"/><text x="48.8966%" y="351.50">core::i..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (114 samples, 3.92%)</title><rect x="48.7780%" y="325" width="3.9243%" height="15" fill="rgb(221,121,0)" fg:x="1417" fg:w="114"/><text x="48.9655%" y="335.50">core::..</text></g><g><title>pillar::utils::format::fast_zip::{{closure}} (113 samples, 3.89%)</title><rect x="48.8124%" y="309" width="3.8898%" height="15" fill="rgb(52,167,167)" fg:x="1418" fg:w="113"/><text x="48.9999%" y="319.50">pillar..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (8 samples, 0.28%)</title><rect x="52.4269%" y="293" width="0.2754%" height="15" fill="rgb(238,138,0)" fg:x="1523" fg:w="8"/><text x="52.6144%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (8 samples, 0.28%)</title><rect x="52.4269%" y="277" width="0.2754%" height="15" fill="rgb(194,94,0)" fg:x="1523" fg:w="8"/><text x="52.6144%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.28%)</title><rect x="52.4269%" y="261" width="0.2754%" height="15" fill="rgb(226,126,0)" fg:x="1523" fg:w="8"/><text x="52.6144%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.28%)</title><rect x="52.4269%" y="245" width="0.2754%" height="15" fill="rgb(211,111,0)" fg:x="1523" fg:w="8"/><text x="52.6144%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.28%)</title><rect x="52.4269%" y="229" width="0.2754%" height="15" fill="rgb(194,94,0)" fg:x="1523" fg:w="8"/><text x="52.6144%" y="239.50"></text></g><g><title>cfree (6 samples, 0.21%)</title><rect x="52.4957%" y="213" width="0.2065%" height="15" fill="rgb(178,178,51)" fg:x="1525" fg:w="6"/><text x="52.6832%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="52.5645%" y="197" width="0.1377%" height="15" fill="rgb(213,213,64)" fg:x="1527" fg:w="4"/><text x="52.7520%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.90%)</title><rect x="52.7022%" y="437" width="0.8950%" height="15" fill="rgb(194,94,0)" fg:x="1531" fg:w="26"/><text x="52.8897%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (26 samples, 0.90%)</title><rect x="52.7022%" y="421" width="0.8950%" height="15" fill="rgb(207,107,0)" fg:x="1531" fg:w="26"/><text x="52.8897%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (26 samples, 0.90%)</title><rect x="52.7022%" y="405" width="0.8950%" height="15" fill="rgb(236,136,0)" fg:x="1531" fg:w="26"/><text x="52.8897%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (26 samples, 0.90%)</title><rect x="52.7022%" y="389" width="0.8950%" height="15" fill="rgb(199,99,0)" fg:x="1531" fg:w="26"/><text x="52.8897%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (26 samples, 0.90%)</title><rect x="52.7022%" y="373" width="0.8950%" height="15" fill="rgb(201,101,0)" fg:x="1531" fg:w="26"/><text x="52.8897%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.90%)</title><rect x="52.7022%" y="357" width="0.8950%" height="15" fill="rgb(226,126,0)" fg:x="1531" fg:w="26"/><text x="52.8897%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.86%)</title><rect x="52.7367%" y="341" width="0.8606%" height="15" fill="rgb(211,111,0)" fg:x="1532" fg:w="25"/><text x="52.9242%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.86%)</title><rect x="52.7367%" y="325" width="0.8606%" height="15" fill="rgb(194,94,0)" fg:x="1532" fg:w="25"/><text x="52.9242%" y="335.50"></text></g><g><title>cfree (25 samples, 0.86%)</title><rect x="52.7367%" y="309" width="0.8606%" height="15" fill="rgb(178,178,51)" fg:x="1532" fg:w="25"/><text x="52.9242%" y="319.50"></text></g><g><title>[libc.so.6] (19 samples, 0.65%)</title><rect x="52.9432%" y="293" width="0.6540%" height="15" fill="rgb(213,213,64)" fg:x="1538" fg:w="19"/><text x="53.1307%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="53.5628%" y="277" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1556" fg:w="1"/><text x="53.7503%" y="287.50"></text></g><g><title>alloc::fmt::format (1,222 samples, 42.07%)</title><rect x="11.5663%" y="581" width="42.0654%" height="15" fill="rgb(228,128,0)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="591.50">alloc::fmt::format</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1,222 samples, 42.07%)</title><rect x="11.5663%" y="565" width="42.0654%" height="15" fill="rgb(232,132,0)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="575.50">core::option::Option&lt;T&gt;::map_or_else</text></g><g><title>alloc::fmt::format::{{closure}} (1,222 samples, 42.07%)</title><rect x="11.5663%" y="549" width="42.0654%" height="15" fill="rgb(254,154,0)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="559.50">alloc::fmt::format::{{closure}}</text></g><g><title>alloc::fmt::format::format_inner (1,222 samples, 42.07%)</title><rect x="11.5663%" y="533" width="42.0654%" height="15" fill="rgb(251,151,0)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="543.50">alloc::fmt::format::format_inner</text></g><g><title>core::fmt::Write::write_fmt (1,222 samples, 42.07%)</title><rect x="11.5663%" y="517" width="42.0654%" height="15" fill="rgb(191,91,0)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="527.50">core::fmt::Write::write_fmt</text></g><g><title>core::fmt::write (1,222 samples, 42.07%)</title><rect x="11.5663%" y="501" width="42.0654%" height="15" fill="rgb(249,149,0)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="511.50">core::fmt::write</text></g><g><title>&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt (1,222 samples, 42.07%)</title><rect x="11.5663%" y="485" width="42.0654%" height="15" fill="rgb(50,165,165)" fg:x="336" fg:w="1222"/><text x="11.7538%" y="495.50">&lt;pillar::parser::Token as core::fmt::Display&gt;::fmt</text></g><g><title>pillar::utils::format::fast_zip (183 samples, 6.30%)</title><rect x="47.3322%" y="469" width="6.2995%" height="15" fill="rgb(73,186,186)" fg:x="1375" fg:w="183"/><text x="47.5197%" y="479.50">pillar::util..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (27 samples, 0.93%)</title><rect x="52.7022%" y="453" width="0.9294%" height="15" fill="rgb(231,131,0)" fg:x="1531" fg:w="27"/><text x="52.8897%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.03%)</title><rect x="53.5972%" y="437" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="1557" fg:w="1"/><text x="53.7847%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="53.5972%" y="421" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="1557" fg:w="1"/><text x="53.7847%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="53.5972%" y="405" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="1557" fg:w="1"/><text x="53.7847%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="53.5972%" y="389" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="1557" fg:w="1"/><text x="53.7847%" y="399.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="53.5972%" y="373" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1557" fg:w="1"/><text x="53.7847%" y="383.50"></text></g><g><title>__munmap (1 samples, 0.03%)</title><rect x="53.5972%" y="357" width="0.0344%" height="15" fill="rgb(218,218,65)" fg:x="1557" fg:w="1"/><text x="53.7847%" y="367.50"></text></g><g><title>[libc.so.6] (19 samples, 0.65%)</title><rect x="54.4923%" y="437" width="0.6540%" height="15" fill="rgb(213,213,64)" fg:x="1583" fg:w="19"/><text x="54.6798%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (45 samples, 1.55%)</title><rect x="53.6317%" y="581" width="1.5491%" height="15" fill="rgb(236,136,0)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (45 samples, 1.55%)</title><rect x="53.6317%" y="565" width="1.5491%" height="15" fill="rgb(199,99,0)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (45 samples, 1.55%)</title><rect x="53.6317%" y="549" width="1.5491%" height="15" fill="rgb(201,101,0)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="559.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 1.55%)</title><rect x="53.6317%" y="533" width="1.5491%" height="15" fill="rgb(226,126,0)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 1.55%)</title><rect x="53.6317%" y="517" width="1.5491%" height="15" fill="rgb(211,111,0)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="527.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (45 samples, 1.55%)</title><rect x="53.6317%" y="501" width="1.5491%" height="15" fill="rgb(194,94,0)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="511.50">a..</text></g><g><title>cfree (45 samples, 1.55%)</title><rect x="53.6317%" y="485" width="1.5491%" height="15" fill="rgb(178,178,51)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="495.50">c..</text></g><g><title>[libc.so.6] (45 samples, 1.55%)</title><rect x="53.6317%" y="469" width="1.5491%" height="15" fill="rgb(213,213,64)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="479.50">[..</text></g><g><title>[libc.so.6] (45 samples, 1.55%)</title><rect x="53.6317%" y="453" width="1.5491%" height="15" fill="rgb(213,213,64)" fg:x="1558" fg:w="45"/><text x="53.8192%" y="463.50">[..</text></g><g><title>__default_morecore (1 samples, 0.03%)</title><rect x="55.1463%" y="437" width="0.0344%" height="15" fill="rgb(194,194,57)" fg:x="1602" fg:w="1"/><text x="55.3338%" y="447.50"></text></g><g><title>__sbrk (1 samples, 0.03%)</title><rect x="55.1463%" y="421" width="0.0344%" height="15" fill="rgb(193,193,56)" fg:x="1602" fg:w="1"/><text x="55.3338%" y="431.50"></text></g><g><title>brk (1 samples, 0.03%)</title><rect x="55.1463%" y="405" width="0.0344%" height="15" fill="rgb(175,175,50)" fg:x="1602" fg:w="1"/><text x="55.3338%" y="415.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="55.3184%" y="405" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="1607" fg:w="1"/><text x="55.5059%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="55.3184%" y="389" width="0.0344%" height="15" fill="rgb(213,113,0)" fg:x="1607" fg:w="1"/><text x="55.5059%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 1.34%)</title><rect x="55.3184%" y="437" width="1.3425%" height="15" fill="rgb(211,111,0)" fg:x="1607" fg:w="39"/><text x="55.5059%" y="447.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (39 samples, 1.34%)</title><rect x="55.3184%" y="421" width="1.3425%" height="15" fill="rgb(194,94,0)" fg:x="1607" fg:w="39"/><text x="55.5059%" y="431.50">a..</text></g><g><title>cfree (38 samples, 1.31%)</title><rect x="55.3528%" y="405" width="1.3081%" height="15" fill="rgb(178,178,51)" fg:x="1608" fg:w="38"/><text x="55.5403%" y="415.50"></text></g><g><title>[libc.so.6] (25 samples, 0.86%)</title><rect x="55.8003%" y="389" width="0.8606%" height="15" fill="rgb(213,213,64)" fg:x="1621" fg:w="25"/><text x="55.9878%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (44 samples, 1.51%)</title><rect x="55.1807%" y="501" width="1.5146%" height="15" fill="rgb(236,136,0)" fg:x="1603" fg:w="44"/><text x="55.3682%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (44 samples, 1.51%)</title><rect x="55.1807%" y="485" width="1.5146%" height="15" fill="rgb(199,99,0)" fg:x="1603" fg:w="44"/><text x="55.3682%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (44 samples, 1.51%)</title><rect x="55.1807%" y="469" width="1.5146%" height="15" fill="rgb(201,101,0)" fg:x="1603" fg:w="44"/><text x="55.3682%" y="479.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 1.51%)</title><rect x="55.1807%" y="453" width="1.5146%" height="15" fill="rgb(226,126,0)" fg:x="1603" fg:w="44"/><text x="55.3682%" y="463.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="56.6609%" y="437" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="1646" fg:w="1"/><text x="56.8484%" y="447.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="56.9707%" y="341" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1655" fg:w="1"/><text x="57.1582%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.41%)</title><rect x="56.6954%" y="437" width="0.4131%" height="15" fill="rgb(236,136,0)" fg:x="1647" fg:w="12"/><text x="56.8829%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.41%)</title><rect x="56.6954%" y="421" width="0.4131%" height="15" fill="rgb(199,99,0)" fg:x="1647" fg:w="12"/><text x="56.8829%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.41%)</title><rect x="56.6954%" y="405" width="0.4131%" height="15" fill="rgb(201,101,0)" fg:x="1647" fg:w="12"/><text x="56.8829%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.41%)</title><rect x="56.6954%" y="389" width="0.4131%" height="15" fill="rgb(226,126,0)" fg:x="1647" fg:w="12"/><text x="56.8829%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.14%)</title><rect x="56.9707%" y="373" width="0.1377%" height="15" fill="rgb(211,111,0)" fg:x="1655" fg:w="4"/><text x="57.1582%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.14%)</title><rect x="56.9707%" y="357" width="0.1377%" height="15" fill="rgb(194,94,0)" fg:x="1655" fg:w="4"/><text x="57.1582%" y="367.50"></text></g><g><title>cfree (3 samples, 0.10%)</title><rect x="57.0052%" y="341" width="0.1033%" height="15" fill="rgb(178,178,51)" fg:x="1656" fg:w="3"/><text x="57.1927%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="57.0396%" y="325" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="1657" fg:w="2"/><text x="57.2271%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="57.3838%" y="277" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1667" fg:w="1"/><text x="57.5713%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.14%)</title><rect x="57.3838%" y="309" width="0.1377%" height="15" fill="rgb(211,111,0)" fg:x="1667" fg:w="4"/><text x="57.5713%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.14%)</title><rect x="57.3838%" y="293" width="0.1377%" height="15" fill="rgb(194,94,0)" fg:x="1667" fg:w="4"/><text x="57.5713%" y="303.50"></text></g><g><title>cfree (3 samples, 0.10%)</title><rect x="57.4182%" y="277" width="0.1033%" height="15" fill="rgb(178,178,51)" fg:x="1668" fg:w="3"/><text x="57.6057%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="57.4527%" y="261" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="1669" fg:w="2"/><text x="57.6402%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.48%)</title><rect x="57.1084%" y="421" width="0.4819%" height="15" fill="rgb(194,94,0)" fg:x="1659" fg:w="14"/><text x="57.2959%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pillar::parser::Token]&gt; (11 samples, 0.38%)</title><rect x="57.2117%" y="405" width="0.3787%" height="15" fill="rgb(210,110,0)" fg:x="1662" fg:w="11"/><text x="57.3992%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;pillar::parser::Token&gt; (11 samples, 0.38%)</title><rect x="57.2117%" y="389" width="0.3787%" height="15" fill="rgb(241,141,0)" fg:x="1662" fg:w="11"/><text x="57.3992%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (11 samples, 0.38%)</title><rect x="57.2117%" y="373" width="0.3787%" height="15" fill="rgb(236,136,0)" fg:x="1662" fg:w="11"/><text x="57.3992%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.38%)</title><rect x="57.2117%" y="357" width="0.3787%" height="15" fill="rgb(199,99,0)" fg:x="1662" fg:w="11"/><text x="57.3992%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.38%)</title><rect x="57.2117%" y="341" width="0.3787%" height="15" fill="rgb(201,101,0)" fg:x="1662" fg:w="11"/><text x="57.3992%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.38%)</title><rect x="57.2117%" y="325" width="0.3787%" height="15" fill="rgb(226,126,0)" fg:x="1662" fg:w="11"/><text x="57.3992%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.07%)</title><rect x="57.5215%" y="309" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="1671" fg:w="2"/><text x="57.7090%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 1.27%)</title><rect x="56.6954%" y="485" width="1.2737%" height="15" fill="rgb(194,94,0)" fg:x="1647" fg:w="37"/><text x="56.8829%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pillar::parser::Token]&gt; (37 samples, 1.27%)</title><rect x="56.6954%" y="469" width="1.2737%" height="15" fill="rgb(210,110,0)" fg:x="1647" fg:w="37"/><text x="56.8829%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;pillar::parser::Token&gt; (37 samples, 1.27%)</title><rect x="56.6954%" y="453" width="1.2737%" height="15" fill="rgb(241,141,0)" fg:x="1647" fg:w="37"/><text x="56.8829%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pillar::parser::Token&gt;&gt; (25 samples, 0.86%)</title><rect x="57.1084%" y="437" width="0.8606%" height="15" fill="rgb(235,135,0)" fg:x="1659" fg:w="25"/><text x="57.2959%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pillar::parser::Token&gt;&gt; (11 samples, 0.38%)</title><rect x="57.5904%" y="421" width="0.3787%" height="15" fill="rgb(225,125,0)" fg:x="1673" fg:w="11"/><text x="57.7779%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.38%)</title><rect x="57.5904%" y="405" width="0.3787%" height="15" fill="rgb(226,126,0)" fg:x="1673" fg:w="11"/><text x="57.7779%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.34%)</title><rect x="57.6248%" y="389" width="0.3442%" height="15" fill="rgb(211,111,0)" fg:x="1674" fg:w="10"/><text x="57.8123%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.34%)</title><rect x="57.6248%" y="373" width="0.3442%" height="15" fill="rgb(194,94,0)" fg:x="1674" fg:w="10"/><text x="57.8123%" y="383.50"></text></g><g><title>cfree (10 samples, 0.34%)</title><rect x="57.6248%" y="357" width="0.3442%" height="15" fill="rgb(178,178,51)" fg:x="1674" fg:w="10"/><text x="57.8123%" y="367.50"></text></g><g><title>[libc.so.6] (10 samples, 0.34%)</title><rect x="57.6248%" y="341" width="0.3442%" height="15" fill="rgb(213,213,64)" fg:x="1674" fg:w="10"/><text x="57.8123%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 3.37%)</title><rect x="55.1807%" y="549" width="3.3735%" height="15" fill="rgb(194,94,0)" fg:x="1603" fg:w="98"/><text x="55.3682%" y="559.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[pillar::parser::Token]&gt; (98 samples, 3.37%)</title><rect x="55.1807%" y="533" width="3.3735%" height="15" fill="rgb(210,110,0)" fg:x="1603" fg:w="98"/><text x="55.3682%" y="543.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;pillar::parser::Token&gt; (98 samples, 3.37%)</title><rect x="55.1807%" y="517" width="3.3735%" height="15" fill="rgb(241,141,0)" fg:x="1603" fg:w="98"/><text x="55.3682%" y="527.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pillar::parser::Token&gt;&gt; (54 samples, 1.86%)</title><rect x="56.6954%" y="501" width="1.8589%" height="15" fill="rgb(235,135,0)" fg:x="1647" fg:w="54"/><text x="56.8829%" y="511.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pillar::parser::Token&gt;&gt; (17 samples, 0.59%)</title><rect x="57.9690%" y="485" width="0.5852%" height="15" fill="rgb(225,125,0)" fg:x="1684" fg:w="17"/><text x="58.1565%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.59%)</title><rect x="57.9690%" y="469" width="0.5852%" height="15" fill="rgb(226,126,0)" fg:x="1684" fg:w="17"/><text x="58.1565%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.59%)</title><rect x="57.9690%" y="453" width="0.5852%" height="15" fill="rgb(211,111,0)" fg:x="1684" fg:w="17"/><text x="58.1565%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.59%)</title><rect x="57.9690%" y="437" width="0.5852%" height="15" fill="rgb(194,94,0)" fg:x="1684" fg:w="17"/><text x="58.1565%" y="447.50"></text></g><g><title>cfree (15 samples, 0.52%)</title><rect x="58.0379%" y="421" width="0.5164%" height="15" fill="rgb(178,178,51)" fg:x="1686" fg:w="15"/><text x="58.2254%" y="431.50"></text></g><g><title>[libc.so.6] (14 samples, 0.48%)</title><rect x="58.0723%" y="405" width="0.4819%" height="15" fill="rgb(213,213,64)" fg:x="1687" fg:w="14"/><text x="58.2598%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="58.5198%" y="389" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1700" fg:w="1"/><text x="58.7073%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;pillar::parser::Token&gt; (99 samples, 3.41%)</title><rect x="55.1807%" y="581" width="3.4079%" height="15" fill="rgb(241,141,0)" fg:x="1603" fg:w="99"/><text x="55.3682%" y="591.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pillar::parser::Token&gt;&gt; (99 samples, 3.41%)</title><rect x="55.1807%" y="565" width="3.4079%" height="15" fill="rgb(235,135,0)" fg:x="1603" fg:w="99"/><text x="55.3682%" y="575.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pillar::parser::Token&gt;&gt; (1 samples, 0.03%)</title><rect x="58.5542%" y="549" width="0.0344%" height="15" fill="rgb(225,125,0)" fg:x="1701" fg:w="1"/><text x="58.7417%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="58.5542%" y="533" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="1701" fg:w="1"/><text x="58.7417%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="58.5542%" y="517" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="1701" fg:w="1"/><text x="58.7417%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="58.5542%" y="501" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="1701" fg:w="1"/><text x="58.7417%" y="511.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="58.5542%" y="485" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="1701" fg:w="1"/><text x="58.7417%" y="495.50"></text></g><g><title>__munmap (1 samples, 0.03%)</title><rect x="58.5542%" y="469" width="0.0344%" height="15" fill="rgb(218,218,65)" fg:x="1701" fg:w="1"/><text x="58.7417%" y="479.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as alloc::string::ToString&gt;::to_string (1 samples, 0.03%)</title><rect x="64.1652%" y="549" width="0.0344%" height="15" fill="rgb(242,142,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.03%)</title><rect x="64.1652%" y="533" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.03%)</title><rect x="64.1652%" y="517" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="64.1652%" y="501" width="0.0344%" height="15" fill="rgb(197,97,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="64.1652%" y="485" width="0.0344%" height="15" fill="rgb(224,124,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="64.1652%" y="469" width="0.0344%" height="15" fill="rgb(238,138,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="64.1652%" y="453" width="0.0344%" height="15" fill="rgb(61,175,175)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="64.1652%" y="437" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="64.1652%" y="421" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="64.1652%" y="405" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="1864" fg:w="1"/><text x="64.3527%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.86%)</title><rect x="64.1997%" y="549" width="0.8606%" height="15" fill="rgb(204,104,0)" fg:x="1865" fg:w="25"/><text x="64.3872%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.86%)</title><rect x="64.1997%" y="533" width="0.8606%" height="15" fill="rgb(249,149,0)" fg:x="1865" fg:w="25"/><text x="64.3872%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="65.0258%" y="517" width="0.0344%" height="15" fill="rgb(230,130,0)" fg:x="1889" fg:w="1"/><text x="65.2133%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="65.0258%" y="501" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="1889" fg:w="1"/><text x="65.2133%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="65.0258%" y="485" width="0.0344%" height="15" fill="rgb(245,145,0)" fg:x="1889" fg:w="1"/><text x="65.2133%" y="495.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (3 samples, 0.10%)</title><rect x="65.0602%" y="549" width="0.1033%" height="15" fill="rgb(242,142,0)" fg:x="1890" fg:w="3"/><text x="65.2477%" y="559.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="65.0602%" y="533" width="0.1033%" height="15" fill="rgb(221,121,0)" fg:x="1890" fg:w="3"/><text x="65.2477%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.07%)</title><rect x="65.1635%" y="533" width="0.0688%" height="15" fill="rgb(219,119,0)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="65.1635%" y="517" width="0.0688%" height="15" fill="rgb(205,105,0)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.07%)</title><rect x="65.1635%" y="501" width="0.0688%" height="15" fill="rgb(227,127,0)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.07%)</title><rect x="65.1635%" y="485" width="0.0688%" height="15" fill="rgb(234,134,0)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.07%)</title><rect x="65.1635%" y="469" width="0.0688%" height="15" fill="rgb(232,132,0)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="479.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.07%)</title><rect x="65.1635%" y="453" width="0.0688%" height="15" fill="rgb(203,103,0)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="463.50"></text></g><g><title>realloc (2 samples, 0.07%)</title><rect x="65.1635%" y="437" width="0.0688%" height="15" fill="rgb(189,189,55)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="447.50"></text></g><g><title>mremap (2 samples, 0.07%)</title><rect x="65.1635%" y="421" width="0.0688%" height="15" fill="rgb(182,182,52)" fg:x="1893" fg:w="2"/><text x="65.3510%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.76%)</title><rect x="65.1635%" y="549" width="0.7573%" height="15" fill="rgb(254,154,0)" fg:x="1893" fg:w="22"/><text x="65.3510%" y="559.50"></text></g><g><title>core::ptr::write (20 samples, 0.69%)</title><rect x="65.2324%" y="533" width="0.6885%" height="15" fill="rgb(230,130,0)" fg:x="1895" fg:w="20"/><text x="65.4199%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.07%)</title><rect x="65.9208%" y="549" width="0.0688%" height="15" fill="rgb(241,141,0)" fg:x="1915" fg:w="2"/><text x="66.1083%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (2 samples, 0.07%)</title><rect x="65.9208%" y="533" width="0.0688%" height="15" fill="rgb(193,93,0)" fg:x="1915" fg:w="2"/><text x="66.1083%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (2 samples, 0.07%)</title><rect x="65.9208%" y="517" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="1915" fg:w="2"/><text x="66.1083%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.03%)</title><rect x="65.9552%" y="501" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="1916" fg:w="1"/><text x="66.1427%" y="511.50"></text></g><g><title>pillar::parser::Parents::add (2 samples, 0.07%)</title><rect x="65.9897%" y="549" width="0.0688%" height="15" fill="rgb(52,167,167)" fg:x="1917" fg:w="2"/><text x="66.1772%" y="559.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.07%)</title><rect x="71.0843%" y="517" width="0.0688%" height="15" fill="rgb(220,120,0)" fg:x="2065" fg:w="2"/><text x="71.2718%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (34 samples, 1.17%)</title><rect x="71.1532%" y="421" width="1.1704%" height="15" fill="rgb(248,148,0)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (34 samples, 1.17%)</title><rect x="71.1532%" y="405" width="1.1704%" height="15" fill="rgb(245,145,0)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (34 samples, 1.17%)</title><rect x="71.1532%" y="389" width="1.1704%" height="15" fill="rgb(247,147,0)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 1.17%)</title><rect x="71.1532%" y="373" width="1.1704%" height="15" fill="rgb(222,122,0)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 1.17%)</title><rect x="71.1532%" y="357" width="1.1704%" height="15" fill="rgb(249,149,0)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="367.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 1.17%)</title><rect x="71.1532%" y="341" width="1.1704%" height="15" fill="rgb(228,128,0)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="351.50"></text></g><g><title>malloc (34 samples, 1.17%)</title><rect x="71.1532%" y="325" width="1.1704%" height="15" fill="rgb(221,221,67)" fg:x="2067" fg:w="34"/><text x="71.3407%" y="335.50"></text></g><g><title>[libc.so.6] (33 samples, 1.14%)</title><rect x="71.1876%" y="309" width="1.1360%" height="15" fill="rgb(213,213,64)" fg:x="2068" fg:w="33"/><text x="71.3751%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="72.2892%" y="293" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="2100" fg:w="1"/><text x="72.4767%" y="303.50"></text></g><g><title>[libc.so.6] (8 samples, 0.28%)</title><rect x="72.3236%" y="389" width="0.2754%" height="15" fill="rgb(213,213,64)" fg:x="2101" fg:w="8"/><text x="72.5111%" y="399.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as alloc::string::ToString&gt;::to_string (45 samples, 1.55%)</title><rect x="71.0843%" y="533" width="1.5491%" height="15" fill="rgb(242,142,0)" fg:x="2065" fg:w="45"/><text x="71.2718%" y="543.50">&lt;..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (43 samples, 1.48%)</title><rect x="71.1532%" y="517" width="1.4802%" height="15" fill="rgb(209,109,0)" fg:x="2067" fg:w="43"/><text x="71.3407%" y="527.50">a..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (43 samples, 1.48%)</title><rect x="71.1532%" y="501" width="1.4802%" height="15" fill="rgb(211,111,0)" fg:x="2067" fg:w="43"/><text x="71.3407%" y="511.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (43 samples, 1.48%)</title><rect x="71.1532%" y="485" width="1.4802%" height="15" fill="rgb(197,97,0)" fg:x="2067" fg:w="43"/><text x="71.3407%" y="495.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 1.48%)</title><rect x="71.1532%" y="469" width="1.4802%" height="15" fill="rgb(224,124,0)" fg:x="2067" fg:w="43"/><text x="71.3407%" y="479.50">a..</text></g><g><title>alloc::slice::hack::to_vec (43 samples, 1.48%)</title><rect x="71.1532%" y="453" width="1.4802%" height="15" fill="rgb(238,138,0)" fg:x="2067" fg:w="43"/><text x="71.3407%" y="463.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 1.48%)</title><rect x="71.1532%" y="437" width="1.4802%" height="15" fill="rgb(61,175,175)" fg:x="2067" fg:w="43"/><text x="71.3407%" y="447.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.31%)</title><rect x="72.3236%" y="421" width="0.3098%" height="15" fill="rgb(220,120,0)" fg:x="2101" fg:w="9"/><text x="72.5111%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.31%)</title><rect x="72.3236%" y="405" width="0.3098%" height="15" fill="rgb(195,95,0)" fg:x="2101" fg:w="9"/><text x="72.5111%" y="415.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="72.5990%" y="389" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="2109" fg:w="1"/><text x="72.7865%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 1.41%)</title><rect x="72.6334%" y="533" width="1.4114%" height="15" fill="rgb(204,104,0)" fg:x="2110" fg:w="41"/><text x="72.8209%" y="543.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 1.41%)</title><rect x="72.6334%" y="517" width="1.4114%" height="15" fill="rgb(249,149,0)" fg:x="2110" fg:w="41"/><text x="72.8209%" y="527.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.07%)</title><rect x="73.9759%" y="501" width="0.0688%" height="15" fill="rgb(230,130,0)" fg:x="2149" fg:w="2"/><text x="74.1634%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.07%)</title><rect x="73.9759%" y="485" width="0.0688%" height="15" fill="rgb(211,111,0)" fg:x="2149" fg:w="2"/><text x="74.1634%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.07%)</title><rect x="73.9759%" y="469" width="0.0688%" height="15" fill="rgb(245,145,0)" fg:x="2149" fg:w="2"/><text x="74.1634%" y="479.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (87 samples, 2.99%)</title><rect x="74.0448%" y="533" width="2.9948%" height="15" fill="rgb(242,142,0)" fg:x="2151" fg:w="87"/><text x="74.2323%" y="543.50">allo..</text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 2.79%)</title><rect x="74.2513%" y="517" width="2.7883%" height="15" fill="rgb(221,121,0)" fg:x="2157" fg:w="81"/><text x="74.4388%" y="527.50">&lt;cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (4 samples, 0.14%)</title><rect x="76.9019%" y="501" width="0.1377%" height="15" fill="rgb(190,90,0)" fg:x="2234" fg:w="4"/><text x="77.0894%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.14%)</title><rect x="76.9019%" y="485" width="0.1377%" height="15" fill="rgb(219,119,0)" fg:x="2234" fg:w="4"/><text x="77.0894%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.14%)</title><rect x="76.9019%" y="469" width="0.1377%" height="15" fill="rgb(242,142,0)" fg:x="2234" fg:w="4"/><text x="77.0894%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.07%)</title><rect x="78.5198%" y="485" width="0.0688%" height="15" fill="rgb(227,127,0)" fg:x="2281" fg:w="2"/><text x="78.7073%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.14%)</title><rect x="78.5886%" y="485" width="0.1377%" height="15" fill="rgb(242,142,0)" fg:x="2283" fg:w="4"/><text x="78.7761%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="78.6919%" y="469" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="2286" fg:w="1"/><text x="78.8794%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="78.6919%" y="453" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="2286" fg:w="1"/><text x="78.8794%" y="463.50"></text></g><g><title>__rdl_realloc (2 samples, 0.07%)</title><rect x="78.8985%" y="421" width="0.0688%" height="15" fill="rgb(193,193,56)" fg:x="2292" fg:w="2"/><text x="79.0860%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.07%)</title><rect x="78.8985%" y="405" width="0.0688%" height="15" fill="rgb(199,99,0)" fg:x="2292" fg:w="2"/><text x="79.0860%" y="415.50"></text></g><g><title>__rust_realloc (1 samples, 0.03%)</title><rect x="78.9673%" y="421" width="0.0344%" height="15" fill="rgb(194,194,56)" fg:x="2294" fg:w="1"/><text x="79.1548%" y="431.50"></text></g><g><title>[libc.so.6] (90 samples, 3.10%)</title><rect x="80.0000%" y="389" width="3.0981%" height="15" fill="rgb(213,213,64)" fg:x="2324" fg:w="90"/><text x="80.1875%" y="399.50">[libc..</text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="83.0293%" y="373" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="2412" fg:w="2"/><text x="83.2168%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (123 samples, 4.23%)</title><rect x="78.8985%" y="469" width="4.2341%" height="15" fill="rgb(234,134,0)" fg:x="2292" fg:w="123"/><text x="79.0860%" y="479.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::grow_impl (123 samples, 4.23%)</title><rect x="78.8985%" y="453" width="4.2341%" height="15" fill="rgb(232,132,0)" fg:x="2292" fg:w="123"/><text x="79.0860%" y="463.50">alloc::..</text></g><g><title>alloc::alloc::realloc (123 samples, 4.23%)</title><rect x="78.8985%" y="437" width="4.2341%" height="15" fill="rgb(203,103,0)" fg:x="2292" fg:w="123"/><text x="79.0860%" y="447.50">alloc::..</text></g><g><title>realloc (120 samples, 4.13%)</title><rect x="79.0017%" y="421" width="4.1308%" height="15" fill="rgb(189,189,55)" fg:x="2295" fg:w="120"/><text x="79.1892%" y="431.50">realloc</text></g><g><title>[libc.so.6] (105 samples, 3.61%)</title><rect x="79.5181%" y="405" width="3.6145%" height="15" fill="rgb(213,213,64)" fg:x="2310" fg:w="105"/><text x="79.7056%" y="415.50">[libc...</text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="83.0981%" y="389" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="2414" fg:w="1"/><text x="83.2856%" y="399.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="83.1325%" y="469" width="0.0688%" height="15" fill="rgb(223,223,67)" fg:x="2415" fg:w="2"/><text x="83.3200%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="83.1325%" y="453" width="0.0688%" height="15" fill="rgb(229,129,0)" fg:x="2415" fg:w="2"/><text x="83.3200%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="83.2014%" y="469" width="0.0344%" height="15" fill="rgb(220,220,66)" fg:x="2417" fg:w="1"/><text x="83.3889%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.17%)</title><rect x="83.2358%" y="469" width="0.1721%" height="15" fill="rgb(232,132,0)" fg:x="2418" fg:w="5"/><text x="83.4233%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (220 samples, 7.57%)</title><rect x="78.7263%" y="485" width="7.5731%" height="15" fill="rgb(227,127,0)" fg:x="2287" fg:w="220"/><text x="78.9138%" y="495.50">alloc::raw_vec:..</text></g><g><title>malloc (84 samples, 2.89%)</title><rect x="83.4079%" y="469" width="2.8916%" height="15" fill="rgb(221,221,67)" fg:x="2423" fg:w="84"/><text x="83.5954%" y="479.50">mall..</text></g><g><title>[libc.so.6] (77 samples, 2.65%)</title><rect x="83.6489%" y="453" width="2.6506%" height="15" fill="rgb(213,213,64)" fg:x="2430" fg:w="77"/><text x="83.8364%" y="463.50">[li..</text></g><g><title>[libc.so.6] (10 samples, 0.34%)</title><rect x="85.9552%" y="437" width="0.3442%" height="15" fill="rgb(213,213,64)" fg:x="2497" fg:w="10"/><text x="86.1427%" y="447.50"></text></g><g><title>__default_morecore (4 samples, 0.14%)</title><rect x="86.1618%" y="421" width="0.1377%" height="15" fill="rgb(194,194,57)" fg:x="2503" fg:w="4"/><text x="86.3493%" y="431.50"></text></g><g><title>__sbrk (4 samples, 0.14%)</title><rect x="86.1618%" y="405" width="0.1377%" height="15" fill="rgb(193,193,56)" fg:x="2503" fg:w="4"/><text x="86.3493%" y="415.50"></text></g><g><title>brk (4 samples, 0.14%)</title><rect x="86.1618%" y="389" width="0.1377%" height="15" fill="rgb(175,175,50)" fg:x="2503" fg:w="4"/><text x="86.3493%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.07%)</title><rect x="86.2995%" y="485" width="0.0688%" height="15" fill="rgb(235,135,0)" fg:x="2507" fg:w="2"/><text x="86.4870%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.07%)</title><rect x="86.2995%" y="469" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="2507" fg:w="2"/><text x="86.4870%" y="479.50"></text></g><g><title>core::cmp::max (4 samples, 0.14%)</title><rect x="86.3683%" y="485" width="0.1377%" height="15" fill="rgb(202,102,0)" fg:x="2509" fg:w="4"/><text x="86.5558%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.14%)</title><rect x="86.3683%" y="469" width="0.1377%" height="15" fill="rgb(219,119,0)" fg:x="2509" fg:w="4"/><text x="86.5558%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (235 samples, 8.09%)</title><rect x="78.4854%" y="501" width="8.0895%" height="15" fill="rgb(205,105,0)" fg:x="2280" fg:w="235"/><text x="78.6729%" y="511.50">alloc::raw_vec::..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.07%)</title><rect x="86.5060%" y="485" width="0.0688%" height="15" fill="rgb(240,140,0)" fg:x="2513" fg:w="2"/><text x="86.6935%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.07%)</title><rect x="86.5060%" y="469" width="0.0688%" height="15" fill="rgb(201,101,0)" fg:x="2513" fg:w="2"/><text x="86.6935%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (237 samples, 8.16%)</title><rect x="78.4854%" y="517" width="8.1583%" height="15" fill="rgb(219,119,0)" fg:x="2280" fg:w="237"/><text x="78.6729%" y="527.50">alloc::raw_vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.07%)</title><rect x="86.5749%" y="501" width="0.0688%" height="15" fill="rgb(219,119,0)" fg:x="2515" fg:w="2"/><text x="86.7624%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.17%)</title><rect x="86.6437%" y="517" width="0.1721%" height="15" fill="rgb(225,125,0)" fg:x="2517" fg:w="5"/><text x="86.8312%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.17%)</title><rect x="86.6437%" y="501" width="0.1721%" height="15" fill="rgb(251,151,0)" fg:x="2517" fg:w="5"/><text x="86.8312%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (355 samples, 12.22%)</title><rect x="77.0396%" y="533" width="12.2203%" height="15" fill="rgb(254,154,0)" fg:x="2238" fg:w="355"/><text x="77.2271%" y="543.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (71 samples, 2.44%)</title><rect x="86.8158%" y="517" width="2.4441%" height="15" fill="rgb(230,130,0)" fg:x="2522" fg:w="71"/><text x="87.0033%" y="527.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.03%)</title><rect x="89.2599%" y="533" width="0.0344%" height="15" fill="rgb(236,136,0)" fg:x="2593" fg:w="1"/><text x="89.4474%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="89.2599%" y="517" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="2593" fg:w="1"/><text x="89.4474%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="89.2599%" y="501" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="2593" fg:w="1"/><text x="89.4474%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="89.2599%" y="485" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="2593" fg:w="1"/><text x="89.4474%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.52%)</title><rect x="89.2943%" y="533" width="0.5164%" height="15" fill="rgb(199,99,0)" fg:x="2594" fg:w="15"/><text x="89.4818%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.52%)</title><rect x="89.2943%" y="517" width="0.5164%" height="15" fill="rgb(201,101,0)" fg:x="2594" fg:w="15"/><text x="89.4818%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.52%)</title><rect x="89.2943%" y="501" width="0.5164%" height="15" fill="rgb(226,126,0)" fg:x="2594" fg:w="15"/><text x="89.4818%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.52%)</title><rect x="89.2943%" y="485" width="0.5164%" height="15" fill="rgb(211,111,0)" fg:x="2594" fg:w="15"/><text x="89.4818%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.52%)</title><rect x="89.2943%" y="469" width="0.5164%" height="15" fill="rgb(194,94,0)" fg:x="2594" fg:w="15"/><text x="89.4818%" y="479.50"></text></g><g><title>cfree (15 samples, 0.52%)</title><rect x="89.2943%" y="453" width="0.5164%" height="15" fill="rgb(178,178,51)" fg:x="2594" fg:w="15"/><text x="89.4818%" y="463.50"></text></g><g><title>[libc.so.6] (11 samples, 0.38%)</title><rect x="89.4320%" y="437" width="0.3787%" height="15" fill="rgb(213,213,64)" fg:x="2598" fg:w="11"/><text x="89.6195%" y="447.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="89.6386%" y="421" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="2604" fg:w="5"/><text x="89.8261%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.07%)</title><rect x="89.8107%" y="533" width="0.0688%" height="15" fill="rgb(241,141,0)" fg:x="2609" fg:w="2"/><text x="89.9982%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (2 samples, 0.07%)</title><rect x="89.8107%" y="517" width="0.0688%" height="15" fill="rgb(193,93,0)" fg:x="2609" fg:w="2"/><text x="89.9982%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (2 samples, 0.07%)</title><rect x="89.8107%" y="501" width="0.0688%" height="15" fill="rgb(249,149,0)" fg:x="2609" fg:w="2"/><text x="89.9982%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.03%)</title><rect x="89.8451%" y="485" width="0.0344%" height="15" fill="rgb(222,122,0)" fg:x="2610" fg:w="1"/><text x="90.0326%" y="495.50"></text></g><g><title>pillar::parser::Parents::add (1 samples, 0.03%)</title><rect x="89.8795%" y="533" width="0.0344%" height="15" fill="rgb(52,167,167)" fg:x="2611" fg:w="1"/><text x="90.0670%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="91.2909%" y="309" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="2652" fg:w="1"/><text x="91.4784%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="91.2909%" y="293" width="0.0344%" height="15" fill="rgb(229,129,0)" fg:x="2652" fg:w="1"/><text x="91.4784%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.93%)</title><rect x="91.2909%" y="357" width="0.9294%" height="15" fill="rgb(222,122,0)" fg:x="2652" fg:w="27"/><text x="91.4784%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.93%)</title><rect x="91.2909%" y="341" width="0.9294%" height="15" fill="rgb(249,149,0)" fg:x="2652" fg:w="27"/><text x="91.4784%" y="351.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.93%)</title><rect x="91.2909%" y="325" width="0.9294%" height="15" fill="rgb(228,128,0)" fg:x="2652" fg:w="27"/><text x="91.4784%" y="335.50"></text></g><g><title>malloc (26 samples, 0.90%)</title><rect x="91.3253%" y="309" width="0.8950%" height="15" fill="rgb(221,221,67)" fg:x="2653" fg:w="26"/><text x="91.5128%" y="319.50"></text></g><g><title>[libc.so.6] (18 samples, 0.62%)</title><rect x="91.6007%" y="293" width="0.6196%" height="15" fill="rgb(213,213,64)" fg:x="2661" fg:w="18"/><text x="91.7882%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="92.1515%" y="277" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="2677" fg:w="2"/><text x="92.3390%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 1.00%)</title><rect x="91.2565%" y="405" width="0.9983%" height="15" fill="rgb(248,148,0)" fg:x="2651" fg:w="29"/><text x="91.4440%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 1.00%)</title><rect x="91.2565%" y="389" width="0.9983%" height="15" fill="rgb(245,145,0)" fg:x="2651" fg:w="29"/><text x="91.4440%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 1.00%)</title><rect x="91.2565%" y="373" width="0.9983%" height="15" fill="rgb(247,147,0)" fg:x="2651" fg:w="29"/><text x="91.4440%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="92.2203%" y="357" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="2679" fg:w="1"/><text x="92.4078%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="92.2203%" y="341" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="2679" fg:w="1"/><text x="92.4078%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="92.2547%" y="373" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="2680" fg:w="2"/><text x="92.4422%" y="383.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as alloc::string::ToString&gt;::to_string (32 samples, 1.10%)</title><rect x="91.2565%" y="517" width="1.1015%" height="15" fill="rgb(242,142,0)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (32 samples, 1.10%)</title><rect x="91.2565%" y="501" width="1.1015%" height="15" fill="rgb(209,109,0)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (32 samples, 1.10%)</title><rect x="91.2565%" y="485" width="1.1015%" height="15" fill="rgb(211,111,0)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32 samples, 1.10%)</title><rect x="91.2565%" y="469" width="1.1015%" height="15" fill="rgb(197,97,0)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 1.10%)</title><rect x="91.2565%" y="453" width="1.1015%" height="15" fill="rgb(224,124,0)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 1.10%)</title><rect x="91.2565%" y="437" width="1.1015%" height="15" fill="rgb(238,138,0)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 1.10%)</title><rect x="91.2565%" y="421" width="1.1015%" height="15" fill="rgb(61,175,175)" fg:x="2651" fg:w="32"/><text x="91.4440%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.10%)</title><rect x="92.2547%" y="405" width="0.1033%" height="15" fill="rgb(220,120,0)" fg:x="2680" fg:w="3"/><text x="92.4422%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.10%)</title><rect x="92.2547%" y="389" width="0.1033%" height="15" fill="rgb(195,95,0)" fg:x="2680" fg:w="3"/><text x="92.4422%" y="399.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="92.3236%" y="373" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="2682" fg:w="1"/><text x="92.5111%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.28%)</title><rect x="92.3580%" y="517" width="0.2754%" height="15" fill="rgb(204,104,0)" fg:x="2683" fg:w="8"/><text x="92.5455%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.28%)</title><rect x="92.3580%" y="501" width="0.2754%" height="15" fill="rgb(249,149,0)" fg:x="2683" fg:w="8"/><text x="92.5455%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.14%)</title><rect x="92.4957%" y="485" width="0.1377%" height="15" fill="rgb(230,130,0)" fg:x="2687" fg:w="4"/><text x="92.6832%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.14%)</title><rect x="92.4957%" y="469" width="0.1377%" height="15" fill="rgb(211,111,0)" fg:x="2687" fg:w="4"/><text x="92.6832%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.14%)</title><rect x="92.4957%" y="453" width="0.1377%" height="15" fill="rgb(245,145,0)" fg:x="2687" fg:w="4"/><text x="92.6832%" y="463.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (35 samples, 1.20%)</title><rect x="92.6334%" y="517" width="1.2048%" height="15" fill="rgb(242,142,0)" fg:x="2691" fg:w="35"/><text x="92.8209%" y="527.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.86%)</title><rect x="92.9776%" y="501" width="0.8606%" height="15" fill="rgb(221,121,0)" fg:x="2701" fg:w="25"/><text x="93.1651%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (3 samples, 0.10%)</title><rect x="93.7349%" y="485" width="0.1033%" height="15" fill="rgb(190,90,0)" fg:x="2723" fg:w="3"/><text x="93.9224%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.07%)</title><rect x="93.7694%" y="469" width="0.0688%" height="15" fill="rgb(219,119,0)" fg:x="2724" fg:w="2"/><text x="93.9569%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.07%)</title><rect x="93.7694%" y="453" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="2724" fg:w="2"/><text x="93.9569%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.07%)</title><rect x="94.1136%" y="469" width="0.0688%" height="15" fill="rgb(242,142,0)" fg:x="2734" fg:w="2"/><text x="94.3011%" y="479.50"></text></g><g><title>__rdl_realloc (2 samples, 0.07%)</title><rect x="94.1824%" y="405" width="0.0688%" height="15" fill="rgb(193,193,56)" fg:x="2736" fg:w="2"/><text x="94.3699%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.07%)</title><rect x="94.1824%" y="389" width="0.0688%" height="15" fill="rgb(199,99,0)" fg:x="2736" fg:w="2"/><text x="94.3699%" y="399.50"></text></g><g><title>[libc.so.6] (13 samples, 0.45%)</title><rect x="94.3890%" y="373" width="0.4475%" height="15" fill="rgb(213,213,64)" fg:x="2742" fg:w="13"/><text x="94.5765%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="94.8021%" y="357" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="2754" fg:w="1"/><text x="94.9896%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.69%)</title><rect x="94.1824%" y="453" width="0.6885%" height="15" fill="rgb(234,134,0)" fg:x="2736" fg:w="20"/><text x="94.3699%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.69%)</title><rect x="94.1824%" y="437" width="0.6885%" height="15" fill="rgb(232,132,0)" fg:x="2736" fg:w="20"/><text x="94.3699%" y="447.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.69%)</title><rect x="94.1824%" y="421" width="0.6885%" height="15" fill="rgb(203,103,0)" fg:x="2736" fg:w="20"/><text x="94.3699%" y="431.50"></text></g><g><title>realloc (18 samples, 0.62%)</title><rect x="94.2513%" y="405" width="0.6196%" height="15" fill="rgb(189,189,55)" fg:x="2738" fg:w="18"/><text x="94.4388%" y="415.50"></text></g><g><title>[libc.so.6] (15 samples, 0.52%)</title><rect x="94.3546%" y="389" width="0.5164%" height="15" fill="rgb(213,213,64)" fg:x="2741" fg:w="15"/><text x="94.5421%" y="399.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="94.8365%" y="373" width="0.0344%" height="15" fill="rgb(207,207,61)" fg:x="2755" fg:w="1"/><text x="95.0240%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.10%)</title><rect x="94.8709%" y="453" width="0.1033%" height="15" fill="rgb(232,132,0)" fg:x="2756" fg:w="3"/><text x="95.0584%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (74 samples, 2.55%)</title><rect x="94.1824%" y="469" width="2.5473%" height="15" fill="rgb(227,127,0)" fg:x="2736" fg:w="74"/><text x="94.3699%" y="479.50">all..</text></g><g><title>malloc (51 samples, 1.76%)</title><rect x="94.9742%" y="453" width="1.7556%" height="15" fill="rgb(221,221,67)" fg:x="2759" fg:w="51"/><text x="95.1617%" y="463.50">m..</text></g><g><title>[libc.so.6] (42 samples, 1.45%)</title><rect x="95.2840%" y="437" width="1.4458%" height="15" fill="rgb(213,213,64)" fg:x="2768" fg:w="42"/><text x="95.4715%" y="447.50">[..</text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="96.5921%" y="421" width="0.1377%" height="15" fill="rgb(213,213,64)" fg:x="2806" fg:w="4"/><text x="96.7796%" y="431.50"></text></g><g><title>__default_morecore (1 samples, 0.03%)</title><rect x="96.6954%" y="405" width="0.0344%" height="15" fill="rgb(194,194,57)" fg:x="2809" fg:w="1"/><text x="96.8829%" y="415.50"></text></g><g><title>__sbrk (1 samples, 0.03%)</title><rect x="96.6954%" y="389" width="0.0344%" height="15" fill="rgb(193,193,56)" fg:x="2809" fg:w="1"/><text x="96.8829%" y="399.50"></text></g><g><title>brk (1 samples, 0.03%)</title><rect x="96.6954%" y="373" width="0.0344%" height="15" fill="rgb(175,175,50)" fg:x="2809" fg:w="1"/><text x="96.8829%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="96.7298%" y="469" width="0.0344%" height="15" fill="rgb(235,135,0)" fg:x="2810" fg:w="1"/><text x="96.9173%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="96.7298%" y="453" width="0.0344%" height="15" fill="rgb(195,95,0)" fg:x="2810" fg:w="1"/><text x="96.9173%" y="463.50"></text></g><g><title>core::cmp::max (2 samples, 0.07%)</title><rect x="96.7642%" y="469" width="0.0688%" height="15" fill="rgb(202,102,0)" fg:x="2811" fg:w="2"/><text x="96.9517%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.07%)</title><rect x="96.7642%" y="453" width="0.0688%" height="15" fill="rgb(219,119,0)" fg:x="2811" fg:w="2"/><text x="96.9517%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (82 samples, 2.82%)</title><rect x="94.0448%" y="485" width="2.8227%" height="15" fill="rgb(205,105,0)" fg:x="2732" fg:w="82"/><text x="94.2323%" y="495.50">allo..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="96.8330%" y="469" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="2813" fg:w="1"/><text x="97.0205%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="96.8330%" y="453" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="2813" fg:w="1"/><text x="97.0205%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (83 samples, 2.86%)</title><rect x="94.0448%" y="501" width="2.8571%" height="15" fill="rgb(219,119,0)" fg:x="2732" fg:w="83"/><text x="94.2323%" y="511.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="96.8675%" y="485" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="2814" fg:w="1"/><text x="97.0550%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.14%)</title><rect x="96.9019%" y="501" width="0.1377%" height="15" fill="rgb(225,125,0)" fg:x="2815" fg:w="4"/><text x="97.0894%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.14%)</title><rect x="96.9019%" y="485" width="0.1377%" height="15" fill="rgb(251,151,0)" fg:x="2815" fg:w="4"/><text x="97.0894%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (113 samples, 3.89%)</title><rect x="93.8382%" y="517" width="3.8898%" height="15" fill="rgb(254,154,0)" fg:x="2726" fg:w="113"/><text x="94.0257%" y="527.50">alloc:..</text></g><g><title>core::ptr::write (20 samples, 0.69%)</title><rect x="97.0396%" y="501" width="0.6885%" height="15" fill="rgb(230,130,0)" fg:x="2819" fg:w="20"/><text x="97.2271%" y="511.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="97.7625%" y="437" width="0.0344%" height="15" fill="rgb(223,223,67)" fg:x="2840" fg:w="1"/><text x="97.9500%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="97.7625%" y="421" width="0.0344%" height="15" fill="rgb(213,113,0)" fg:x="2840" fg:w="1"/><text x="97.9500%" y="431.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="97.7969%" y="437" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="2841" fg:w="1"/><text x="97.9844%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.38%)</title><rect x="97.7281%" y="517" width="0.3787%" height="15" fill="rgb(199,99,0)" fg:x="2839" fg:w="11"/><text x="97.9156%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.38%)</title><rect x="97.7281%" y="501" width="0.3787%" height="15" fill="rgb(201,101,0)" fg:x="2839" fg:w="11"/><text x="97.9156%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.38%)</title><rect x="97.7281%" y="485" width="0.3787%" height="15" fill="rgb(226,126,0)" fg:x="2839" fg:w="11"/><text x="97.9156%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.34%)</title><rect x="97.7625%" y="469" width="0.3442%" height="15" fill="rgb(211,111,0)" fg:x="2840" fg:w="10"/><text x="97.9500%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.34%)</title><rect x="97.7625%" y="453" width="0.3442%" height="15" fill="rgb(194,94,0)" fg:x="2840" fg:w="10"/><text x="97.9500%" y="463.50"></text></g><g><title>cfree (8 samples, 0.28%)</title><rect x="97.8313%" y="437" width="0.2754%" height="15" fill="rgb(178,178,51)" fg:x="2842" fg:w="8"/><text x="98.0188%" y="447.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="97.9346%" y="421" width="0.1721%" height="15" fill="rgb(213,213,64)" fg:x="2845" fg:w="5"/><text x="98.1221%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="98.0379%" y="405" width="0.0688%" height="15" fill="rgb(213,213,64)" fg:x="2848" fg:w="2"/><text x="98.2254%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.03%)</title><rect x="98.1067%" y="517" width="0.0344%" height="15" fill="rgb(241,141,0)" fg:x="2850" fg:w="1"/><text x="98.2942%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.03%)</title><rect x="98.1067%" y="501" width="0.0344%" height="15" fill="rgb(193,93,0)" fg:x="2850" fg:w="1"/><text x="98.2942%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.03%)</title><rect x="98.1067%" y="485" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="2850" fg:w="1"/><text x="98.2942%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.24%)</title><rect x="98.5886%" y="341" width="0.2410%" height="15" fill="rgb(222,122,0)" fg:x="2864" fg:w="7"/><text x="98.7761%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.24%)</title><rect x="98.5886%" y="325" width="0.2410%" height="15" fill="rgb(249,149,0)" fg:x="2864" fg:w="7"/><text x="98.7761%" y="335.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.24%)</title><rect x="98.5886%" y="309" width="0.2410%" height="15" fill="rgb(228,128,0)" fg:x="2864" fg:w="7"/><text x="98.7761%" y="319.50"></text></g><g><title>malloc (7 samples, 0.24%)</title><rect x="98.5886%" y="293" width="0.2410%" height="15" fill="rgb(221,221,67)" fg:x="2864" fg:w="7"/><text x="98.7761%" y="303.50"></text></g><g><title>[libc.so.6] (6 samples, 0.21%)</title><rect x="98.6231%" y="277" width="0.2065%" height="15" fill="rgb(213,213,64)" fg:x="2865" fg:w="6"/><text x="98.8106%" y="287.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as alloc::string::ToString&gt;::to_string (9 samples, 0.31%)</title><rect x="98.5886%" y="501" width="0.3098%" height="15" fill="rgb(242,142,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (9 samples, 0.31%)</title><rect x="98.5886%" y="485" width="0.3098%" height="15" fill="rgb(209,109,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (9 samples, 0.31%)</title><rect x="98.5886%" y="469" width="0.3098%" height="15" fill="rgb(211,111,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.31%)</title><rect x="98.5886%" y="453" width="0.3098%" height="15" fill="rgb(197,97,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.31%)</title><rect x="98.5886%" y="437" width="0.3098%" height="15" fill="rgb(224,124,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.31%)</title><rect x="98.5886%" y="421" width="0.3098%" height="15" fill="rgb(238,138,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.31%)</title><rect x="98.5886%" y="405" width="0.3098%" height="15" fill="rgb(61,175,175)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.31%)</title><rect x="98.5886%" y="389" width="0.3098%" height="15" fill="rgb(248,148,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.31%)</title><rect x="98.5886%" y="373" width="0.3098%" height="15" fill="rgb(245,145,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.31%)</title><rect x="98.5886%" y="357" width="0.3098%" height="15" fill="rgb(247,147,0)" fg:x="2864" fg:w="9"/><text x="98.7761%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.07%)</title><rect x="98.8296%" y="341" width="0.0688%" height="15" fill="rgb(235,135,0)" fg:x="2871" fg:w="2"/><text x="99.0171%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.07%)</title><rect x="98.8296%" y="325" width="0.0688%" height="15" fill="rgb(195,95,0)" fg:x="2871" fg:w="2"/><text x="99.0171%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.8985%" y="501" width="0.0344%" height="15" fill="rgb(204,104,0)" fg:x="2873" fg:w="1"/><text x="99.0860%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.8985%" y="485" width="0.0344%" height="15" fill="rgb(249,149,0)" fg:x="2873" fg:w="1"/><text x="99.0860%" y="495.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (8 samples, 0.28%)</title><rect x="98.9329%" y="501" width="0.2754%" height="15" fill="rgb(242,142,0)" fg:x="2874" fg:w="8"/><text x="99.1204%" y="511.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.21%)</title><rect x="99.0017%" y="485" width="0.2065%" height="15" fill="rgb(221,121,0)" fg:x="2876" fg:w="6"/><text x="99.1892%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="99.2771%" y="437" width="0.0344%" height="15" fill="rgb(234,134,0)" fg:x="2884" fg:w="1"/><text x="99.4646%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="99.2771%" y="421" width="0.0344%" height="15" fill="rgb(232,132,0)" fg:x="2884" fg:w="1"/><text x="99.4646%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="99.2771%" y="405" width="0.0344%" height="15" fill="rgb(203,103,0)" fg:x="2884" fg:w="1"/><text x="99.4646%" y="415.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="99.2771%" y="389" width="0.0344%" height="15" fill="rgb(189,189,55)" fg:x="2884" fg:w="1"/><text x="99.4646%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.17%)</title><rect x="99.2771%" y="453" width="0.1721%" height="15" fill="rgb(227,127,0)" fg:x="2884" fg:w="5"/><text x="99.4646%" y="463.50"></text></g><g><title>malloc (4 samples, 0.14%)</title><rect x="99.3115%" y="437" width="0.1377%" height="15" fill="rgb(221,221,67)" fg:x="2885" fg:w="4"/><text x="99.4990%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="99.3115%" y="421" width="0.1377%" height="15" fill="rgb(213,213,64)" fg:x="2885" fg:w="4"/><text x="99.4990%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.28%)</title><rect x="99.2083%" y="501" width="0.2754%" height="15" fill="rgb(254,154,0)" fg:x="2882" fg:w="8"/><text x="99.3958%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.24%)</title><rect x="99.2427%" y="485" width="0.2410%" height="15" fill="rgb(219,119,0)" fg:x="2883" fg:w="7"/><text x="99.4302%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.24%)</title><rect x="99.2427%" y="469" width="0.2410%" height="15" fill="rgb(205,105,0)" fg:x="2883" fg:w="7"/><text x="99.4302%" y="479.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="99.4492%" y="453" width="0.0344%" height="15" fill="rgb(202,102,0)" fg:x="2889" fg:w="1"/><text x="99.6367%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="99.4492%" y="437" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="2889" fg:w="1"/><text x="99.6367%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="99.4836%" y="501" width="0.1033%" height="15" fill="rgb(201,101,0)" fg:x="2890" fg:w="3"/><text x="99.6711%" y="511.50"></text></g><g><title>pillar::parser::Token::new (1,192 samples, 41.03%)</title><rect x="58.5886%" y="581" width="41.0327%" height="15" fill="rgb(81,193,193)" fg:x="1702" fg:w="1192"/><text x="58.7761%" y="591.50">pillar::parser::Token::new</text></g><g><title>pillar::parser::Token::parse (1,192 samples, 41.03%)</title><rect x="58.5886%" y="565" width="41.0327%" height="15" fill="rgb(66,180,180)" fg:x="1702" fg:w="1192"/><text x="58.7761%" y="575.50">pillar::parser::Token::parse</text></g><g><title>pillar::parser::Token::parse (975 samples, 33.56%)</title><rect x="66.0585%" y="549" width="33.5628%" height="15" fill="rgb(66,180,180)" fg:x="1919" fg:w="975"/><text x="66.2460%" y="559.50">pillar::parser::Token::parse</text></g><g><title>pillar::parser::Token::parse (282 samples, 9.71%)</title><rect x="89.9139%" y="533" width="9.7074%" height="15" fill="rgb(66,180,180)" fg:x="2612" fg:w="282"/><text x="90.1014%" y="543.50">pillar::parser::Tok..</text></g><g><title>pillar::parser::Token::parse (43 samples, 1.48%)</title><rect x="98.1411%" y="517" width="1.4802%" height="15" fill="rgb(66,180,180)" fg:x="2851" fg:w="43"/><text x="98.3286%" y="527.50">p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="99.5869%" y="501" width="0.0344%" height="15" fill="rgb(199,99,0)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="99.5869%" y="485" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.5869%" y="469" width="0.0344%" height="15" fill="rgb(226,126,0)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="99.5869%" y="453" width="0.0344%" height="15" fill="rgb(211,111,0)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="99.5869%" y="437" width="0.0344%" height="15" fill="rgb(194,94,0)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="447.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="99.5869%" y="421" width="0.0344%" height="15" fill="rgb(178,178,51)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.5869%" y="405" width="0.0344%" height="15" fill="rgb(213,213,64)" fg:x="2893" fg:w="1"/><text x="99.7744%" y="415.50"></text></g><g><title>core::str::converts::from_utf8 (8 samples, 0.28%)</title><rect x="99.6213%" y="501" width="0.2754%" height="15" fill="rgb(231,131,0)" fg:x="2894" fg:w="8"/><text x="99.8088%" y="511.50"></text></g><g><title>core::str::validations::run_utf8_validation (8 samples, 0.28%)</title><rect x="99.6213%" y="485" width="0.2754%" height="15" fill="rgb(196,96,0)" fg:x="2894" fg:w="8"/><text x="99.8088%" y="495.50"></text></g><g><title>core::str::validations::contains_nonascii (4 samples, 0.14%)</title><rect x="99.7590%" y="469" width="0.1377%" height="15" fill="rgb(196,96,0)" fg:x="2898" fg:w="4"/><text x="99.9465%" y="479.50"></text></g><g><title>_start (2,567 samples, 88.36%)</title><rect x="11.5663%" y="853" width="88.3649%" height="15" fill="rgb(227,227,69)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="863.50">_start</text></g><g><title>__libc_start_main (2,567 samples, 88.36%)</title><rect x="11.5663%" y="837" width="88.3649%" height="15" fill="rgb(196,196,57)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="847.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,567 samples, 88.36%)</title><rect x="11.5663%" y="821" width="88.3649%" height="15" fill="rgb(213,213,64)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="831.50">[libc.so.6]</text></g><g><title>main (2,567 samples, 88.36%)</title><rect x="11.5663%" y="805" width="88.3649%" height="15" fill="rgb(181,181,52)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (2,567 samples, 88.36%)</title><rect x="11.5663%" y="789" width="88.3649%" height="15" fill="rgb(240,140,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,567 samples, 88.36%)</title><rect x="11.5663%" y="773" width="88.3649%" height="15" fill="rgb(211,111,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,567 samples, 88.36%)</title><rect x="11.5663%" y="757" width="88.3649%" height="15" fill="rgb(207,107,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,567 samples, 88.36%)</title><rect x="11.5663%" y="741" width="88.3649%" height="15" fill="rgb(235,135,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (2,567 samples, 88.36%)</title><rect x="11.5663%" y="725" width="88.3649%" height="15" fill="rgb(194,94,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="735.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (2,567 samples, 88.36%)</title><rect x="11.5663%" y="709" width="88.3649%" height="15" fill="rgb(211,111,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,567 samples, 88.36%)</title><rect x="11.5663%" y="693" width="88.3649%" height="15" fill="rgb(207,107,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,567 samples, 88.36%)</title><rect x="11.5663%" y="677" width="88.3649%" height="15" fill="rgb(235,135,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,567 samples, 88.36%)</title><rect x="11.5663%" y="661" width="88.3649%" height="15" fill="rgb(210,110,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (2,567 samples, 88.36%)</title><rect x="11.5663%" y="645" width="88.3649%" height="15" fill="rgb(212,112,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,567 samples, 88.36%)</title><rect x="11.5663%" y="629" width="88.3649%" height="15" fill="rgb(215,115,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,567 samples, 88.36%)</title><rect x="11.5663%" y="613" width="88.3649%" height="15" fill="rgb(212,112,0)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="623.50">core::ops::function::FnOnce::call_once</text></g><g><title>pillar::main (2,567 samples, 88.36%)</title><rect x="11.5663%" y="597" width="88.3649%" height="15" fill="rgb(103,214,214)" fg:x="336" fg:w="2567"/><text x="11.7538%" y="607.50">pillar::main</text></g><g><title>std::fs::read_to_string (9 samples, 0.31%)</title><rect x="99.6213%" y="581" width="0.3098%" height="15" fill="rgb(195,95,0)" fg:x="2894" fg:w="9"/><text x="99.8088%" y="591.50"></text></g><g><title>std::fs::read_to_string::inner (9 samples, 0.31%)</title><rect x="99.6213%" y="565" width="0.3098%" height="15" fill="rgb(230,130,0)" fg:x="2894" fg:w="9"/><text x="99.8088%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (9 samples, 0.31%)</title><rect x="99.6213%" y="549" width="0.3098%" height="15" fill="rgb(216,116,0)" fg:x="2894" fg:w="9"/><text x="99.8088%" y="559.50"></text></g><g><title>std::io::default_read_to_string (9 samples, 0.31%)</title><rect x="99.6213%" y="533" width="0.3098%" height="15" fill="rgb(213,113,0)" fg:x="2894" fg:w="9"/><text x="99.8088%" y="543.50"></text></g><g><title>std::io::append_to_string (9 samples, 0.31%)</title><rect x="99.6213%" y="517" width="0.3098%" height="15" fill="rgb(242,142,0)" fg:x="2894" fg:w="9"/><text x="99.8088%" y="527.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (1 samples, 0.03%)</title><rect x="99.8967%" y="501" width="0.0344%" height="15" fill="rgb(209,109,0)" fg:x="2902" fg:w="1"/><text x="100.0842%" y="511.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.03%)</title><rect x="99.8967%" y="485" width="0.0344%" height="15" fill="rgb(219,119,0)" fg:x="2902" fg:w="1"/><text x="100.0842%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.03%)</title><rect x="99.8967%" y="469" width="0.0344%" height="15" fill="rgb(198,98,0)" fg:x="2902" fg:w="1"/><text x="100.0842%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.03%)</title><rect x="99.8967%" y="453" width="0.0344%" height="15" fill="rgb(196,96,0)" fg:x="2902" fg:w="1"/><text x="100.0842%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.03%)</title><rect x="99.8967%" y="437" width="0.0344%" height="15" fill="rgb(217,117,0)" fg:x="2902" fg:w="1"/><text x="100.0842%" y="447.50"></text></g><g><title>read (1 samples, 0.03%)</title><rect x="99.8967%" y="421" width="0.0344%" height="15" fill="rgb(191,191,56)" fg:x="2902" fg:w="1"/><text x="100.0842%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="99.9312%" y="853" width="0.0344%" height="15" fill="rgb(190,90,0)" fg:x="2903" fg:w="1"/><text x="100.1187%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="99.9312%" y="837" width="0.0344%" height="15" fill="rgb(205,105,0)" fg:x="2903" fg:w="1"/><text x="100.1187%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="99.9312%" y="821" width="0.0344%" height="15" fill="rgb(240,140,0)" fg:x="2903" fg:w="1"/><text x="100.1187%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="99.9312%" y="805" width="0.0344%" height="15" fill="rgb(201,101,0)" fg:x="2903" fg:w="1"/><text x="100.1187%" y="815.50"></text></g><g><title>all (2,905 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(218,218,65)" fg:x="0" fg:w="2905"/><text x="0.1875%" y="895.50"></text></g><g><title>pillar (2,905 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(199,199,58)" fg:x="0" fg:w="2905"/><text x="0.1875%" y="879.50">pillar</text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.03%)</title><rect x="99.9656%" y="853" width="0.0344%" height="15" fill="rgb(220,120,0)" fg:x="2904" fg:w="1"/><text x="100.1531%" y="863.50"></text></g></svg></svg>